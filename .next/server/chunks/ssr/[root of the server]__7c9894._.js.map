{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/components/utils/suppress-console.ts"],"sourcesContent":["if (typeof window !== 'undefined') {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        args[0]?.includes?.('WalletConnectionError: Connection rejected') ||\n        args[0]?.message?.includes?.('Connection rejected') ||\n        (typeof args[0] === 'object' && args[0]?.toString?.()?.includes?.('Connection rejected'))\n      ) {\n        return;\n      }\n      originalError.apply(console, args);\n    };\n  }\n  \n  export {};"],"names":[],"mappings":";AAAA,uCAAmC;;AAYjC"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_contexts/privy.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\nimport {PrivyProvider as PrivyProviderBase} from '@privy-io/react-auth';\nimport {toSolanaWalletConnectors} from '@privy-io/react-auth/solana';\nimport afilogo from \"../../public/afilogo.png\"\n\nimport '@/components/utils/suppress-console'\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst solanaConnectors = toSolanaWalletConnectors({\n    shouldAutoConnect: true,\n});\n\nexport const PrivyProvider: React.FC<Props> = ({ children }) => {\n    return (\n        <PrivyProviderBase\n            appId={process.env.NEXT_PUBLIC_PRIVY_APP_ID!}\n            config={{\n                appearance: {\n                    theme: 'dark',\n                    accentColor: '#d19900',\n                    logo: \"/afilogo.png\",\n                    walletChainType: 'solana-only',\n                    showWalletLoginFirst: true,\n                },\n                loginMethods: ['email', 'wallet', 'google', 'twitter', 'discord', 'github'],\n                externalWallets: {\n                    solana: {\n                        connectors: solanaConnectors\n                    }\n                },\n                solanaClusters: [\n                    {\n                        name: 'mainnet-beta',\n                        rpcUrl: process.env.NEXT_PUBLIC_SOLANA_RPC_URL!,\n                    }\n                ]\n            }}\n        >\n            {children}\n        </PrivyProviderBase>\n    )\n}"],"names":[],"mappings":";;;;AAQA;AAHA;AADA;AAJA;;;;;AAcA,MAAM,mBAAmB,CAAA,GAAA,kNAAA,CAAA,2BAAwB,AAAD,EAAE;IAC9C,mBAAmB;AACvB;AAEO,MAAM,gBAAiC,CAAC,EAAE,QAAQ,EAAE;IACvD,qBACI,8OAAC,qOAAA,CAAA,gBAAiB;QACd,KAAK;QACL,QAAQ;YACJ,YAAY;gBACR,OAAO;gBACP,aAAa;gBACb,MAAM;gBACN,iBAAiB;gBACjB,sBAAsB;YAC1B;YACA,cAAc;gBAAC;gBAAS;gBAAU;gBAAU;gBAAW;gBAAW;aAAS;YAC3E,iBAAiB;gBACb,QAAQ;oBACJ,YAAY;gBAChB;YACJ;YACA,gBAAgB;gBACZ;oBACI,MAAM;oBACN,MAAM;gBACV;aACH;QACL;kBAEC;;;;;;AAGb"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_contexts/color-mode.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, ReactNode, useState, useEffect } from 'react';\n\nimport { getCookie, setCookie } from 'cookies-next';\n\nexport enum ColorMode {\n    LIGHT = 'light',\n    DARK = 'dark',\n}\n\ninterface ColorModeContextType {\n    mode: ColorMode;\n    setMode: (mode: ColorMode) => void;\n}\n\nconst ColorModeContext = createContext<ColorModeContextType>({\n    mode: ColorMode.DARK,\n    setMode: () => {},\n});\n\nexport const ColorModeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n\n    const [mode, setMode] = useState<ColorMode>(ColorMode.DARK);\n\n    useEffect(() => {\n\t\tconst theme = getCookie('theme');\n        setMode(theme === 'dark' ? ColorMode.DARK : ColorMode.LIGHT);\n\t}, []);\n\n    useEffect(() => {\n\t\tif (mode === ColorMode.DARK) {\n\t\t\tdocument.documentElement.classList.add('dark');\n\t\t\tsetCookie('theme', ColorMode.DARK);\n\t\t} else {\n\t\t\tdocument.documentElement.classList.remove('dark');\n\t\t\tsetCookie('theme', ColorMode.LIGHT);\n\t\t}\n\t}, [mode]);\n\n    return (\n        <ColorModeContext.Provider value={{ mode, setMode }}>\n            {children}\n        </ColorModeContext.Provider>\n    );\n};\n\nexport const useColorMode = () => useContext(ColorModeContext);"],"names":[],"mappings":";;;;;;AAEA;AAEA;AAJA;;;;AAMO,IAAA,AAAK,mCAAA;;;WAAA;;AAUZ,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAwB;IACzD,IAAI;IACJ,SAAS,KAAO;AACpB;AAEO,MAAM,oBAAuD,CAAC,EAAE,QAAQ,EAAE;IAE7E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACZ,MAAM,QAAQ,CAAA,GAAA,+IAAA,CAAA,YAAS,AAAD,EAAE;QAClB,QAAQ,UAAU;IACzB,GAAG,EAAE;IAEF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACZ,IAAI,iBAAyB;YAC5B,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACvC,CAAA,GAAA,+IAAA,CAAA,YAAS,AAAD,EAAE;QACX,OAAO;YACN,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC1C,CAAA,GAAA,+IAAA,CAAA,YAAS,AAAD,EAAE;QACX;IACD,GAAG;QAAC;KAAK;IAEN,qBACI,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBAC7C;;;;;;AAGb;AAEO,MAAM,eAAe,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_contexts/posthog.tsx"],"sourcesContent":["'use client'\n\nimport posthog from 'posthog-js'\n\nimport { PostHogProvider as PHProvider } from 'posthog-js/react'\nimport React from 'react';\n\nif (typeof window !== 'undefined') {\n  posthog.init(process.env.NEXT_PUBLIC_POSTHOG_KEY!, {\n    api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST,\n    person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well\n  })\n}\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nexport const PostHogProvider: React.FC<Props> = ({ children }) => {\n    return (\n        <PHProvider \n            client={posthog}\n        >\n            {children}\n        </PHProvider>\n    )\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAOA,uCAAmC;;AAKnC;AAMO,MAAM,kBAAmC,CAAC,EAAE,QAAQ,EAAE;IACzD,qBACI,8OAAC,8JAAA,CAAA,kBAAU;QACP,QAAQ,+IAAA,CAAA,UAAO;kBAEd;;;;;;AAGb"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_contexts/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { Analytics } from \"@vercel/analytics/react\"\n\nimport { PrivyProvider } from \"./privy\";\nimport { ColorModeProvider } from \"./color-mode\";\nimport { PostHogProvider } from \"./posthog\";\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst Providers: React.FC<Props> = ({ children }) => {\n    return (\n        <PostHogProvider>\n            <PrivyProvider>\n                <ColorModeProvider>\n                    <Analytics />\n                    {children}\n                </ColorModeProvider>\n            </PrivyProvider>\n        </PostHogProvider>\n    )\n}\n\nexport default Providers;\n\nexport * from \"./color-mode\""],"names":[],"mappings":";;;;AAMA;AAFA;AACA;AAHA;AAFA;;;;;;AAYA,MAAM,YAA6B,CAAC,EAAE,QAAQ,EAAE;IAC5C,qBACI,8OAAC,4HAAA,CAAA,kBAAe;kBACZ,cAAA,8OAAC,0HAAA,CAAA,gBAAa;sBACV,cAAA,8OAAC,kIAAA,CAAA,oBAAiB;;kCACd,8OAAC,gKAAA,CAAA,YAAS;;;;;oBACT;;;;;;;;;;;;;;;;;AAKrB;uCAEe"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}