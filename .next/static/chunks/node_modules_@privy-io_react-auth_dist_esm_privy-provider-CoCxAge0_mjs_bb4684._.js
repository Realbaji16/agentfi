(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@privy-io_react-auth_dist_esm_privy-provider-CoCxAge0_mjs_bb4684._.js", {

"[project]/node_modules/@privy-io/react-auth/dist/esm/privy-provider-CoCxAge0.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "C": (()=>kr),
    "E": (()=>Wr),
    "P": (()=>Xr),
    "a": (()=>Sr),
    "b": (()=>Pr),
    "c": (()=>Hr),
    "d": (()=>Kr),
    "e": (()=>Gr),
    "f": (()=>zr),
    "g": (()=>Vr),
    "h": (()=>qr),
    "i": (()=>$r),
    "j": (()=>Yr),
    "l": (()=>Nr)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$device$2d$detect$2f$dist$2f$lib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-device-detect/dist/lib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/node_modules/eventemitter3/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/errors.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/configuration/context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/plugins/context/PrivyPluginContext.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/screens/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/events-context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/telegram.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/storage.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/constants.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/privyProxyProvider.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$providers$2f$lib$2e$esm$2f$web3$2d$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@ethersproject/providers/lib.esm/web3-provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@ethersproject/address/lib.esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/client/user.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/errors.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/utils/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/rpc/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformResponseToSnakeCase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/passkeys/transformResponseToSnakeCase.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/sendCrossAppRequest.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/index.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$solana$2d$funding$2f$id$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/plugins/solana-funding/id.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/isBaseConnectedEthereumWallet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/siwe.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/siws.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/delegated-actions.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/farcaster.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$guest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/guest.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/authFlow.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$popupCrossAppAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/popupCrossAppAuthFlow.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/isEmbeddedWebview.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/cross-app/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/oauth/OAuthFlow.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/embeddedWalletRecovery.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/popupOAuthFlow.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/passkey.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/email.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/sms.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/siwe.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/errors.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/prepareFundingModalData.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$privy$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/privy-context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$useWallets$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/useWallets.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$captcha$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/captcha-context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$internal$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/internal-context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$recent$2d$login$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/recent-login/context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$modal$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/modal-context.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$Captcha$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/Captcha.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$styles$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/styles.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$LoginModal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/LoginModal.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$EmbeddedWalletIframe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/EmbeddedWalletIframe.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$LandingScreen$2f$styles$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/screens/LandingScreen/styles.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$TelegramLoginButton$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/components/TelegramLoginButton.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/hooks/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/solana/transaction.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$custom$2d$jwt$2d$account$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/custom-jwt-account.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mipd$2f$dist$2f$esm$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/mipd/dist/esm/store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$detectCompletingOAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/auth-flows/oauth/detectCompletingOAuthFlow.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/walletconnect-v2.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/solana/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$is$2d$wallet$2d$installed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/is-wallet-installed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/areWalletArraysEqual.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$caip2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/caip2.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/funding/isFundingEnabled.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/utils/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$utils$2f$gas$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/utils/gas.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/errors.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/solana/transaction.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$toDisplayFromAccountType$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/toDisplayFromAccountType.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popup$2f$triggerPopup$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/popup/triggerPopup.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/providerTypes.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/rpc/types.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$getRpcTimeout$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/getRpcTimeout.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/node_modules/eventemitter3/index.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$phantom$2d$solana$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/phantom-solana.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/ethereum/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/embedded.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/injected.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$metamask$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/metamask.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$phantom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/phantom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$coinbase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/connectors/coinbase.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$http$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/http.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/paths.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformOptionsToCamelCase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/passkeys/transformOptionsToCamelCase.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/session.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$accessToken$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/accessToken.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$smart$2d$wallet$2d$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@privy-io/react-auth/dist/esm/lib/smart-wallet-helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$v4$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__v4$3e$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/v4.js [app-client] (ecmascript) <export default as v4>");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
class Wr extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"] {
    async handleSendTransaction(e) {
        if (!e.params || !Array.isArray(e.params)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
        let t = e.params[0];
        if (!await Hr() || !this.address) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
        return (await zr(t, void 0, void 0, this.address)).hash;
    }
    handleSwitchEthereumChain(e) {
        let t;
        if (!e.params || !Array.isArray(e.params)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
        if ("string" == typeof e.params[0]) t = e.params[0];
        else {
            if (!("chainId" in e.params[0]) || "string" != typeof e.params[0].chainId) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"](`Invalid params for ${e.method}`, 4200);
            t = e.params[0].chainId;
        }
        this.chainId = Number(t), this.provider = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getJsonRpcProvider"])(this.chainId, this.chains, this.rpcConfig, {
            appId: this.appId
        }), this.emit("chainChanged", t);
    }
    async handlePersonalSign(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for personal_sign");
        let t = e.params[0], r = e.params[1];
        return await Kr(t, void 0, r);
    }
    async handleSignedTypedData(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for eth_signTypedData_v4");
        let t = e.params[0], r = "string" == typeof e.params[1] ? JSON.parse(e.params[1]) : e.params[1];
        return await Gr((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(r), void 0, t);
    }
    async handleEstimateGas(e) {
        if (!e.params || !Array.isArray(e.params)) throw Error("Invalid params for eth_estimateGas");
        delete e.params[0].gasPrice, delete e.params[0].maxFeePerGas, delete e.params[0].maxPriorityFeePerGas;
        let t = {
            ...e.params[0],
            chainId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(this.chainId)
        };
        try {
            return await this.provider.send("eth_estimateGas", [
                t
            ]);
        } catch (e) {
            console.warn(`Gas estimation failed with error: ${e}. Retrying gas estimation by omitting the 'from' address`);
            try {
                return delete t.from, await this.provider.send("eth_estimateGas", [
                    t
                ]);
            } catch (t) {
                throw console.warn(`Gas estimation failed with error: ${t} when omitting the 'from' address`), e;
            }
        }
    }
    async request(e) {
        switch(console.debug("Embedded1193Provider.request() called with args", e), e.method){
            case "eth_accounts":
            case "eth_requestAccounts":
                return this.address ? [
                    this.address
                ] : [];
            case "eth_chainId":
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(this.chainId);
            case "eth_estimateGas":
                return this.handleEstimateGas(e);
            case "eth_sendTransaction":
                return this.handleSendTransaction(e);
            case "wallet_switchEthereumChain":
                return this.handleSwitchEthereumChain(e);
            case "personal_sign":
                return this.handlePersonalSign(e);
            case "eth_signTypedData_v4":
                return this.handleSignedTypedData(e);
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSupportedEthereumRpcMethod"])(e.method)) return this.provider.send(e.method, e.params);
        {
            let t = await Hr();
            if (await qr(), !t || !this.address) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
            try {
                return (await this.walletProxy.rpc({
                    accessToken: t,
                    entropyId: this.entropyId,
                    entropyIdVerifier: this.entropyIdVerifier,
                    chainType: "ethereum",
                    hdWalletIndex: this.walletIndex,
                    request: {
                        method: e.method,
                        params: e.params
                    }
                })).response.data;
            } catch (e) {
                throw console.error(e), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$providerTypes$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedProviderError"]("Disconnected", 4900);
            }
        }
    }
    constructor({ walletProxy: e, address: t, entropyId: r, entropyIdVerifier: a, rpcConfig: n, chains: i, appId: o, chainId: s = 1, walletIndex: l }){
        super(), this.walletProxy = e, this.address = t, this.entropyId = r, this.entropyIdVerifier = a, this.chainId = s, this.rpcConfig = n, this.chains = i, this.provider = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getJsonRpcProvider"])(s, this.chains, n, {
            appId: o
        }), this.rpcTimeoutDuration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$getRpcTimeout$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRpcTimeout"])(n, "privy"), this.appId = o, this.walletIndex = l;
    }
}
class kr extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"] {
    get wallets() {
        let e = new Set, t = this.walletConnectors.flatMap((e)=>e.wallets).sort((e, t)=>e.connectedAt && t.connectedAt ? t.connectedAt - e.connectedAt : 0).filter((t)=>{
            let r = `${t.address}${t.walletClientType}${t.connectorType}`;
            return !e.has(r) && (e.add(r), !0);
        }), r = t.findIndex((e)=>e.address === (this.activeWallet ? this.activeWallet : "unknown"));
        return r >= 0 && t.unshift(t.splice(r, 1)[0]), t;
    }
    async initialize() {
        if (this.initialized) return;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CONNECTORS_STATE_KEY"]) && (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getKeys().forEach((e)=>{
            e.startsWith("walletconnect") && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del(e);
        }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CONNECTORS_STATE_KEY"]));
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectInjectedConnectors"])({
            store: this.store,
            walletList: this.walletList,
            externalWalletConfig: this.externalWalletConfig,
            walletChainType: this.walletChainType
        }).then((e)=>{
            e.forEach(({ type: e, eip6963InjectedProvider: t, legacyInjectedProvider: r })=>{
                this.createEthereumWalletConnector("injected", e, {
                    eip6963InjectedProvider: t,
                    legacyInjectedProvider: r
                });
            });
        });
        this.walletList.includes("coinbase_wallet") && this.createEthereumWalletConnector("coinbase_wallet", "coinbase_wallet"), !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$is$2d$wallet$2d$installed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPhantomInstalled"])() && this.walletList.includes("phantom") && ([
            "ethereum-only",
            "ethereum-and-solana"
        ].includes(this.walletChainType) && this.createEthereumWalletConnector("phantom", "phantom"), [
            "ethereum-and-solana",
            "solana-only"
        ].includes(this.walletChainType) && this.addWalletConnector(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$phantom$2d$solana$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PhantomSolanaNullWalletConnector"])), this.externalWalletConfig.walletConnect.enabled && this.createEthereumWalletConnector("wallet_connect_v2", "unknown"), this.externalWalletConfig.solana.connectors?.get().forEach(this.addSolanaWalletConnector), this.externalWalletConfig.solana.connectors?._setOnConnectorsUpdated?.((e)=>{
            e?.forEach(this.addSolanaWalletConnector);
        }), await e, this.initialized = !0;
    }
    findWalletConnector(e, t) {
        return "wallet_connect_v2" === e ? this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"]).find((t)=>t.connectorType === e) ?? null : this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"]).find((r)=>r.connectorType === e && r.walletClientType === t) ?? null;
    }
    findSolanaWalletConnector(e, t) {
        return this.walletConnectors.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSolanaWalletConnector"]).find((r)=>r.connectorType === e && r.walletClientType === t) ?? null;
    }
    findEmbeddedWalletConnectors() {
        return this.walletConnectors.filter((e)=>"embedded" === e.connectorType);
    }
    onInitialized(e) {
        e.wallets.forEach((e)=>{
            let t = this.storedConnections.find((t)=>t.address === e.address && t.connectorType === e.connectorType && t.walletClientType === e.walletClientType);
            t && (e.connectedAt = t.connectedAt);
        }), this.saveConnectionHistory(), this.emit("walletsUpdated"), this.emit("connectorInitialized");
    }
    onWalletsUpdated(e) {
        e.initialized && (this.saveConnectionHistory(), this.emit("walletsUpdated"));
    }
    addEmbeddedWalletConnectors({ walletProxy: e, rootWallet: t, embeddedWallets: r, defaultChain: a, appId: n }) {
        for (let i of r){
            let r = this.findEmbeddedWalletConnectors().find((e)=>e.walletIndex === i.walletIndex);
            if (r && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(r)) r.proxyProvider.walletProxy = e;
            else {
                let { entropyId: r, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(t), s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedWalletConnector"]({
                    provider: new Wr({
                        walletProxy: e,
                        address: i.address,
                        entropyId: r,
                        entropyIdVerifier: o,
                        rpcConfig: this.rpcConfig,
                        chains: this.chains,
                        appId: n,
                        chainId: a.id,
                        walletIndex: i.walletIndex
                    }),
                    chains: this.chains,
                    defaultChain: a,
                    rpcConfig: this.rpcConfig,
                    imported: !1,
                    walletIndex: i.walletIndex
                });
                this.addWalletConnector(s);
            }
        }
    }
    addImportedWalletConnector(e, t, r, a) {
        let n = this.findWalletConnector("embedded_imported", "privy");
        if (n && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(n)) n.proxyProvider.walletProxy = e;
        else {
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$embedded$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedWalletConnector"]({
                provider: new Wr({
                    walletProxy: e,
                    address: t,
                    entropyId: t,
                    entropyIdVerifier: "ethereum-address-verifier",
                    walletIndex: 0,
                    rpcConfig: this.rpcConfig,
                    chains: this.chains,
                    appId: a,
                    chainId: r.id
                }),
                chains: this.chains,
                walletIndex: 0,
                defaultChain: r,
                rpcConfig: this.rpcConfig,
                imported: !0
            });
            this.addWalletConnector(n);
        }
    }
    removeEmbeddedWalletConnectors() {
        this.walletConnectors = this.walletConnectors.filter((e)=>"embedded" !== e.connectorType), this.saveConnectionHistory(), this.storedConnections = Nr(), this.emit("walletsUpdated");
    }
    removeImportedWalletConnector() {
        let e = this.findWalletConnector("embedded_imported", "privy");
        if (e) {
            let t = this.walletConnectors.indexOf(e);
            this.walletConnectors.splice(t, 1), this.saveConnectionHistory(), this.storedConnections = Nr(), this.emit("walletsUpdated");
        }
    }
    async createEthereumWalletConnector(e, t, r) {
        let a = this.findWalletConnector(e, t);
        if (a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$ethereum$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEthereumWalletConnector"])(a)) return a instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"] && a.resetConnection(t), a;
        let n = (()=>"injected" !== e ? "coinbase_wallet" === e ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$coinbase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoinbaseWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, this.externalWalletConfig, this.privyAppName, this.privyAppLogo) : "phantom" === e ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$phantom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PhantomEthereumNullWalletConnector"](this.defaultChain) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"](this.walletConnectCloudProjectId, this.rpcConfig, this.chains, this.defaultChain, this.shouldEnforceDefaultChainOnConnect, this.privyAppId, this.privyAppName, t) : "metamask" === t && r?.eip6963InjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$metamask$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MetamaskWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, r?.eip6963InjectedProvider, "metamask") : "metamask" === t && r?.legacyInjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, r?.legacyInjectedProvider, "metamask") : "phantom" === t && r?.legacyInjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, r?.legacyInjectedProvider, "phantom") : r?.legacyInjectedProvider && "unknown_browser_extension" === t ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LegacyInjectedWalletConnector"](this.chains, this.defaultChain, this.rpcConfig, r?.legacyInjectedProvider) : r?.eip6963InjectedProvider ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$injected$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Injected6963WalletConnector"](this.chains, this.defaultChain, this.rpcConfig, r?.eip6963InjectedProvider, t) : void 0)();
        return n && this.addWalletConnector(n), n || null;
    }
    addWalletConnector(e) {
        this.walletConnectors.push(e), e.on("initialized", ()=>this.onInitialized(e)), e.on("walletsUpdated", ()=>this.onWalletsUpdated(e)), e.initialize().catch((e)=>{
            console.debug("Failed to initialize connector", e);
        });
    }
    saveConnectionHistory() {
        let e = this.wallets.map((e)=>({
                address: e.address,
                connectorType: e.connectorType,
                walletClientType: e.walletClientType,
                connectedAt: e.connectedAt
            }));
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CONNECTIONS_HISTORY_KEY"], e);
    }
    async activeWalletSign(e) {
        let t = this.wallets, r = t.length > 0 ? t[0] : null;
        return r && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(r) ? r.sign(e) : null;
    }
    setActiveWallet(e) {
        this.activeWallet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(e), this.emit("walletsUpdated");
    }
    constructor(e, t, r, a, n, i, o, s, l, c, d, u){
        super(), this.addSolanaWalletConnector = async (e)=>{
            this.findSolanaWalletConnector("solana_adapter", e.walletClientType) || this.addWalletConnector(e);
        }, this.getEthereumProvider = ()=>{
            let e = this.wallets[0], t = this.walletConnectors.find((t)=>t.wallets.find((t)=>t.address === e?.address));
            return e && t ? t.proxyProvider : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"];
        }, this.privyAppId = e, this.walletConnectCloudProjectId = t, this.rpcConfig = r, this.chains = a, this.defaultChain = n, this.walletConnectors = [], this.initialized = !1, this.store = i, this.walletList = o, this.shouldEnforceDefaultChainOnConnect = s, this.externalWalletConfig = l, this.privyAppName = c, this.privyAppLogo = d, this.walletChainType = u || "ethereum-only", this.storedConnections = Nr();
    }
}
const Nr = ()=>{
    let e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CONNECTIONS_HISTORY_KEY"]);
    return e && Array.isArray(e) && e.map((e)=>((e)=>e && "string" == typeof e.address && "string" == typeof e.connectorType && "string" == typeof e.walletClientType && "number" == typeof e.connectedAt)(e)).every(Boolean) ? e : [];
};
let br;
var Ur = 0, Or = "__private_" + Ur++ + "__getOrGenerateClientAnalyticsId";
class Sr {
    initializeConnectorManager({ walletConnectCloudProjectId: e, rpcConfig: t, chains: r, defaultChain: a, store: n, walletList: i, shouldEnforceDefaultChainOnConnect: o, externalWalletConfig: s, appName: l, walletChainType: c }) {
        this.connectors || (this.connectors = new kr(this.appId, e, t, r, a, n, i, o, s, l, void 0, c));
    }
    generateApi() {
        let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$http$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Http"]({
            appId: this.appId,
            appClientId: this.appClientId,
            client: this,
            defaults: {
                baseURL: this.apiUrl,
                timeout: this.timeout
            }
        });
        return this.session.api = e, e;
    }
    updateApiUrl(e) {
        this.apiUrl = e || this.fallbackApiUrl, this.api = this.generateApi(), e && (this.useServerCookies = !0);
    }
    authenticate() {
        if (!this.authFlow) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("No auth flow in progress.");
        return this.session.authenticate(this.authFlow);
    }
    async link() {
        if (!this.authFlow) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("No auth flow in progress.");
        let { oAuthTokens: e } = await this.session.link(this.authFlow);
        return {
            user: await this.getAuthenticatedUser(),
            oAuthTokens: e
        };
    }
    storeProviderAccessToken(e, t) {
        this.session.storeProviderAccessToken(e, t);
    }
    getProviderAccessToken(e) {
        return this.session.getProviderAccessToken(e);
    }
    async logout() {
        await this.session.destroy(), this.authFlow = void 0;
    }
    clearProviderAcccessTokens(e) {
        e.linkedAccounts.filter((e)=>"cross_app" === e.type).forEach((e)=>{
            this.storeProviderAccessToken(e.providerApp.id, null);
        });
    }
    startAuthFlow(e) {
        return e.api = this.api, this.authFlow = e, this.authFlow;
    }
    async initMfaSmsVerification() {
        try {
            await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mfaPasswordlessSmsInitPath"], {
                action: "verify"
            });
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatApiError"])(e);
        }
    }
    async initMfaPasskeyVerification() {
        try {
            let e = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mfaPasskeyInitPath"], {});
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformOptionsToCamelCase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformOptionsToCamelCase"])(e.options);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatApiError"])(e);
        }
    }
    async getCrossAppProviderDetails(e) {
        try {
            return this._cachedProviderAppDetails[e] || (this._cachedProviderAppDetails[e] = await this.api.get(`/api/v1/apps/${e}/cross-app/details`)), this._cachedProviderAppDetails[e];
        } catch (e) {
            console.error("Error fetching cross app provider details", e);
        }
    }
    async acceptTerms() {
        try {
            let e = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["acceptTermsPath"], {});
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkEmail(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkEmailPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkPhone(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkPhonePath"], {
                phoneNumber: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkEthereumWallet(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkWalletPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkSolanaWallet(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siwsUnlinkWalletPath"], {
                address: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkOAuth(e, t) {
        try {
            let r = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkOAuthPath"], {
                provider: e,
                subject: t
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(r);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkFarcaster(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkFarcasterPath"], {
                fid: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkTelegram(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["telegramAccountUnlinkPath"], {
                telegram_user_id: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async unlinkPasskey(e) {
        try {
            let t = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["unlinkPasskeyPath"], {
                credential_id: e
            });
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(t);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async revokeDelegatedWallet() {
        try {
            await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["delegatedActionsRevokePath"], {});
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async createAnalyticsEvent({ eventName: e, payload: t, timestamp: r, options: a }) {
        if ("undefined" != typeof window) try {
            this.clientAnalyticsId || console.warn("No client analytics id set, refusing to send analytics event"), await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["analyticsEventsPath"], {
                event_name: e,
                client_id: this.clientAnalyticsId,
                payload: {
                    ...t || {},
                    clientTimestamp: r ? r.toISOString() : (new Date).toISOString()
                }
            }, {
                retry: -1,
                keepalive: a?.keepAlive ?? !1
            });
        } catch (e) {}
    }
    async signMoonpayOnRampUrl(e) {
        try {
            return this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["moonpayPluginOnRampPath"], e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async initCoinbaseOnRamp(e) {
        try {
            return this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coinbaseOnRampInitPath"], e);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getCoinbaseOnRampStatus({ partnerUserId: e }) {
        try {
            return this.api.get(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["coinbaseOnRampStatusPath"]}?partnerUserId=${e}`);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getAuthenticatedUser() {
        return this.session.hasRefreshCredentials() || this.session.hasRecoveryCredentials() ? this.session.refresh() : null;
    }
    async getAccessToken(e) {
        return await this.getPrivyAccessToken(e) || await this.getCustomerAccessToken(e);
    }
    async getCustomerAccessToken(e) {
        return await this._getToken(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccessTokenTypes"].CUSTOMER, e);
    }
    async getPrivyAccessToken(e) {
        return await this._getToken(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccessTokenTypes"].PRIVY, e);
    }
    async _getToken(e, t) {
        return this.session.getToken(e) ? this.session.hasActiveAccessToken(e) ? this.session.hasRefreshCredentials(e) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$accessToken$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccessToken"].parse(this.session.getToken(e))?.appId !== this.appId ? (await this.logout(), null) : this.session.getToken(e) : (this.session.destroyLocalState(), null) : !t?.disableAutoRefresh && this.session.hasRefreshCredentials(e) ? (await this.session.refresh(), this.session.getToken(e)) : null : null;
    }
    async getSmartWalletsConfig() {
        try {
            let e = {}, t = this.session.token;
            t && (e.authorization = `Bearer ${t}`);
            let r = await this.api.get(`/api/v1/apps/${this.appId}/smart_wallets`, {
                baseURL: this.fallbackApiUrl,
                headers: e
            });
            return r.enabled ? {
                enabled: r.enabled,
                smartWalletType: r.smart_wallet_type,
                configuredNetworks: r.configured_networks.map((e)=>({
                        chainId: e.chain_id,
                        bundlerUrl: e.bundler_url,
                        paymasterUrl: e.paymaster_url,
                        paymasterContext: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$smart$2d$wallet$2d$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPaymasterContext"])(e.paymaster_url, e.paymaster_context)
                    }))
            } : {
                enabled: r.enabled
            };
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getServerConfig() {
        try {
            let e = {}, t = this.session.token;
            t && (e.authorization = `Bearer ${t}`);
            let r = await this.api.get(`/api/v1/apps/${this.appId}`, {
                baseURL: this.fallbackApiUrl,
                headers: e
            }), a = r.telegram_auth_config ? {
                botId: r.telegram_auth_config.bot_id,
                botName: r.telegram_auth_config.bot_name,
                linkEnabled: r.telegram_auth_config.link_enabled,
                seamlessAuthEnabled: r.telegram_auth_config.seamless_auth_enabled
            } : void 0, n = r.funding_config ? {
                methods: r.funding_config.methods,
                options: r.funding_config.options,
                defaultRecommendedAmount: r.funding_config.default_recommended_amount,
                defaultRecommendedCurrency: r.funding_config.default_recommended_currency,
                promptFundingOnWalletCreation: r.funding_config.prompt_funding_on_wallet_creation,
                crossChainBridgingEnabled: r.funding_config.cross_chain_bridging_enabled
            } : void 0;
            return {
                id: r.id,
                name: r.name,
                verificationKey: r.verification_key,
                logoUrl: r.logo_url || void 0,
                accentColor: r.accent_color || void 0,
                showWalletLoginFirst: r.show_wallet_login_first,
                allowlistConfig: {
                    errorTitle: r.allowlist_config.error_title,
                    errorDetail: r.allowlist_config.error_detail,
                    errorCtaText: r.allowlist_config.cta_text,
                    errorCtaLink: r.allowlist_config.cta_link
                },
                walletAuth: r.wallet_auth,
                solanaWalletAuth: r.solana_wallet_auth,
                emailAuth: r.email_auth,
                smsAuth: r.sms_auth,
                googleOAuth: r.google_oauth,
                twitterOAuth: r.twitter_oauth,
                discordOAuth: r.discord_oauth,
                githubOAuth: r.github_oauth,
                spotifyOAuth: r.spotify_oauth,
                instagramOAuth: r.instagram_oauth,
                tiktokOAuth: r.tiktok_oauth,
                linkedinOAuth: r.linkedin_oauth,
                appleOAuth: r.apple_oauth,
                farcasterAuth: r.farcaster_auth,
                passkeyAuth: r.passkey_auth,
                passkeysForSignupEnabled: r.passkeys_for_signup_enabled,
                telegramAuth: r.telegram_auth,
                disablePlusEmails: r.disable_plus_emails,
                termsAndConditionsUrl: r.terms_and_conditions_url,
                embeddedWalletConfig: {
                    createOnLogin: r.embedded_wallet_config?.create_on_login,
                    userOwnedRecoveryOptions: r.embedded_wallet_config.user_owned_recovery_options,
                    requireUserOwnedRecoveryOnCreate: r.embedded_wallet_config.require_user_owned_recovery_on_create
                },
                privacyPolicyUrl: r.privacy_policy_url,
                requireUsersAcceptTerms: r.require_users_accept_terms,
                customApiUrl: r.custom_api_url,
                walletConnectCloudProjectId: r.wallet_connect_cloud_project_id,
                fiatOnRampEnabled: r.fiat_on_ramp_enabled,
                captchaEnabled: r.captcha_enabled,
                captchaSiteKey: r.captcha_site_key,
                createdAt: new Date(1e3 * r.created_at),
                updatedAt: new Date(1e3 * r.updated_at),
                mfaMethods: r.mfa_methods,
                enforceWalletUis: r.enforce_wallet_uis,
                legacyWalletUiConfig: r.legacy_wallet_ui_config,
                telegramAuthConfiguration: a,
                fundingConfig: n
            };
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async getUsdTokenPrice(e) {
        try {
            return (await this.api.get(`/api/v1/token_price?chainId=${e.id}&tokenSymbol=${e.nativeCurrency.symbol}`)).usd;
        } catch (t) {
            return void console.error(`Unable to fetch token price for chain with id ${e.id}`);
        }
    }
    async getUsdPriceForSol() {
        try {
            return (await this.api.get("/api/v1/token_price?chainId=0&tokenSymbol=SOL")).usd;
        } catch (e) {
            return void console.error("Unable to fetch token price for SOL");
        }
    }
    async getSplTokenMetadata({ mintAddress: e, cluster: t }) {
        try {
            return await this.api.get(`/api/v1/spl_token_info?mint_address=${e}&cluster=${t}`);
        } catch (r) {
            return void console.error(`Unable to fetch token metadata for ${t}:${e}`);
        }
    }
    async requestFarcasterSignerStatus(e) {
        try {
            return await this.api.post("/api/v1/farcaster/signer/status", {
                ed25519_public_key: e
            });
        } catch (e) {
            throw console.error("Unable to fetch Farcaster signer status"), e;
        }
    }
    async forkSession() {
        return await this.session.forkSession();
    }
    async generateSiweNonce({ address: e, captchaToken: t }) {
        try {
            return (await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siweInitPath"], {
                address: e,
                token: t
            })).nonce;
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async authenticateWithSiweInternal({ message: e, signature: t, chainId: r, walletClientType: a, connectorType: n, mode: i }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siweAuthenticatePath"], {
            message: e,
            signature: t,
            chainId: r,
            walletClientType: a,
            connectorType: n,
            mode: i
        });
    }
    async linkWithSiweInternal({ message: e, signature: t, chainId: r, walletClientType: a, connectorType: n }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siweLinkPath"], {
            message: e,
            signature: t,
            chainId: r,
            walletClientType: a,
            connectorType: n
        });
    }
    async linkSmartWallet({ message: e, signature: t, smartWalletType: r }) {
        try {
            let a = await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["smartWalletLinkPath"], {
                message: e,
                signature: t,
                smart_wallet_type: r
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(a);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async linkWithSiwe({ message: e, signature: t, chainId: r, walletClientType: a, connectorType: n }) {
        try {
            let i = await this.linkWithSiweInternal({
                message: e,
                signature: t,
                chainId: r,
                walletClientType: a,
                connectorType: n
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(i);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async generateSiwsNonce({ address: e, captchaToken: t }) {
        try {
            return (await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siwsInitPath"], {
                address: e,
                token: t
            })).nonce;
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async authenticateWithSiwsInternal({ message: e, signature: t, walletClientType: r, connectorType: a, mode: n }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siwsAuthenticatePath"], {
            message: e,
            signature: t,
            walletClientType: r,
            connectorType: a,
            mode: n
        });
    }
    async sendAccountTransferRequest({ nonce: e, account: t, accountType: r, externalWalletMetadata: a, telegramAuthResult: n, telegramWebAppData: i, farcasterEmbeddedAddress: o, oAuthUserInfo: s }) {
        try {
            let l, c;
            switch(r){
                case "email":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transferEmailPath"], c = {
                        nonce: e,
                        email: t
                    };
                    break;
                case "sms":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transferPhonePath"], c = {
                        nonce: e,
                        phoneNumber: t
                    };
                    break;
                case "siwe":
                    if (l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transferWalletPath"], !a) throw Error("Wallet parameters must be defined");
                    c = {
                        nonce: e,
                        address: t,
                        ...a
                    };
                    break;
                case "farcaster":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transferFarcasterPath"], c = {
                        nonce: e,
                        farcaster_id: t,
                        farcaster_embedded_address: o
                    };
                    break;
                case "telegram":
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["telegramAccountTransferPath"], c = {
                        nonce: e,
                        telegram_auth_result: n,
                        telegram_web_app_data: i
                    };
                    break;
                case "custom":
                case "guest":
                case "passkey":
                    throw Error("Invalid transfer account type");
                default:
                    l = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transferOAuthPath"], c = {
                        nonce: e,
                        userInfo: s
                    };
            }
            let d = await this.api.post(l, c);
            return await this.getAuthenticatedUser() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(d);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    async linkWithSiwsInternal({ message: e, signature: t, walletClientType: r, connectorType: a }) {
        return await this.api.post(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$paths$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["siwsLinkPath"], {
            message: e,
            signature: t,
            walletClientType: r,
            connectorType: a
        });
    }
    async linkWithSiws({ message: e, signature: t, walletClientType: r, connectorType: a }) {
        try {
            let n = await this.linkWithSiwsInternal({
                message: e,
                signature: t,
                walletClientType: r,
                connectorType: a
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertUserResponseToUser"])(n);
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatPrivyError"])(e);
        }
    }
    constructor({ apiUrl: e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"], appId: t, appClientId: r, timeout: a = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_API_TIMEOUT_MS"] }){
        Object.defineProperty(this, Or, {
            value: Rr
        }), this._cachedProviderAppDetails = {}, this.apiUrl = e, this.fallbackApiUrl = this.apiUrl, this.useServerCookies = e !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"] && e.startsWith("https://privy."), this.timeout = a, this.appId = t, this.appClientId = r, this.clientAnalyticsId = (function(e, t) {
            if (!Object.prototype.hasOwnProperty.call(e, t)) throw TypeError("attempted to use private field on non-instance");
            return e;
        })(this, Or)[Or](), br || (br = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$session$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Session"]), this.session = br, this.api = this.generateApi(), this.session.client = this;
    }
}
function Rr() {
    if ("undefined" == typeof window) return null;
    try {
        let e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"]);
        if ("string" == typeof e && e.length > 0) return e;
    } catch (e) {}
    let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$v4$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__v4$3e$__["v4"])();
    try {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"], e), e;
    } catch (t) {
        return e;
    }
}
class Pr {
    async handleSignMessage(e) {
        if (!e.params || "string" != typeof e.params.message) throw Error("Message must be provided as a string for Solana signMessage RPC");
        return await Yr({
            message: e.params.message,
            address: this.address
        });
    }
    async request(e) {
        if (console.debug("EmbeddedSolanaProvider.request() called with args", e), !await Hr()) throw Error("User must be authenticated to use embedded Solana wallet");
        if (!await $r()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to connect to Solana embedded wallet");
        if ("signMessage" === e.method) return await this.handleSignMessage(e);
        throw Error("Embedded Solana provider does not yet support this RPC method.");
    }
    constructor(e, t){
        this.walletProxy = e, this.address = t;
    }
}
let Dr, Mr, Lr, Fr, xr, jr, Br;
function Vr() {
    return Dr ? Dr.getCustomerAccessToken() : Promise.resolve(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CUSTOMER_ACCESS_TOKEN_STORAGE_KEY"]) || null);
}
async function Hr() {
    return Dr ? Dr.getAccessToken() : Promise.resolve(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PRIVY_ACCESS_TOKEN_STORAGE_KEY"]) || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CUSTOMER_ACCESS_TOKEN_STORAGE_KEY"]) || null);
}
const Kr = (e, t, r)=>Mr(e, t, r), Gr = (e, t, r)=>Lr(e, t, r), zr = (e, t, r, a)=>Fr(e, t, r, a), qr = ()=>xr(), $r = ()=>jr(), Yr = ({ message: e, address: t })=>Br({
        message: e,
        address: t
    });
const Xr = ({ config: t, ...r })=>{
    var a;
    if ("undefined" != typeof window && 0 > [
        "localhost",
        "127.0.0.1"
    ].indexOf(window.location.hostname) && "https:" !== window.location.protocol) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Embedded wallet is only available over HTTPS");
    if ("string" != typeof (a = r.appId) || 25 !== a.length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot initialize the Privy provider with an invalid Privy app ID");
    Dr || (Dr = new Sr({
        appId: r.appId,
        appClientId: r.clientId,
        apiUrl: r.apiUrl
    }));
    let n = Object.assign({}, t);
    return void 0 !== r.createPrivyWalletOnLogin && void 0 === n.embeddedWallets?.createOnLogin && (n.embeddedWallets || (n.embeddedWallets = {}), n.embeddedWallets.createOnLogin = r.createPrivyWalletOnLogin ? "users-without-wallets" : "off"), void 0 !== r.createPrivyWalletOnLogin && t?.embeddedWallets?.createOnLogin && console.warn("Both `createPrivyWalletOnLogin` and `config.embeddedWallets.createOnLogin` are set. `createPrivyWalletOnLogin` is deprecated and should be removed."), /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyAppConfigProvider"], {
        client: Dr,
        clientConfig: n,
        legacyCreateEmbeddedWalletFlag: r.createPrivyWalletOnLogin,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyPluginProvider"], {
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Qr, {
                ...r,
                client: Dr
            })
        })
    });
};
let Qr = (W)=>{
    let k = W.client, b = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$context$2f$PrivyPluginContext$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePlugins"])(), [H, K] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [G, q] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [Y, X] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [le, de] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), [ue, he] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]), [ye, ke] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]), [je, Be] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]), gt = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(ue), [Ft, xt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [jt, Bt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), [Vt, Ht] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [Kt, Gt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "disconnected",
        connectedWallet: null,
        connectError: null,
        connector: null,
        connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
    }), [zt, qt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [$t, Yt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Xt, Qt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [Jt, Zt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [er, tr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        status: "initial"
    }), [rr, ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), nr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAppConfig"])(), ir = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$configuration$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useIsServerConfigLoaded"])(), [or, sr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!0), [lr, cr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({}), [dr, ur] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), [hr, pr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), [wr, mr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [yr, fr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [gr, Er] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(nr.customAuth?.enabled ? {
        status: "initial"
    } : {
        status: "not-enabled"
    }), _r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), Ar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), Tr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["privyEventsDefault"]), [vr, Cr] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1);
    k.onStoreCustomerAccessToken = (e)=>{
        e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "accessToken", "onAccessTokenGranted", e);
    }, k.onDeleteCustomerAccessToken = ()=>{
        de(null), X(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "accessToken", "onAccessTokenRemoved");
    };
    let Ir = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), Wr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), kr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(!1), Nr = ({ showWalletUIs: e, typedData: t })=>kr.current ? kr.current : void 0 !== e ? !e : void 0 !== nr.embeddedWallets.showWalletUIs ? !nr.embeddedWallets.showWalletUIs : t ? nr.embeddedWallets.noPromptOnSignature || (nr.legacyWalletUiConfig ?? !1) : !!nr.embeddedWallets.noPromptOnSignature, br = (e)=>{
        Bt(e), setTimeout(()=>{
            K(!0);
        }, 15), k.createAnalyticsEvent({
            eventName: "modal_open",
            payload: {
                initialScreen: e
            }
        });
    }, Ur = (e)=>{
        "off" !== nr.embeddedWallets.createOnLogin && sr(!0), br(e);
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        let e = [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(le),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(le)
        ].filter((e)=>!!e);
        rr && Be(e.map((e)=>({
                type: "solana",
                imported: e.imported,
                address: e.address,
                connectedAt: Date.now(),
                walletClientType: "privy",
                connectorType: "embedded",
                walletIndex: e.walletIndex ?? void 0,
                meta: {
                    name: "Privy Wallet",
                    icon: void 0,
                    id: "io.privy.solana.wallet"
                },
                linked: !0,
                fund () {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("'fund' is deprecated for Solana wallets - use 'fundWallet' instead");
                },
                unlink: ()=>{
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded Solana wallet");
                },
                getProvider: async ()=>new Pr(rr, e.address),
                async signMessage (t) {
                    let r = await Hr();
                    if (!r || !rr) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED);
                    let a = e.imported ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(le) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(le);
                    if (!a) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction without a root wallet");
                    let { entropyId: n, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(a);
                    if (!await ha.recoverPrimaryWallet().catch(()=>!1)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet couldn't be connected", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR);
                    if (!le) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction with no user initialized");
                    let { response: o } = await rr.rpc({
                        accessToken: r,
                        entropyId: n,
                        entropyIdVerifier: i,
                        chainType: "solana",
                        hdWalletIndex: this.walletIndex ?? 0,
                        request: {
                            method: "signMessage",
                            params: {
                                message: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(t).toString("base64")
                            }
                        }
                    });
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(o.data.signature, "base64");
                },
                async sendTransaction (e, t, r) {
                    let { signature: a } = await ia({
                        transaction: e,
                        connection: t,
                        transactionOptions: r,
                        wallet: this
                    });
                    return a;
                },
                async signTransaction (t) {
                    let r = await Hr();
                    if (!r || !rr) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED);
                    if (!await ha.recoverPrimaryWallet().catch(()=>!1)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet couldn't be connected", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR);
                    let a = e.imported ? e : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(le);
                    if (!a) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempting to sign a transaction without a root wallet");
                    let { entropyId: n, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(a);
                    return await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["signSolanaTransaction"])({
                        tx: t,
                        accessToken: r,
                        walletProxy: rr,
                        entropyId: n,
                        entropyIdVerifier: i,
                        transactingWalletAddress: this.address,
                        transactingWalletIndex: this.walletIndex ?? 0
                    }), t;
                },
                loginOrLink: async ()=>{
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot login or link with an embedded Solana wallet");
                },
                disconnect: ()=>{},
                isConnected: async ()=>!0
            })));
    }, [
        rr,
        le
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!le) return void k.connectors?.removeEmbeddedWalletConnectors();
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(le), t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(le), r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getImportedPrivyEthereumWallet"])(le);
        e && t.length || k.connectors?.removeEmbeddedWalletConnectors(), r || k.connectors?.removeImportedWalletConnector(), k.connectors ? rr ? (e && k.connectors.addEmbeddedWalletConnectors({
            walletProxy: rr,
            rootWallet: e,
            embeddedWallets: t,
            defaultChain: nr.defaultChain,
            appId: W.appId
        }), r && k.connectors.addImportedWalletConnector(rr, r.address, nr.defaultChain, W.appId)) : console.debug("Failed to add embedded wallet connector: Wallet proxy not initialized") : console.debug("Failed to add embedded wallet connector: Client connectors not initialized");
    }, [
        rr,
        le
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        rr && hr?.(rr);
    }, [
        rr
    ]);
    let Or = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        (async ()=>{
            if (!nr.customAuth?.enabled) return void Er({
                status: "not-enabled"
            });
            sr(!0);
            let { getCustomAccessToken: e, isLoading: t } = nr.customAuth;
            if (G && !t && "loading" !== gr.status) {
                Er({
                    status: "loading"
                });
                try {
                    let t = await e();
                    if (t === Or.current) return void Er({
                        status: "done"
                    });
                    if (!t && Y) return Or.current = t, await ua.logout(), Er({
                        status: "done"
                    }), void (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "customAuth", "onUnauthenticated");
                    if (!t) return Or.current = t, void Er({
                        status: "done"
                    });
                    k.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$custom$2d$jwt$2d$account$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomJwtAccountFlow"](t));
                    let { user: r, isNewUser: a } = await k.authenticate();
                    if (!r) return await ua.logout(), Er({
                        status: "error",
                        error: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Failed to sync with custom auth provider")
                    }), void (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "customAuth", "onUnauthenticated");
                    void 0 !== a && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onComplete", r, a, !1, "custom", null), Or.current = t, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "customAuth", "onAuthenticated", {
                        user: r
                    }), Er({
                        status: "done"
                    }), de(r || null), xt(a || !1), X(!0), fr(!0);
                } catch (e) {
                    if (console.warn(e), await ua.logout(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "customAuth", "onUnauthenticated"), "User already exists with provided custom JWT account." === e.message) return void Er({
                        status: "initial"
                    });
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), Er({
                        status: "error",
                        error: e
                    });
                }
            }
        })();
    }, [
        "initial" === gr.status,
        nr.customAuth?.enabled,
        nr.customAuth?.getCustomAccessToken,
        nr.customAuth?.isLoading,
        G,
        Y
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        yr && rr && le && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["shouldProceedtoEmbeddedWalletCreationFlow"])(le, nr.embeddedWallets.createOnLogin) && (fr(!1), Zr(le, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WALLET_PROXY_TIMEOUT"]).catch(console.error));
    }, [
        yr && rr && le
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (nr.externalWallets.solana.connectors) return nr.externalWallets.solana.connectors.onMount(), ()=>nr.externalWallets.solana.connectors?.onUnmount();
    }, [
        nr.externalWallets.solana.connectors
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        !G && ir && async function() {
            let e, t = Sr(), r = Rr();
            (()=>{
                let e = new URLSearchParams(window.location.search).get("privy_token");
                if (!e) return;
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].put(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FORKED_TOKEN_STORAGE_KEY"], e);
                let t = new URL(window.location.href);
                t.searchParams.delete("privy_token"), window.history.pushState({}, "", t);
            })();
            let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mipd$2f$dist$2f$esm$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createStore"])();
            k.initializeConnectorManager({
                walletConnectCloudProjectId: nr.walletConnectCloudProjectId,
                rpcConfig: nr.rpcConfig,
                chains: nr.chains,
                defaultChain: nr.defaultChain,
                store: a,
                walletList: nr.appearance.walletList,
                shouldEnforceDefaultChainOnConnect: nr.shouldEnforceDefaultChainOnConnect,
                externalWalletConfig: nr.externalWallets,
                appName: nr.name ?? "Privy",
                walletChainType: nr.appearance.walletChainType
            }), k.connectors?.on("connectorInitialized", ()=>{
                e && clearTimeout(e);
                let t = k.connectors.walletConnectors.length, r = k.connectors.walletConnectors.reduce((e, t)=>e + (t.initialized ? 1 : 0), 0);
                r === t ? Cr(!0) : e = setTimeout(()=>{
                    console.debug({
                        message: "Unable to initialize all expected connectors before timeout",
                        initialized: r,
                        expected: t
                    }), Cr(!0);
                }, 1500);
            }), k.connectors?.initialize().then(()=>{
                qr();
            });
            let i = await k.getAuthenticatedUser(), o = !!i;
            nr.legal.requireUsersAcceptTerms && i && !i.hasAcceptedTerms ? (await k.logout(), ha.setReadyToTrue(!0), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "logout", "onSuccess")) : (nr.customAuth?.enabled || (X(!!i), i && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onComplete", i, !1, !0, null, null), de(i)), t ? Wr.current = o ? "link" : "login" : r && !o ? (Wr.current = "login", cr({
                telegramAuthModalData: {
                    seamlessAuth: !0
                }
            }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN)) : ha.setReadyToTrue(!!i));
        }();
    }, [
        k,
        dr,
        G,
        ir
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (G) {
            if (!le || !le.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType)) return void mr(!0);
            mr(!!ue.find((e)=>"privy" === e.walletClientType));
        }
    }, [
        G,
        le,
        ue
    ]);
    let Sr = ()=>{
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$detectCompletingOAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectCompletingOAuthFlow"])();
        return e.inProgress && e.popupFlow ? window.opener.location.origin !== window.location.origin ? void window.opener.postMessage({
            type: "PRIVY_OAUTH_ERROR",
            error: "Origins between parent and child windows do not match."
        }) : "error" === e.authorizationCode ? void window.opener.postMessage({
            type: "PRIVY_OAUTH_ERROR",
            error: "Something went wrong. Try again."
        }) : void window.opener.postMessage({
            type: "PRIVY_OAUTH_RESPONSE",
            stateCode: e.stateCode,
            authorizationCode: e.authorizationCode
        }) : (e.inProgress && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPrivyTheOAuthProvider"])(e.provider) && !e.popupFlow && (new BroadcastChannel(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CROSS_APP_BROADCAST_CHANNEL_NAME"]).postMessage({
            type: "PRIVY_OAUTH_RESPONSE",
            stateCode: e.stateCode,
            authorizationCode: e.authorizationCode
        }), window.close()), !!e.inProgress && !!e.withPrivyUi && (k.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAuthFlow"](e)), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_OAUTH_SCREEN), !0));
    }, Rr = ()=>{
        let e = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectCompletingTelegramFlow"])();
        if (!e || !nr.loginMethods.telegram || !nr.loginConfig.telegramAuthConfiguration?.seamlessAuthEnabled) return;
        let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramAuthFlow"];
        return k.startAuthFlow(t), "login-url" === e.flowType && (t.meta.telegramWebAppData = void 0, t.meta.telegramAuthResult = e.authData), "web-app" === e.flowType && (t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = e.authData), !0;
    }, Vr = async (e, t, r, a)=>{
        Kr(await k.connectors?.createEthereumWalletConnector(e, t) || null, t, r, a);
    };
    async function Kr(e, t, r, a) {
        if (!e) return Gt({
            status: "disconnected",
            connectedWallet: null,
            connectError: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyConnectorError"]("Unable to connect to wallet."),
            connector: null,
            connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
        }), a?.(null, r);
        Gt({
            status: "disconnected",
            connectedWallet: null,
            connectError: null,
            connector: e,
            connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
        }), e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$walletconnect$2d$v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectV2WalletConnector"] && t && await e.resetConnection(t), Gt({
            connector: e,
            status: "connecting",
            connectedWallet: null,
            connectError: null,
            connectRetry: ()=>Kr(e, t, r, a)
        });
        try {
            let t = await e.connect({
                showPrompt: !0
            });
            if ((!t || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(t)) && nr.shouldEnforceDefaultChainOnConnect && !nr.chains.find((e)=>e.id === Number(t?.chainId.replace("eip155:", ""))) && ("wallet_connect_v2" !== t?.connectorType || "metamask" !== t?.walletClientType)) {
                Gt((t)=>({
                        ...t,
                        connector: e,
                        status: "switching_to_supported_chain",
                        connectedWallet: null,
                        connectError: null,
                        connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
                    }));
                try {
                    await t?.switchChain(nr.defaultChain.id), t && (t.chainId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatChainIdToCAIP2"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(nr.defaultChain.id)));
                } catch  {
                    console.warn(`Unable to switch to default chain: ${nr.defaultChain.id}`);
                }
            }
            return Gt((e)=>({
                    ...e,
                    status: "connected",
                    connectedWallet: t,
                    connectError: null,
                    connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
                })), t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "connectWallet", "onSuccess", (e.chainType, t)), a?.(t, r);
        } catch (e) {
            return e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyError"] ? (console.warn(e.cause ? e.cause : e.message), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "connectWallet", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].GENERIC_CONNECT_WALLET_ERROR)) : (console.warn(e), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "connectWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR)), Gt((t)=>({
                    ...t,
                    status: "disconnected",
                    connectedWallet: null,
                    connectError: e
                })), a?.(null, r);
        }
    }
    let Gr = async (e, t, r)=>{
        if (null === e || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e)) return;
        let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SiweFlow"](e, k, t, r);
        k.startAuthFlow(a);
    }, zr = async (e, t)=>{
        if (null === e || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedSolanaWallet"])(e)) return;
        let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SiwsFlow"](e, k, t);
        k.startAuthFlow(r);
    }, qr = ()=>{
        let e = new URLSearchParams(window.location.search), t = e.get("privy_connector"), r = e.get("privy_wallet_client");
        if (!t || !r) return;
        if ("phantom" !== r || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$is$2d$wallet$2d$installed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPhantomInstalled"])() || Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LOGIN_FAILED_SCREEN), !k.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
        br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION);
        let a = new URL(window.location.href);
        a.searchParams.delete("privy_connector"), a.searchParams.delete("privy_wallet_client"), window.history.pushState({}, "", a), Vr(t, r, void 0, Gr);
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        G && Y && null === le && k.getAuthenticatedUser().then(de);
    }, [
        G,
        Y,
        le,
        k
    ]);
    let $r = (e)=>{
        if (!Y) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED, {
            linkMethod: e
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before linking an account.");
    }, Yr = ()=>{
        $r("siwe"), Ir.current = "siwe", Wr.current = "link", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_WALLET_SCREEN);
    }, Xr = (e)=>{
        if (!Y || !le) return !1;
        if ("privy" === e.walletClientType) return !0;
        for (let t of le.linkedAccounts)if ("wallet" === t.type && t.address === e.address && "privy" !== t.walletClientType) return !0;
        return !1;
    }, Qr = async (e)=>{
        let t;
        if (!k.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
        t = "ethereum" === e.type ? k.connectors.findWalletConnector(e.connectorType, e.walletClientType) || null : k.connectors.findSolanaWalletConnector(e.connectorType, e.walletClientType) || null, Gt((r)=>({
                ...r,
                connector: t,
                status: "connected",
                connectedWallet: e,
                connectError: null,
                connectRetry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["notImplemented"]
            })), nr.captchaEnabled && !Y ? (cr({
            captchaModalData: {
                callback: (t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? Gr(e, t) : zr(e, t),
                userIntentRequired: !1,
                onSuccessNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION,
                onErrorNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].ERROR_SCREEN
            }
        }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].CAPTCHA_SCREEN)) : ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? await Gr(e) : await zr(e), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_CONNECTION));
    }, Jr = ()=>{
        he((e)=>{
            let t = k.connectors?.wallets.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"]).map((e)=>({
                    ...e,
                    linked: Xr(e),
                    loginOrLink: async ()=>{
                        if (!await e.isConnected()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet is not connected");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot link or login with embedded wallet");
                        Qr(e);
                    },
                    fund: async (t)=>{
                        await ha.fundWallet(e.address, t);
                    },
                    unlink: async ()=>{
                        if (!Y) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User is not authenticated.");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded wallet");
                        de(await k.unlinkEthereumWallet(e.address));
                    }
                })) || [];
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["areWalletArraysEqual"])(e, t) ? e : t;
        }), ke((e)=>{
            let t = (k.connectors?.wallets ?? []).concat(je).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$solana$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedSolanaWallet"]).map((e)=>({
                    ...e,
                    linked: Xr(e),
                    loginOrLink: async ()=>{
                        if (!await e.isConnected()) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet is not connected");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot link or login with embedded wallet");
                        Qr(e);
                    },
                    fund: async ()=>{
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("'fund' is deprecated for Solana wallets - use 'fundWallet' instead");
                    },
                    unlink: async ()=>{
                        if (!Y) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User is not authenticated.");
                        if ("embedded" === e.connectorType && "privy" === e.walletClientType) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot unlink an embedded wallet");
                        de(await k.unlinkSolanaWallet(e.address));
                    }
                }));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$areWalletArraysEqual$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["areWalletArraysEqual"])(e, t) ? e : t;
        });
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        Jr();
    }, [
        le?.linkedAccounts,
        Y,
        G,
        je
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (G) {
            if (!k.connectors) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Connector not initialized");
            Jr(), k.connectors.on("walletsUpdated", Jr);
        }
    }, [
        G
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        [
            ...nr.loginMethodsAndOrder?.primary ?? [],
            ...nr.loginMethodsAndOrder?.overflow ?? []
        ].filter((e)=>e.startsWith("privy:")).forEach((e)=>k.getCrossAppProviderDetails(e.replace("privy:", "")));
    }, [
        !!k
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        let e;
        if (!ue[0]) return;
        let t = ue[0], r = gt.current.find((e)=>e.address === t.address);
        if (e = "privy" === t.walletClientType ? le?.linkedAccounts.find((e)=>"wallet" === e.type && e.address === t.address && "privy" === e.walletClientType) : le?.linkedAccounts.find((e)=>"wallet" === e.type && e.address === t.address && "privy" !== e.walletClientType), !r && e) {
            let t = Object.assign({}, le);
            t.wallet = e && {
                address: e.address,
                chainType: e.chainType,
                chainId: e.chainId,
                walletClient: e.walletClient,
                walletClientType: e.walletClientType,
                connectorType: e.connectorType,
                imported: e.imported,
                delegated: e.delegated,
                walletIndex: e.walletIndex
            }, de(t);
        }
        gt.current = ue;
    }, [
        ue
    ]);
    let Zr = async (e, t, r)=>{
        let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(e), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(e);
        if (r && "walletIndex" in r) return ta(e, t, r.walletIndex, a, n);
        let i = r && "createAdditional" in r && r.createAdditional;
        if (a && !i) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_ALREADY_EXISTS), Error("User already has an embedded wallet.");
        let [o, s] = await Promise.all([
            ha.initializeWalletProxy(t),
            Hr()
        ]);
        if (!o && nr.customAuth?.enabled) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
        if (!o || !s || nr.embeddedWallets?.requireUserOwnedRecoveryOnCreate) return ea();
        if (!a) return await o.create({
            accessToken: s,
            solanaAddress: n?.address
        }), aa(0, "ethereum");
        {
            let t = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLatestPrivyEthereumWallet"])(e)?.walletIndex ?? 0) + 1, { entropyId: r, entropyIdVerifier: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e));
            return await ha.recoverPrimaryWallet(), await o.addWallet({
                accessToken: s,
                entropyId: r,
                entropyIdVerifier: a,
                chainType: "ethereum",
                hdWalletIndex: t
            }), aa(t, "ethereum");
        }
    }, ea = async ()=>new Promise((e, t)=>{
            sr(!0), cr({
                createWallet: {
                    onSuccess: (t)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onSuccess", t), e(t);
                    },
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), t(e);
                    },
                    callAuthOnSuccessOnClose: !1
                }
            }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN);
        }), ta = async (e, t, r, a, n)=>{
        if (r < 0) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${r}) is invalid.`);
        let [i, o] = await Promise.all([
            ha.initializeWalletProxy(t),
            Hr()
        ]);
        if (!i && nr.customAuth?.enabled) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
        if (!i || !o || nr.embeddedWallets?.requireUserOwnedRecoveryOnCreate) {
            if (0 == r) return ea();
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Create wallet UI can only be displayed when walletIndex is 0.");
        }
        if (0 == r) {
            if (a) return a;
            await i.create({
                accessToken: o,
                solanaAddress: n?.address
            });
        } else {
            if (!a) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error("A user must have a wallet at HD index 0 before creating a wallet at greater HD indices.");
            let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(e).find((e)=>e.walletIndex === r);
            if (t) return t;
            let { entropyId: n, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e));
            await ha.recoverPrimaryWallet(), await i.addWallet({
                accessToken: o,
                entropyId: n,
                entropyIdVerifier: s,
                chainType: "ethereum",
                hdWalletIndex: r
            });
        }
        return aa(r, "ethereum");
    }, ra = async ({ user: e, wp: t, accessToken: r, walletIndex: a, ethereumWallet: n })=>{
        let i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(e).find((e)=>e.walletIndex === a);
        if (i) return i;
        if (0 === a) await t.createSolana({
            accessToken: r,
            ethereumAddress: n?.address
        });
        else {
            let n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e);
            if (!n) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error("User must have a wallet at HD index 0 before creating a wallet at greater HD indices.");
            let { entropyId: i, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(n);
            await ha.recoverPrimaryWallet(), await t.addWallet({
                accessToken: r,
                entropyId: i,
                entropyIdVerifier: o,
                chainType: "solana",
                hdWalletIndex: a
            });
        }
        return aa(a, "solana");
    }, aa = async (e, t)=>{
        let r = await ha.refreshUser(), a = ("ethereum" === t ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumHDWallets"])(r) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaHDWallets"])(r)).find((t)=>t.walletIndex === e);
        if (!a) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to create wallet");
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onSuccess", a), a;
    }, na = (e, t, a, n)=>new Promise(async (i, o)=>{
            let { requesterAppId: s } = t || {};
            if (!Y || !le) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void o(Error("User must be authenticated before signing with a Privy wallet"));
            let l = n ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(le)?.address;
            if (!l) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to send a transaction.");
            let { signingWallet: c, rootWallet: p } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(le, l);
            if (!p || !c) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void o(Error("Must have a Privy wallet before signing"));
            sr(!0);
            let w = pa.wallets.find((e)=>"privy" === e.walletClientType && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(e.address) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(c.address)), m = await w?.getEthereumProvider();
            if (!w || !m) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"](`Cannot sendTransaction before embedded wallet ${c.address} is connected`);
            let y = e.chainId ? Number(e.chainId) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$caip2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["extractChainIdFromCAIP2"])(w.chainId);
            ((e)=>{
                if (!nr.chains.map((e)=>e.id).includes(e)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyConnectorError"](`Chain ID ${e} is not supported. It must be added to the config.supportedChains property of the PrivyProvider.`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNSUPPORTED_CHAIN_ID);
            })(y);
            let f = Object.assign({}, e, {
                chainId: y
            });
            if (Nr({
                showWalletUIs: t?.showWalletUIs
            })) (async ()=>{
                let e = await Hr();
                if (!e || !rr) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void o(Error("Must have valid access token and Privy wallet to send transaction"));
                try {
                    if (!await ha.recoverPrimaryWallet()) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), void o(Error("Unable to connect to wallet"));
                    let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getJsonRpcProvider"])(f.chainId, nr.chains, nr.rpcConfig, {
                        appId: W.appId
                    }), a = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["populateTransactionRequest"])(c.address, f, r);
                    if (Nr({
                        showWalletUIs: t?.showWalletUIs
                    })) {
                        let { totalGasEstimate: e } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$utils$2f$gas$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateTotalGasEstimate"])(a, r), { hasSufficientFunds: t } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAndCheckBalance"])(c.address, a, e, r);
                        if (!t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProviderRpcError"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ProviderRpcError"]("Wallet has insufficient funds for this transaction.", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$js$2d$sdk$2d$core$2f$dist$2f$esm$2f$embedded$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ProviderErrors"].E32603_DEFAULT_INTERNAL_ERROR.eipCode));
                    }
                    let { entropyId: n, entropyIdVerifier: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(p), w = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendTransaction"])({
                        accessToken: e,
                        entropyId: n,
                        entropyIdVerifier: l,
                        transactingWallet: c,
                        walletProxy: rr,
                        transactionRequest: a,
                        provider: r,
                        requesterAppId: s
                    });
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onSuccess", w), i(w);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), o(e);
                }
            })();
            else {
                let { entropyId: e, entropyIdVerifier: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(p), n = {
                    entropyId: e,
                    entropyIdVerifier: r,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), o(e);
                    }
                }, l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFundingEnabled"])(nr) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareFundingModalData"])({
                    address: c.address,
                    appConfig: nr,
                    fundWalletConfig: a,
                    methodScreen: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN,
                    chainIdOverride: f.chainId,
                    comingFromSendTransactionScreen: !0
                }) : void 0;
                cr({
                    connectWallet: n,
                    sendTransaction: {
                        transactionRequest: f,
                        transactingWallet: c,
                        entropyId: e,
                        entropyIdVerifier: r,
                        onSuccess: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onSuccess", e), i(e);
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), o(e);
                        },
                        uiOptions: t || {},
                        fundWalletConfig: a,
                        requesterAppId: s
                    },
                    funding: l
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }
        }), ia = ({ transaction: e, connection: t, transactionOptions: r, fundWalletConfig: a, uiOptions: n, wallet: i })=>new Promise(async (o, s)=>{
            let { requesterAppId: l } = n || {};
            if (!Y || !le) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void s(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before signing with a Privy wallet", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED));
            let c = i ? le.linkedAccounts.find((e)=>"wallet" === e.type && e.address === i.address) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(le);
            if (!c) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void s(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have a Privy wallet before signing", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND));
            sr(!0);
            let { rootWallet: d } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(le, c.address);
            if (!await ha.recoverPrimaryWallet().catch(()=>!1) || !d) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"](`Cannot sendSolanaTransaction before embedded wallet ${c.address} is connected`, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND);
            if (Nr({
                showWalletUIs: n?.showWalletUIs
            })) (async ()=>{
                let a = await Hr();
                if (!a || !rr) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void s(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must have valid access token and Privy wallet to send transaction", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND));
                try {
                    if (!await ha.recoverPrimaryWallet()) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), void s(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to connect to wallet", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR));
                    if (Nr({
                        showWalletUIs: n?.showWalletUIs
                    }) && !await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasSufficientFunds"])(e, t)) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INSUFFICIENT_BALANCE), void s(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Solana wallet has insufficient funds for this transaction.", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INSUFFICIENT_BALANCE));
                    let { entropyId: i, entropyIdVerifier: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromUser"])(le), { signature: d, receipt: u } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendSolanaTransaction"])({
                        accessToken: a,
                        tx: e,
                        connection: t,
                        walletProxy: rr,
                        transactionOptions: r,
                        entropyId: i,
                        entropyIdVerifier: l,
                        transactingWalletAddress: c.address,
                        transactingWalletIndex: c.walletIndex ?? 0
                    }), h = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$solana$2f$transaction$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createSolanaTransactionReceipt"])(d, u);
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onSuccess", h), o(h);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), s(e);
                }
            })();
            else {
                let { entropyId: i, entropyIdVerifier: u } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(d), h = {
                    entropyId: i,
                    entropyIdVerifier: u,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SEND_SOLANA_TRANSACTION_SCREEN,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), s(e);
                    }
                }, p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$isFundingEnabled$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFundingEnabled"])(nr) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareSolanaFundingModalData"])({
                    address: c.address,
                    appConfig: nr,
                    methodScreen: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN,
                    fundWalletConfig: a,
                    comingFromSendTransactionScreen: !0
                }) : void 0;
                cr({
                    connectWallet: h,
                    sendSolanaTransaction: {
                        transactionRequest: e,
                        connection: t,
                        transactionOptions: r,
                        transactingWallet: c,
                        onSuccess: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onSuccess", e), o(e);
                        },
                        onFailure: (e)=>{
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].TRANSACTION_FAILURE), s(e);
                        },
                        uiOptions: n || {},
                        requesterAppId: l
                    },
                    funding: p
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }
        });
    function oa() {
        return new Promise(async (e, t)=>{
            let r = await Hr();
            if (!r || !rr) throw Error("Must have valid access token to enroll in MFA");
            try {
                await rr.verifyMfa({
                    accessToken: r
                }), e();
            } catch (e) {
                t(e);
            }
        });
    }
    let sa = (e)=>e?.linkedAccounts.filter((e)=>null !== e.latestVerifiedAt && !("wallet" === e.type && "privy" === e.walletClientType)).sort((e, t)=>t.latestVerifiedAt.getTime() - e.latestVerifiedAt.getTime())[0], la = (e)=>{
        let t = le?.linkedAccounts.filter((t)=>t.type === e).length ?? 0, { displayName: r, loginMethod: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$toDisplayFromAccountType$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toDisplayFromAccountType"])(e);
        if ("passkey" === e && t >= 5 || "passkey" !== e && t >= 1) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].CANNOT_LINK_MORE_OF_TYPE, {
            linkMethod: a
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"](`User already has an account of type ${r} linked.`);
    };
    async function ca({ showAutomaticRecovery: e = !1, legacySetWalletPasswordFlow: t = !1 }) {
        Bt(null);
        let r = t ? "setWalletPassword" : "setWalletRecovery";
        if (!Y || !le) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before adding recovery method to Privy wallet");
        let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(le);
        if (!a || !rr) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), Error("Must have a Privy wallet to add a recovery method");
        try {
            await oa();
        } catch (e) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MISSING_MFA_CREDENTIALS), e;
        }
        return new Promise((n, i)=>{
            sr(!0);
            let o = {
                onSuccess: (e)=>{
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onSuccess", "user-passcode", e), n(e);
                },
                onFailure: (e)=>{
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_SET_PASSWORD_FLOW), i(e);
                },
                callAuthOnSuccessOnClose: !1
            }, s = "user-passcode" === a.recoveryMethod, l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toEmbeddedWalletSetRecoveryScreen"])({
                walletAction: "update",
                availableRecoveryMethods: nr.embeddedWallets.userOwnedRecoveryOptions,
                legacySetWalletPasswordFlow: t,
                isResettingPassword: s,
                showAutomaticRecovery: e
            }), { entropyId: c, entropyIdVerifier: d } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(a);
            cr({
                setWalletPassword: o,
                recoverWallet: {
                    entropyId: c,
                    entropyIdVerifier: d,
                    onFailure: i
                },
                createWallet: o,
                connectWallet: {
                    onCompleteNavigateTo: l,
                    shouldForceMFA: !1,
                    entropyId: c,
                    entropyIdVerifier: d,
                    onFailure: (e)=>{
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, r, "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), i(e);
                    }
                },
                recoverySelection: {
                    isInAccountCreateFlow: !1,
                    isResettingPassword: s
                }
            }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
        });
    }
    async function da({ appId: e, action: t }) {
        let r = await Hr();
        if ("link" === t && !r) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED, {
            linkMethod: `privy:${e}`
        }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated before linking an account.");
        if ("login" === t && r) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Attempted to log in, but user is already logged in. Use a `link` helper instead.");
        Ir.current = `privy:${e}`, Wr.current = t;
        let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popup$2f$triggerPopup$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["triggerPopup"])();
        return k.createAnalyticsEvent({
            eventName: "cross_app_auth_started",
            payload: {
                providerAppId: e
            }
        }), new Promise(async (r, n)=>{
            let { name: i, logoUrl: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getProviderAppMetadata"])({
                api: k.api,
                providerAppId: e,
                requesterAppId: nr.id
            });
            cr({
                crossAppAuth: {
                    appId: e,
                    name: i,
                    logoUrl: o,
                    action: t,
                    popup: a,
                    onSuccess: r,
                    onError: n
                }
            }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].CROSS_APP_AUTH_SCREEN);
        });
    }
    let ua = {
        ready: G,
        authenticated: Y,
        user: le,
        walletConnectors: k.connectors || null,
        connectWallet: (e)=>{
            e && "target" in e && e && (e = void 0), cr({
                externalConnectWallet: {
                    walletList: e?.walletList && e?.walletList.length > 0 ? e.walletList : void 0,
                    suggestedAddress: e?.suggestedAddress
                }
            }), br(Y ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_ONLY_AUTHENTICATED_SCREEN : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_ONLY_LANDING_SCREEN);
        },
        linkWallet: Yr,
        startCrossAppAuthFlow: da,
        linkEmail: ()=>{
            $r("email"), la("email"), Ir.current = "email", Wr.current = "link", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_EMAIL_SCREEN);
        },
        linkPhone: ()=>{
            $r("sms"), la("phone"), Ir.current = "sms", Wr.current = "link", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_PHONE_SCREEN);
        },
        linkGoogle: async ()=>{
            $r("google"), la("google_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("google");
        },
        linkTwitter: async ()=>{
            $r("twitter"), la("twitter_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("twitter");
        },
        linkDiscord: async ()=>{
            $r("discord"), la("discord_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("discord");
        },
        linkGithub: async ()=>{
            $r("github"), la("github_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("github");
        },
        linkSpotify: async ()=>{
            $r("spotify"), la("spotify_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("spotify");
        },
        linkInstagram: async ()=>{
            $r("instagram"), la("instagram_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("instagram");
        },
        linkTiktok: async ()=>{
            $r("tiktok"), la("tiktok_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("tiktok");
        },
        linkLinkedIn: async ()=>{
            $r("linkedin"), la("linkedin_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("linkedin");
        },
        linkApple: async ()=>{
            $r("apple"), la("apple_oauth"), Wr.current = "link", await ha.initLoginWithOAuth("apple");
        },
        linkPasskey: async ()=>{
            $r("passkey"), la("passkey"), await ha.initLinkWithPasskey(), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LINK_PASSKEY_SCREEN);
        },
        linkTelegram: async (e)=>{
            if ($r("telegram"), la("telegram"), Wr.current = "link", Ir.current = "telegram", e?.launchParams) if (e.launchParams.initDataRaw) {
                let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramAuthFlow"];
                k.startAuthFlow(t), t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertInitDataRawToTelegramWebAppData"])(e.launchParams.initDataRaw), cr({
                    telegramAuthModalData: {
                        seamlessAuth: !0
                    }
                }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN);
            } else (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_DATA, {
                linkMethod: "telegram"
            });
            else await ha.initLoginWithTelegram();
            br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].TELEGRAM_AUTH_SCREEN);
        },
        linkFarcaster: async ()=>{
            $r("farcaster"), la("farcaster"), await ha.initLoginWithFarcaster(), Wr.current = "link", Ir.current = "farcaster", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_FARCASTER_CONNECTION);
        },
        updateEmail: ()=>{
            if ($r("email"), !le?.email) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User does not have an email linked to their account.");
            Wr.current = "update", Ir.current = "email", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].UPDATE_EMAIL_SCREEN);
        },
        updatePhone: ()=>{
            if ($r("sms"), !le?.phone) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User does not have a phone number linked to their account.");
            Wr.current = "update", Ir.current = "sms", br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].UPDATE_PHONE_SCREEN);
        },
        login: async (e)=>{
            e && "target" in e && e && (e = void 0);
            let t = "Attempted to log in, but user is already logged in. Use a `link` helper instead.";
            if (!G) {
                let e = await new Promise((e)=>{
                    ur((t)=>e.bind(t));
                });
                if (ur(null), e) return void console.warn(t);
            }
            !le || le.isGuest ? (Wr.current = "login", cr({
                login: e
            }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].LANDING)) : console.warn(t);
        },
        connectOrCreateWallet: async ()=>{
            G || (await new Promise((e)=>{
                ur(()=>e);
            }), ur(null)), Y ? console.warn("User must be unauthenticated to `connectOrCreateWallet`") : (Wr.current = "login", Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].CONNECT_OR_CREATE));
        },
        logout: async ()=>{
            if (Wr.current = null, Ir.current = null, le && k.clearProviderAcccessTokens(le), Bt(null), await k.logout(), le && rr) try {
                await rr.clearMfa({
                    userId: le.id
                });
            } catch (e) {}
            de(null), X(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "logout", "onSuccess"), K(!1), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CLIENT_ANALYTICS_ID_KEY"]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGuestCredentialStorageKey"])(nr.id));
        },
        getAccessToken: ()=>k.getCustomerAccessToken(),
        getEthereumProvider: ()=>{
            if (!le || !le.wallet) return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"];
            let e = ue.find((e)=>le.wallet && e.address === le.wallet.address), t = k.connectors?.walletConnectors.find((t)=>t.wallets.find((t)=>t.address === e?.address));
            return e && t ? t.proxyProvider : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"];
        },
        getEthersProvider: ()=>{
            if (!le || !le.wallet) return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$providers$2f$lib$2e$esm$2f$web3$2d$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Web3Provider"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsExternalProvider"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"]));
            let e = ue.find((e)=>le.wallet && e.address === le.wallet.address), t = k.connectors?.walletConnectors.find((t)=>t.wallets.find((t)=>t.address === e?.address));
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$providers$2f$lib$2e$esm$2f$web3$2d$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Web3Provider"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsExternalProvider"](e && t ? t.proxyProvider : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"]));
        },
        getWeb3jsProvider: ()=>{
            if (!le || !le.wallet) return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsAbstractProvider"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"]);
            let e = ue.find((e)=>le.wallet && e.address === le.wallet.address), t = k.connectors?.walletConnectors.find((t)=>t.wallets.find((t)=>t.address === e?.address));
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AsAbstractProvider"](e && t ? t.proxyProvider : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$privyProxyProvider$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProxyProvider"]);
        },
        unlinkWallet: async (e)=>{
            let t;
            return de(t = e.startsWith("0x") ? await k.unlinkEthereumWallet(e) : await k.unlinkSolanaWallet(e)), t;
        },
        unlinkEmail: async (e)=>{
            let t = await k.unlinkEmail(e);
            return de(t), t;
        },
        unlinkPhone: async (e)=>{
            let t = await k.unlinkPhone(e);
            return de(t), t;
        },
        unlinkGoogle: async (e)=>{
            let t = await k.unlinkOAuth("google", e);
            return de(t), t;
        },
        unlinkTwitter: async (e)=>{
            let t = await k.unlinkOAuth("twitter", e);
            return de(t), t;
        },
        unlinkDiscord: async (e)=>{
            let t = await k.unlinkOAuth("discord", e);
            return de(t), t;
        },
        unlinkGithub: async (e)=>{
            let t = await k.unlinkOAuth("github", e);
            return de(t), t;
        },
        unlinkSpotify: async (e)=>{
            let t = await k.unlinkOAuth("spotify", e);
            return de(t), t;
        },
        unlinkInstagram: async (e)=>{
            let t = await k.unlinkOAuth("instagram", e);
            return de(t), t;
        },
        unlinkTiktok: async (e)=>{
            let t = await k.unlinkOAuth("tiktok", e);
            return de(t), t;
        },
        unlinkLinkedIn: async (e)=>{
            let t = await k.unlinkOAuth("linkedin", e);
            return de(t), t;
        },
        unlinkApple: async (e)=>{
            let t = await k.unlinkOAuth("apple", e);
            return de(t), t;
        },
        unlinkFarcaster: async (e)=>{
            let t = await k.unlinkFarcaster(e);
            return de(t), t;
        },
        unlinkTelegram: async (e)=>{
            let t = await k.unlinkTelegram(e);
            return de(t), t;
        },
        unlinkPasskey: async (e)=>{
            let t = await k.unlinkPasskey(e);
            return de(t), t;
        },
        unlinkCrossAppAccount: async ({ subject: e })=>{
            let t = le?.linkedAccounts.find((t)=>"cross_app" === t.type && t.subject === e)?.providerApp;
            if (!t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid subject");
            k.storeProviderAccessToken(t.id, null);
            let r = await k.unlinkOAuth(`privy:${t.id}`, e);
            return de(r), r;
        },
        setActiveWallet: async (e)=>{
            let t = ue.find((t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(t.address) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(e)), a = le?.linkedAccounts.find((t)=>"wallet" === t.type && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(t.address) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ethersproject$2f$address$2f$lib$2e$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(e));
            if (t && await t.isConnected()) if (t.linked) {
                let e = Object.assign({}, le);
                e.wallet = a && {
                    address: a.address,
                    chainType: a.chainType,
                    chainId: a.chainId,
                    walletClient: a.walletClient,
                    walletClientType: a.walletClientType,
                    connectorType: a.connectorType,
                    imported: a.imported,
                    delegated: a.delegated,
                    walletIndex: a.walletIndex
                }, de(e);
            } else t.loginOrLink();
            else cr({
                externalConnectWallet: {
                    suggestedAddress: e
                }
            }), Yr();
        },
        forkSession: ()=>k.forkSession(),
        createWallet: async (e)=>{
            if (e && "target" in e && e && (e = void 0), !Y || !le) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before creating a Privy wallet");
            return Zr(le, 15e3, e);
        },
        setWalletRecovery: async (e)=>ca({
                legacySetWalletPasswordFlow: !1,
                showAutomaticRecovery: e?.showAutomaticRecovery ?? !1
            }),
        setWalletPassword: async ()=>ca({
                legacySetWalletPasswordFlow: !0,
                showAutomaticRecovery: !1
            }),
        signMessage: (e, t, r)=>new Promise(async (a, n)=>{
                let { requesterAppId: i } = t || {};
                if (!Y || !le) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void n(Error("User must be authenticated before signing with a Privy wallet"));
                let o = r ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(le)?.address;
                if (!o) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: s, rootWallet: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(le, o);
                if (!s || !l) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void n(Error("Must have a Privy wallet before signing"));
                if ("string" != typeof e || e.length < 1) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_MESSAGE), void n(Error("Message must be a non-empty string"));
                sr(!0);
                let c = async ()=>{
                    if (!Y) throw Error("User must be authenticated before signing with a Privy wallet");
                    let t = await Hr();
                    if (!rr || !t || !await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    k.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_message_started",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: i
                        }
                    });
                    let { entropyId: r, entropyIdVerifier: a } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l), { response: n } = await rr.rpc({
                        accessToken: t,
                        entropyId: r,
                        entropyIdVerifier: a,
                        chainType: "ethereum",
                        hdWalletIndex: s.walletIndex ?? 0,
                        requesterAppId: i,
                        request: {
                            method: "personal_sign",
                            params: [
                                e,
                                s.address
                            ]
                        }
                    }), o = n.data;
                    return k.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_message_completed",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: i
                        }
                    }), o;
                };
                if (Nr({
                    showWalletUIs: t?.showWalletUIs
                })) try {
                    let e = await c();
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onSuccess", e), a(e);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), n(e ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProviderRpcError"]("Unable to sign message"));
                }
                else {
                    let { entropyId: r, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l);
                    cr({
                        signMessage: {
                            method: "personal_sign",
                            data: e,
                            confirmAndSign: c,
                            onSuccess: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onSuccess", e), a(e);
                            },
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), n(e);
                            },
                            uiOptions: t || {}
                        },
                        connectWallet: {
                            entropyId: r,
                            entropyIdVerifier: i,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), n(e);
                            }
                        }
                    }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        signTypedData: (e, t, r)=>new Promise(async (a, n)=>{
                let { requesterAppId: i } = t || {};
                if (!Y || !le) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void n(Error("User must be authenticated before signing with a Privy wallet"));
                let o = r ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(le)?.address;
                if (!o) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: s, rootWallet: l } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(le, o);
                if (!l || !s) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void n(Error("Must have a Privy wallet before signing"));
                sr(!0);
                let c = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(e), d = async ()=>{
                    if (!Y) throw Error("User must be authenticated before signing with a Privy wallet");
                    let e = await Hr();
                    if (!rr || !e || !await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    k.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_typed_data_started",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: i
                        }
                    });
                    let { entropyId: t, entropyIdVerifier: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l), { response: a } = await rr.rpc({
                        accessToken: e,
                        entropyId: t,
                        entropyIdVerifier: r,
                        chainType: "ethereum",
                        hdWalletIndex: s.walletIndex ?? 0,
                        requesterAppId: i,
                        request: {
                            method: "eth_signTypedData_v4",
                            params: [
                                s.address,
                                c
                            ]
                        }
                    }), n = a.data;
                    return k.createAnalyticsEvent({
                        eventName: "embedded_wallet_sign_typed_data_completed",
                        payload: {
                            walletAddress: s.address,
                            requesterAppId: i
                        }
                    }), n;
                };
                if (Nr({
                    showWalletUIs: t?.showWalletUIs,
                    typedData: !0
                })) try {
                    let e = await d();
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onSuccess", e), a(e);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), n(e ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyProviderRpcError"]("Unable to sign message"));
                }
                else {
                    let { entropyId: e, entropyIdVerifier: r } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(l);
                    cr({
                        signMessage: {
                            method: "eth_signTypedData_v4",
                            data: c,
                            confirmAndSign: d,
                            onSuccess: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onSuccess", e), a(e);
                            },
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signTypedData", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNABLE_TO_SIGN), n(e);
                            },
                            uiOptions: t || {}
                        },
                        connectWallet: {
                            entropyId: e,
                            entropyIdVerifier: r,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), n(e);
                            }
                        }
                    }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        sendTransaction: async (e, t, r, a)=>{
            let n = await na(e, t, r, a);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$rpc$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatReceipt"])(await n.wait());
        },
        sendSolanaTransaction: async (e, t, r, a, n, i)=>{
            let o = i ? ye.find(({ address: e })=>e === i) : ye.slice().sort((e, t)=>(e.walletIndex ?? 0) - (t.walletIndex ?? 0))[0];
            if (!o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "sendSolanaTransaction", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Embedded wallet not found", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND);
            return await ia({
                transaction: e,
                connection: t,
                transactionOptions: a,
                uiOptions: r,
                fundWalletConfig: n,
                wallet: o
            });
        },
        exportWallet: (e)=>new Promise(async (t, r)=>{
                if (!Y || !le) return void r(Error("User must be authenticated before exporting their Privy wallet"));
                e && "target" in e && e && (e = void 0);
                let a = e?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(le)?.address;
                if (!a) return void r(Error("User does not have an HD Ethereum wallet. To export an imported wallet, pass the `address` of the wallet to `exportWallet`."));
                let { signingWallet: n, rootWallet: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEthereumSigningAndRootWallet"])(le, a);
                if (!n || !i) return void r(Error("Must have a Privy wallet before exporting"));
                sr(!0);
                let { entropyId: o, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(i), l = {
                    entropyId: o,
                    entropyIdVerifier: s,
                    onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_KEY_EXPORT_SCREEN,
                    onFailure: r,
                    shouldForceMFA: !0
                };
                cr(lr), await Hr() && rr ? rr ? (cr({
                    keyExport: {
                        appId: W.appId,
                        appClientId: W.clientId,
                        origin: k.apiUrl,
                        walletToExport: n,
                        primaryWallet: i,
                        onSuccess: t,
                        onFailure: r
                    },
                    connectWallet: l
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN)) : r(Error("Must have a Privy wallet before exporting")) : r(Error("Must have valid access token to enroll in MFA"));
            }),
        promptMfa: oa,
        async init (e) {
            switch(e){
                case "sms":
                    return void await k.initMfaSmsVerification();
                case "passkey":
                    return await k.initMfaPasskeyVerification();
                case "totp":
                    return;
                default:
                    throw Error(`Unsupported MFA method: ${e}`);
            }
        },
        async submit (e, t) {
            switch(e){
                case "totp":
                case "sms":
                    if ("string" != typeof t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid MFA code");
                    _r.current?.resolve({
                        mfaMethod: e,
                        mfaCode: t,
                        relyingParty: window.origin
                    }), await new Promise((e, t)=>{
                        Ar.current = {
                            resolve: e,
                            reject: t
                        };
                    });
                    break;
                case "passkey":
                    if ("string" == typeof t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Invalid authenticator response");
                    let r = await __turbopack_require__("[project]/node_modules/@simplewebauthn/browser/dist/bundle/index.js [app-client] (ecmascript, async loader)")(__turbopack_import__), a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$passkeys$2f$transformResponseToSnakeCase$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformResponseToSnakeCase"])(await r.startAuthentication(t));
                    _r.current?.resolve({
                        mfaMethod: e,
                        mfaCode: a,
                        relyingParty: window.origin
                    }), await new Promise((e, t)=>{
                        Ar.current = {
                            resolve: e,
                            reject: t
                        };
                    });
                    break;
                default:
                    throw _r.current?.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unsupported MFA method")), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"](`Unsupported MFA method: ${e}`);
            }
        },
        cancel () {
            _r.current?.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("MFA canceled"));
        },
        async initEnrollmentWithSms (e) {
            let t = await Hr();
            if (!t || !rr) throw Error("Must have valid access token to enroll in MFA");
            await rr.initEnrollMfa({
                method: "sms",
                accessToken: t,
                phoneNumber: e.phoneNumber
            });
        },
        enrollInMfa: (e)=>new Promise((t, r)=>{
                if (!e) return ha.closePrivyModal(), void t();
                nr.mfa.noPromptOnMfaRequired && console.warn("[Privy Warning] Triggering the 'showMfaEnrollmentModal' function when 'noPromptOnMfaRequired' is set to true is unexpected. If this is intentional, ensure that you are building custom UIs for MFA verification."), cr({
                    mfaEnrollmentFlow: {
                        mfaMethods: nr.mfa.methods,
                        onSuccess: t,
                        onFailure: r
                    }
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].MFA_ENROLLMENT_FLOW_SCREEN);
            }),
        async initEnrollmentWithTotp () {
            let e = await Hr();
            if (!e || !rr) throw Error("Must have valid access token to enroll in MFA");
            let t = await rr.initEnrollMfa({
                method: "totp",
                accessToken: e
            });
            return {
                secret: t.secret,
                authUrl: t.authUrl
            };
        },
        async submitEnrollmentWithSms (e) {
            let t = await Hr();
            if (!t || !rr) throw Error("Must have valid access token to enroll in MFA");
            await rr.submitEnrollMfa({
                method: "sms",
                accessToken: t,
                phoneNumber: e.phoneNumber,
                code: e.mfaCode
            }), de(await k.getAuthenticatedUser());
        },
        async submitEnrollmentWithTotp (e) {
            let t = await Hr();
            if (!t || !rr) throw Error("Must have valid access token to enroll in MFA");
            await rr.submitEnrollMfa({
                method: "totp",
                accessToken: t,
                code: e.mfaCode
            }), de(await k.getAuthenticatedUser());
        },
        async initEnrollmentWithPasskey () {},
        async submitEnrollmentWithPasskey ({ credentialIds: e }) {
            let t = await Hr();
            if (!t || !rr) throw Error("Must have valid access token to enroll in MFA");
            await rr.submitEnrollMfa({
                method: "passkey",
                accessToken: t,
                credentialIds: e
            }), de(await k.getAuthenticatedUser());
        },
        async unenroll (e) {
            let t = await Hr();
            if (!t || !rr) throw Error("Must have valid access token to remove MFA");
            "passkey" === e ? await rr.submitEnrollMfa({
                method: "passkey",
                accessToken: t,
                credentialIds: []
            }) : await rr.unenrollMfa({
                method: e,
                accessToken: t
            }), de(await k.getAuthenticatedUser());
        },
        requestFarcasterSignerFromWarpcast: async ()=>{
            let e = await Hr(), t = le?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!e) throw Error("Must have valid access token to connect with Farcaster");
            if (!rr || !t) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!le?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            let r = await rr.initFarcasterSigner({
                address: t.address,
                hdWalletIndex: null,
                accessToken: e,
                mfaCode: null,
                mfaMethod: null,
                relyingParty: window.origin
            });
            "approved" === r.status && de(await k.getAuthenticatedUser() || le || null), cr({
                farcasterSigner: r
            }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].AWAITING_FARCASTER_SIGNER);
        },
        getFarcasterSignerPublicKey: async ()=>{
            let e, t = await Hr(), r = le?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!rr || !r) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!le?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            if (!le.farcaster?.signerPublicKey) throw Error("Must have a Farcaster signer public key to sign");
            return e = le.farcaster.signerPublicKey.slice(2), Uint8Array.from(e.match(/.{1,2}/g).map((e)=>parseInt(e, 16)));
        },
        signFarcasterMessage: async (e)=>{
            let t = await Hr(), r = le?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!rr || !r) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!le?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            if (!await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
            if (!le.farcaster?.signerPublicKey) throw Error("Must have a Farcaster signer public key to sign");
            let a = await __turbopack_require__("[project]/node_modules/@simplewebauthn/browser/dist/bundle/index.js [app-client] (ecmascript, async loader)")(__turbopack_import__), n = await rr.signFarcasterMessage({
                address: r.address,
                hdWalletIndex: null,
                accessToken: t,
                mfaCode: null,
                mfaMethod: null,
                payload: {
                    hash: a.bufferToBase64URLString(e)
                },
                fid: BigInt(le.farcaster.fid),
                relyingParty: window.origin
            });
            return new Uint8Array(a.base64URLStringToBuffer(n.signature));
        },
        createGuestAccount: async ()=>{
            if (le && !le.isGuest) throw Error("User cannot already be authenticated to create a guest account");
            return le?.isGuest ? le : ha.loginWithGuestAccountFlow();
        },
        signMessageWithCrossAppWallet (e, { address: t }) {
            let r = le?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: le,
                client: k,
                address: t,
                requesterAppId: nr.id,
                request: {
                    method: r ? "privy_signSmartWalletMessage" : "personal_sign",
                    params: [
                        e,
                        t
                    ]
                },
                reconnect: da
            });
        },
        signTypedDataWithCrossAppWallet (e, { address: t }) {
            let r = le?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t)), a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateTypedDataWithDomainType"])(e);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: le,
                client: k,
                address: t,
                requesterAppId: nr.id,
                request: {
                    method: r ? "privy_signSmartWalletTypedData" : "eth_signTypedData_v4",
                    params: [
                        t,
                        a
                    ]
                },
                reconnect: da
            });
        },
        sendTransactionWithCrossAppWallet (e, { address: t }) {
            let r = le?.linkedAccounts.some((e)=>"cross_app" === e.type && e.smartWallets.some((e)=>e.address === t));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$sendCrossAppRequest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendCrossAppRequest"])({
                user: le,
                client: k,
                address: t,
                requesterAppId: nr.id,
                request: {
                    method: r ? "privy_sendSmartWalletTx" : "eth_sendTransaction",
                    params: [
                        e
                    ]
                },
                reconnect: da
            });
        },
        isModalOpen: H,
        mfaMethods: nr.mfa.methods
    };
    Mr = ua.signMessage, Lr = ua.signTypedData, Fr = async (...e)=>{
        let t = await na(...e);
        return nr.embeddedWallets.waitForTransactionConfirmation && await t.wait(), t;
    };
    let ha = {
        setAuthenticated: X,
        setUser: de,
        isNewUserThisSession: Ft,
        pendingTransaction: null,
        walletConnectionStatus: Kt,
        connectors: k.connectors?.walletConnectors ?? [],
        solanaWallets: ye,
        rpcConfig: nr.rpcConfig,
        chains: nr.chains,
        appId: W.appId,
        showFiatPrices: "native-token" !== nr.embeddedWallets.priceDisplay.primary,
        clientAnalyticsId: k.clientAnalyticsId,
        customAuthStatus: gr,
        noPromptOnSignature: kr,
        emailOtpState: $t,
        setEmailOtpState: Yt,
        smsOtpState: Xt,
        setSmsOtpState: Qt,
        oAuthState: er,
        setOAuthState: tr,
        siweState: Jt,
        setSiweState: Zt,
        isHeadlessOAuthLoading: Vt,
        nativeTokenSymbolForChainId: (e)=>nr.chains.find((t)=>t.id === Number(e))?.nativeCurrency.symbol,
        initializeWalletProxy: async (e)=>{
            if (rr) return rr;
            let t = new Promise((e)=>{
                pr(()=>(t)=>e(t));
            }), r = new Promise((t)=>setTimeout(()=>t(null), e)), a = await Promise.race([
                t,
                r
            ]);
            return pr(null), a;
        },
        getAuthFlow: ()=>k.authFlow,
        getAuthMeta: ()=>k.authFlow?.meta,
        client: k,
        closePrivyModal: async (e = {
            shouldCallAuthOnSuccess: !0,
            isSuccess: !1
        })=>{
            let t, r = G && Y && le;
            r && Ir.current && (t = sa(le)), "login" === Wr.current ? e.shouldCallAuthOnSuccess && r && Ir.current ? ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onComplete", le, Ft, !1, Ir.current, t ?? null), W.onSuccess?.(le, Ft)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_AUTH_FLOW) : "link" === Wr.current && t ? e.isSuccess && r && Ir.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onSuccess", le, Ir.current, t) : Ir.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_LINK_FLOW, {
                linkMethod: Ir.current
            }) : "update" === Wr.current && t && (e.isSuccess && r && Ir.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "update", "onSuccess", le, Ir.current, t) : Ir.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "update", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].USER_EXITED_UPDATE_FLOW, {
                linkMethod: Ir.current
            }));
            let a = jt && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["FUNDING_SCREENS"].includes(jt), n = jt === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].ERROR_SCREEN && lr.errorModalData && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["FUNDING_SCREENS"].includes(lr.errorModalData.previousScreen);
            if ((a || n) && lr.funding) {
                let e, t = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fundingScreenMethodMap"][jt] ?? null;
                if ("solana" === lr.funding.chainType) {
                    let r = b(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$plugins$2f$solana$2d$funding$2f$id$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SOLANA_FUNDING_PLUGIN_ID"]);
                    if (!r) return void console.warn("Unable to load solana plugin, skipping balance");
                    try {
                        e = BigInt(await r.getBalance({
                            address: lr.funding.address,
                            cluster: lr.funding.cluster
                        }));
                    } catch  {
                        console.error("Unable to pull wallet balance");
                    }
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "fundSolanaWallet", "onUserExited", {
                        address: lr.funding.address,
                        cluster: lr.funding.cluster,
                        fundingMethod: t,
                        balance: e
                    });
                } else {
                    let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$utils$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getJsonRpcProvider"])(lr.funding.chain.id, nr.chains, nr.rpcConfig, {
                        appId: W.appId
                    });
                    try {
                        e = (await r.getBalance(lr.funding.address)).toBigInt();
                    } catch  {
                        console.error("Unable to pull wallet balance");
                    }
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "fundWallet", "onUserExited", {
                        address: lr.funding.address,
                        chain: lr.funding.chain,
                        fundingMethod: t,
                        balance: e
                    });
                }
            }
            cr({
                ...lr,
                externalConnectWallet: {
                    suggestedAddress: void 0
                }
            }), Wr.current = null, Ir.current = null, xt(!1), K(!1), setTimeout(()=>{
                k.authFlow = void 0;
            }, 200), k.createAnalyticsEvent({
                eventName: "modal_closed"
            });
        },
        solanaSignMessage: ({ message: e, address: t })=>new Promise(async (r, a)=>{
                if (!Y || !le) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), void a(Error("User must be authenticated before signing with a Privy wallet"));
                let n = t ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(le)?.address;
                if (!n) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must have an embedded wallet to sign a message.");
                let { signingWallet: i, rootWallet: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(le, n);
                if (!i || !o) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), void a(Error("Must have a Privy wallet before signing"));
                if ("string" != typeof e || e.length < 1) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].INVALID_MESSAGE), void a(Error("Message must be a non-empty string"));
                sr(!0);
                let s = async ()=>{
                    if (!Y) throw Error("User must be authenticated before signing with a Privy wallet");
                    let t = await k.getAccessToken();
                    if (!t) throw Error("User must be authenticated to use their embedded wallet.");
                    let r = ha.walletProxy ?? await ha.initializeWalletProxy(15e3);
                    if (!r) throw Error("Failed to initialize embedded wallet proxy.");
                    if (!await ha.recoverPrimaryWallet()) throw Error("Unable to connect to wallet");
                    if (!o) throw Error("No root wallet for signing wallet found");
                    let { entropyId: a, entropyIdVerifier: n } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(o), { response: s } = await r.rpc({
                        accessToken: t,
                        entropyId: a,
                        entropyIdVerifier: n,
                        chainType: "solana",
                        hdWalletIndex: i.walletIndex ?? 0,
                        request: {
                            method: "signMessage",
                            params: {
                                message: e
                            }
                        }
                    });
                    return s.data.signature;
                };
                if (Nr({
                    showWalletUIs: void 0
                })) try {
                    let e = await s();
                    r({
                        signature: e
                    });
                } catch (e) {
                    a(e);
                }
                else {
                    let { entropyId: t, entropyIdVerifier: n } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(o);
                    cr({
                        signMessage: {
                            method: "solana_signMessage",
                            data: e,
                            confirmAndSign: s,
                            onSuccess: (e)=>{
                                r({
                                    signature: e
                                });
                            },
                            onFailure: (e)=>{
                                a(e);
                            },
                            uiOptions: {}
                        },
                        connectWallet: {
                            entropyId: t,
                            entropyIdVerifier: n,
                            onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,
                            onFailure: (e)=>{
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "signMessage", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_CONNECT_WALLET_ERROR), a(e);
                            }
                        }
                    }), Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
                }
            }),
        openPrivyModal: br,
        connectWallet: Kr,
        initLoginWithWallet: async (e, t, r)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$connectors$2f$isBaseConnectedEthereumWallet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBaseConnectedEthereumWallet"])(e) ? (Ir.current = "siwe", Gr(e, t, r)) : (Ir.current = "siws", zr(e, t));
        },
        loginWithWallet: async ()=>{
            let e, t, r;
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SiweFlow"] ? e = "siwe" : k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$siws$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SiwsFlow"] && (e = "siws"), !e) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize SIWE/SIWS flow first.");
            if (null !== await k.getAccessToken()) try {
                ({ user: t } = await k.link()), Ir.current = e;
            } catch (t) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            else try {
                ({ user: t, isNewUser: r } = await k.authenticate()), Ir.current = e;
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].GENERIC_CONNECT_WALLET_ERROR), e;
            }
            de(t || le || null), xt(r || !1), X(!0);
        },
        delegateWallet: async ({ address: e, chainType: t })=>new Promise(async (r, a)=>{
                let n = await Hr();
                if (!Y || !le || !n) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated and have an embedded wallet to delegate actions.");
                if ("solana" !== t && "ethereum" !== t) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Only Solana and Ethereum embedded wallets are supported for delegation and revocation.");
                let i = ha.walletProxy ?? await ha.initializeWalletProxy(15e3);
                if (!i) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Wallet proxy not initialized.");
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isWalletDelegated"])({
                    address: e,
                    chainType: t,
                    user: le
                })) return r();
                let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDelegatedWalletsData"])({
                    address: e,
                    user: le
                }), s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRootWalletDataForDelegation"])({
                    address: e,
                    user: le
                });
                await ha.recoverPrimaryWallet(), cr({
                    delegatedActions: {
                        consent: {
                            address: e,
                            onDelegate: async ()=>{
                                await i.createDelegatedAction({
                                    accessToken: n,
                                    rootWallet: s,
                                    delegatedWallets: [
                                        o
                                    ]
                                }), await ha.refreshUser();
                            },
                            onSuccess: async ()=>{
                                r();
                            },
                            onError: async (e)=>{
                                a(e);
                            }
                        }
                    }
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_DELEGATED_ACTIONS_CONSENT_SCREEN);
            }),
        revokeDelegatedWallets: async ()=>new Promise(async (e, t)=>{
                if (!Y || !le) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User must be authenticated and have an embedded wallet to revoke a delegated wallet.");
                if (0 === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$delegated$2d$actions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDelegatedWalletsForUser"])(le).length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("User has no delegated wallets to revoke.");
                cr({
                    delegatedActions: {
                        revoke: {
                            onRevoke: async ()=>{
                                await k.revokeDelegatedWallet(), await ha.refreshUser();
                            },
                            onSuccess: async ()=>{
                                e();
                            },
                            onError: async (e)=>{
                                t(e);
                            }
                        }
                    }
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_DELEGATED_ACTIONS_REVOKE_SCREEN);
            }),
        initLoginWithFarcaster: async (e, t)=>{
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FarcasterFlow"](e, t);
            k.startAuthFlow(r);
            try {
                Ir.current = "farcaster", await r.initializeFarcasterConnect();
            } catch (e) {
                throw "login" === Wr.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === Wr.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: "farcaster"
                }), e;
            }
        },
        loginWithFarcaster: async ()=>{
            let e, t;
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$farcaster$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FarcasterFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Farcaster flow first.");
            if (null !== await k.getAccessToken()) try {
                ({ user: e } = await k.link()), Ir.current = "farcaster";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "farcaster"
                }), e;
            }
            else try {
                ({ user: e, isNewUser: t } = await k.authenticate()), Ir.current = "farcaster";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            de(e || null), xt(t || !1), X(!0);
        },
        async loginWithGuestAccountFlow () {
            let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$guest$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GuestFlow"](this.appId);
            k.startAuthFlow(e);
            try {
                Wr.current = "login", Ir.current = "guest";
                let { user: e, isNewUser: t } = await k.authenticate();
                if (t = t || !1, !e) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to authenticate guest account");
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["shouldProceedtoEmbeddedWalletCreationFlow"])(e, nr.embeddedWallets.createOnLogin)) try {
                    await Zr(e, 15e3), e = await ha.refreshUser();
                } catch (t) {
                    de(e), console.warn("Unable to create embedded wallet for guest account");
                }
                else de(e);
                return xt(t), X(!0), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onComplete", e, t, !1, "guest", null), e;
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async crossAppAuthFlow ({ appId: e, popup: t, action: r }) {
            let a = `privy:${e}`;
            Ir.current = a;
            let { url: n, stateCode: i, codeVerifier: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getCrossAppAuthorizationUrl"])({
                api: k.api,
                appId: e
            });
            if (!n) throw k.createAnalyticsEvent({
                eventName: "cross_app_auth_error",
                payload: {
                    error: "Unable to open cross-app auth popup",
                    appId: e
                }
            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("No authorization URL returned for cross-app auth.");
            try {
                let s = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$popupCrossAppAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["popupCrossAppAuthFlow"])({
                    url: n,
                    popup: t,
                    provider: a
                }), l = s.stateCode, c = s.authorizationCode;
                if (l !== i) throw k.createAnalyticsEvent({
                    eventName: "possible_phishing_attempt",
                    payload: {
                        provider: a,
                        storedStateCode: i ?? "",
                        returnedStateCode: l ?? ""
                    }
                }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
                let d = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$authFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["authenticateCrossAppAccount"])({
                    appId: e,
                    codeVerifier: o,
                    stateCode: l,
                    authorizationCode: c,
                    action: r,
                    client: k
                });
                d && k.storeProviderAccessToken(e, d);
                let u = await ha.refreshUser();
                if (!u) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to update user");
                return k.createAnalyticsEvent({
                    eventName: "cross_app_auth_completed",
                    payload: {
                        providerAppId: e
                    }
                }), u;
            } catch (e) {
                throw k.createAnalyticsEvent({
                    eventName: "cross_app_auth_error",
                    payload: {
                        error: e.toString(),
                        provider: a
                    }
                }), e;
            }
        },
        async initLoginWithOAuth (e, t, r) {
            if (Ir.current = e, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLocalStorageAccessible"])()) return void Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);
            if ("google" === e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(window.navigator.userAgent)) return void Ur(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);
            "twitter" === e && window.opener && window.opener.postMessage({
                type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$cross$2d$app$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["USE_BROADCAST_CHANNEL_EVENT_TYPE"]
            }, "*"), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HEADLESS_OAUTH_KEY"]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].del(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAUTH_DISABLE_SIGNUP_KEY"]);
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAuthFlow"]({
                provider: e,
                disableSignup: !!r,
                withPrivyUi: !0
            });
            t && a.addCaptchaToken(t), k.startAuthFlow(a);
            let n = await k.authFlow.getAuthorizationUrl();
            n && n.url && ("twitter" === e && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$device$2d$detect$2f$dist$2f$lib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAndroid"] && (n.url = n.url.replace("x.com", "twitter.com")), window.location.assign(n.url));
        },
        async initLoginWithTelegram (e, t) {
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            Ir.current = "telegram";
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramAuthFlow"](e, t);
            k.startAuthFlow(r), r.meta.telegramWebAppData = void 0, r.meta.telegramAuthResult = await new Promise((e, t)=>nr.loginConfig.telegramAuthConfiguration ? window.Telegram ? void window.Telegram.Login.auth({
                    bot_id: nr.loginConfig.telegramAuthConfiguration.botId,
                    request_access: !0
                }, (r)=>r ? e(r) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram auth failed or was canceled by the client"))) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram was not initialized")) : t(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Telegram Auth configuration is not loaded")));
        },
        async loginWithTelegram (e) {
            let t, r;
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramAuthFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Telegram flow before calling loginWithTelegram");
            if (k.authFlow.meta.captchaToken ||= e, "login" === Wr.current) try {
                let e = await k.authenticate();
                t = e.user, r = e.isNewUser, Ir.current = "telegram";
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            else {
                if ("link" !== Wr.current) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unknown auth intent");
                try {
                    t = (await k.link()).user, Ir.current = "telegram";
                } catch (e) {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                        linkMethod: "telegram"
                    }), e;
                }
            }
            de(t), xt(r || !1), X(!0);
        },
        async recoveryOAuthFlow (e, t, r) {
            let a, n;
            function i(t) {
                if (!t) throw k.createAnalyticsEvent({
                    eventName: "recovery_oauth_error",
                    payload: {
                        error: "Unable to open recovery OAuth popup",
                        provider: e
                    }
                }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
            }
            switch(e){
                case "google-drive":
                    {
                        let t, o, { url: s, codeVerifier: l, stateCode: c } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRecoveryAuthorizationUrl"])({
                            api: Dr.api,
                            provider: e
                        });
                        i(s);
                        try {
                            let a = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["popupOAuthFlow"])({
                                url: s,
                                popup: r,
                                provider: e
                            });
                            if (t = a.stateCode, o = a.authorizationCode, t !== c) throw k.createAnalyticsEvent({
                                eventName: "possible_phishing_attempt",
                                payload: {
                                    provider: e,
                                    storedStateCode: c ?? "",
                                    returnedStateCode: t ?? ""
                                }
                            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
                        } catch (t) {
                            throw k.createAnalyticsEvent({
                                eventName: "recovery_oauth_error",
                                payload: {
                                    error: t.toString(),
                                    provider: e
                                }
                            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
                        }
                        [a, n] = await Promise.all([
                            Hr(),
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["authenticateRecovery"])({
                                api: Dr.api,
                                provider: e,
                                codeVerifier: l,
                                stateCode: t,
                                authorizationCode: o
                            })
                        ]);
                        break;
                    }
                case "icloud":
                    {
                        let { url: t } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRecoveryAuthorizationUrl"])({
                            api: Dr.api,
                            provider: e
                        });
                        i(t);
                        let { ckWebAuthToken: o } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$popupOAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["popupOAuthFlow"])({
                            url: t,
                            popup: r,
                            provider: e
                        });
                        n = o, a = await Hr();
                    }
            }
            if (!rr) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Cannot connect to wallet proxy");
            if (!a) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unable to authorize user");
            switch(t){
                case "recover":
                    {
                        let t = lr.recoverWallet?.entropyId, r = lr.recoverWallet?.entropyIdVerifier;
                        if (!t || !r) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Recovery OAuth failed");
                        k.createAnalyticsEvent({
                            eventName: "embedded_wallet_recovery_started",
                            payload: {
                                walletAddress: t,
                                recoveryMethod: e
                            }
                        }), await rr.recover({
                            accessToken: a,
                            entropyId: t,
                            entropyIdVerifier: r,
                            recoveryAccessToken: n
                        }), k.createAnalyticsEvent({
                            eventName: "embedded_wallet_recovery_completed",
                            payload: {
                                walletAddress: t,
                                recoveryMethod: e
                            }
                        });
                        break;
                    }
                case "create-wallet":
                    {
                        k.createAnalyticsEvent({
                            eventName: "embedded_wallet_creation_started"
                        }), await rr.create({
                            accessToken: a,
                            recoveryAccessToken: n,
                            recoveryMethod: e
                        });
                        let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(await ha.refreshUser());
                        if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to create wallet");
                        k.createAnalyticsEvent({
                            eventName: "embedded_wallet_creation_completed",
                            payload: {
                                walletAddress: t.address
                            }
                        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onSuccess", t);
                        break;
                    }
                case "set-recovery":
                    {
                        let t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(le);
                        if (!t) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "setWalletRecovery", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_NOT_FOUND), Error("Embedded wallet not found");
                        k.createAnalyticsEvent({
                            eventName: "embedded_wallet_set_recovery_started",
                            payload: {
                                walletAddress: t.address,
                                existingRecoveryMethod: t.recoveryMethod,
                                targetRecoveryMethod: e
                            }
                        });
                        let { entropyId: r, entropyIdVerifier: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(t);
                        await rr.setRecovery({
                            accessToken: a,
                            entropyId: r,
                            entropyIdVerifier: i,
                            recoveryMethod: e,
                            recoveryAccessToken: n
                        });
                        let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(await ha.refreshUser());
                        if (!o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to set recovery on wallet");
                        k.createAnalyticsEvent({
                            eventName: "embedded_wallet_set_recovery_completed",
                            payload: {
                                walletAddress: t.address,
                                existingRecoveryMethod: t.recoveryMethod,
                                targetRecoveryMethod: e
                            }
                        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "setWalletRecovery", "onSuccess", e, o);
                        break;
                    }
                default:
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unsupported recovery action");
            }
        },
        async loginWithOAuth (e) {
            let t, r, a;
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAuthFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize OAuth flow before calling loginWithOAuth");
            let n = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STATE_CODE_KEY"]), i = k.authFlow.meta.stateCode;
            if (n !== i) throw k.createAnalyticsEvent({
                eventName: "possible_phishing_attempt",
                payload: {
                    provider: e,
                    storedStateCode: n ?? "",
                    returnedStateCode: i ?? ""
                }
            }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
            if (null !== await k.getAccessToken()) try {
                let r = await k.link();
                t = r.user, a = r.oAuthTokens, Ir.current = e;
            } catch (t) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            else try {
                let n = await k.authenticate();
                t = n.user, r = n.isNewUser, a = n.oAuthTokens, Ir.current = e;
            } catch (t) {
                throw "login" === Wr.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === Wr.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e
                }), t;
            }
            return de(t), xt(r || !1), X(!0), a && t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "oAuthAuthorization", "onOAuthTokenGrant", a, {
                user: t
            }), a;
        },
        passkeyAuthState: zt,
        setPasskeyAuthState: qt,
        async initSignupWithPasskey ({ captchaToken: e, withPrivyUi: t }) {
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e,
                setPasskeyAuthState: qt
            });
            k.startAuthFlow(r), Wr.current = "login";
            try {
                Ir.current = "passkey", qt({
                    status: "generating-challenge"
                }), await r.initRegisterFlow(t), qt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw qt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async signupWithPasskey () {
            let e, t;
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if ("passkey" !== Ir.current) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
                throw qt({
                    status: "error",
                    error: e
                }), e;
            }
            let r = await Hr();
            try {
                Ir.current = "passkey", qt({
                    status: "awaiting-passkey"
                }), { user: e, isNewUser: t } = await k.authenticate();
            } catch (e) {
                throw qt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            de(e), xt(t || !1), X(!0), qt({
                status: "done"
            });
            let a = e?.linkedAccounts.find(({ type: e })=>"passkey" === e) || null;
            return {
                user: e,
                isNewUser: t || !1,
                wasAlreadyAuthenticated: !!r,
                loginAccount: a
            };
        },
        async initLoginWithPasskey ({ captchaToken: e, withPrivyUi: t }) {
            let r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e,
                setPasskeyAuthState: qt
            });
            k.startAuthFlow(r), Wr.current = "login";
            try {
                Ir.current = "passkey", qt({
                    status: "generating-challenge"
                }), await r.initAuthenticationFlow(t), qt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw qt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
        },
        async loginWithPasskey () {
            let e, t;
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if ("passkey" !== Ir.current) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
                throw qt({
                    status: "error",
                    error: e
                }), e;
            }
            let r = await Hr();
            try {
                Ir.current = "passkey", qt({
                    status: "awaiting-passkey"
                }), { user: e, isNewUser: t } = await k.authenticate();
            } catch (e) {
                throw qt({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            de(e), xt(t || !1), X(!0), qt({
                status: "done"
            });
            let a = e?.linkedAccounts.find(({ type: e })=>"passkey" === e) || null;
            return {
                user: e,
                isNewUser: t || !1,
                wasAlreadyAuthenticated: !!r,
                loginAccount: a
            };
        },
        async initLinkWithPasskey (e) {
            let t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"]({
                captchaToken: e
            });
            k.startAuthFlow(t), Wr.current = "link", Ir.current = "passkey", qt({
                status: "generating-challenge"
            });
            try {
                await t.initLinkFlow(), qt({
                    status: "awaiting-passkey"
                });
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: "passkey"
                }), qt({
                    status: "error",
                    error: e
                }), e;
            }
        },
        async linkWithPasskey () {
            let e;
            if (!G) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
            if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$passkey$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PasskeyFlow"])) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize Passkey flow first.");
            if ("passkey" !== Ir.current) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must init login with Passkey flow first.");
            try {
                Ir.current = "passkey", { user: e } = await k.link();
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "passkey"
                }), e;
            }
            return de(e || le || null), qt({
                status: "done"
            }), e;
        },
        async initLoginWithHeadlessOAuth (e, t, r) {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLocalStorageAccessible"])()) throw Error("It looks like you're using an in-app browser.  To log in, please try again using an external browser.");
            if ("google" === e && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$isEmbeddedWebview$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(window.navigator.userAgent)) throw Error("It looks like you're using an in-app browser.  To log in, please try again using an external browser.");
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAuthFlow"]({
                provider: e,
                withPrivyUi: !1,
                disableSignup: r ?? !1
            });
            t && a.addCaptchaToken(t), tr({
                status: "loading"
            });
            let n = await k.startAuthFlow(a).getAuthorizationUrl();
            n?.url && window.location.assign(n.url);
        },
        async loginWithHeadlessOAuth (e) {
            let t, r, a;
            Ht(!0), tr({
                status: "loading"
            }), k.startAuthFlow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$oauth$2f$OAuthFlow$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OAuthFlow"](e));
            let n = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STATE_CODE_KEY"]), i = e.stateCode;
            if (n !== i) throw k.createAnalyticsEvent({
                eventName: "possible_phishing_attempt",
                payload: {
                    provider: e.provider,
                    storedStateCode: n ?? "",
                    returnedStateCode: i ?? ""
                }
            }), Ht(!1), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Unexpected auth flow. This may be a phishing attempt.", void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].OAUTH_UNEXPECTED);
            if (null !== await k.getAccessToken()) try {
                ({ user: t, oAuthTokens: a } = await k.link()), Ir.current = e.provider;
                let r = sa(t);
                t && r && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onSuccess", t, Ir.current, r);
            } catch (t) {
                throw Ht(!1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", t.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: e.provider
                }), t;
            }
            else try {
                ({ user: t, isNewUser: r, oAuthTokens: a } = await k.authenticate()), Ir.current = e.provider;
                let n = sa(t);
                t && n && void 0 !== r && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onComplete", t, r, !1, Ir.current, n);
            } catch (e) {
                throw Ht(!1), tr({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            return de(t), xt(r || !1), X(!0), Ht(!1), tr({
                status: "done"
            }), a && t && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "oAuthAuthorization", "onOAuthTokenGrant", a, {
                user: t
            }), t ?? void 0;
        },
        initLoginWithEmail: async ({ email: e, captchaToken: t, disableSignup: r, withPrivyUi: a })=>{
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailFlow"]({
                email: e,
                captchaToken: t,
                disableSignup: r
            });
            k.startAuthFlow(n);
            try {
                Ir.current = "email", Yt({
                    status: "sending-code"
                }), await n.sendCodeEmail({
                    withPrivyUi: a
                }), Yt({
                    status: "awaiting-code-input"
                });
            } catch (e) {
                throw Yt({
                    status: "error",
                    error: e
                }), "login" === Wr.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === Wr.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "email"
                }), e;
            }
        },
        initUpdateEmail: async (e, t, r)=>{
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UpdateEmailFlow"](e, t, r);
            k.startAuthFlow(a);
            try {
                await a.sendCodeEmail({
                    withPrivyUi: !0
                });
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: Ir.current
                });
            }
        },
        initUpdatePhone: async (e, t, r)=>{
            let a = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UpdateSmsFlow"](e, t, r);
            k.startAuthFlow(a);
            try {
                await a.sendSmsCode({
                    withPrivyUi: !0
                });
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR, {
                    linkMethod: Ir.current
                });
            }
        },
        initLoginWithSms: async ({ phoneNumber: e, captchaToken: t, disableSignup: r, withPrivyUi: a })=>{
            Qt({
                status: "sending-code"
            });
            let n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmsFlow"]({
                phoneNumber: e,
                captchaToken: t,
                disableSignup: r
            });
            k.startAuthFlow(n);
            try {
                Ir.current = "sms", await n.sendSmsCode({
                    withPrivyUi: a
                }), Qt({
                    status: "awaiting-code-input"
                });
            } catch (e) {
                throw Qt({
                    status: "error",
                    error: e
                }), "login" === Wr.current ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR) : "link" === Wr.current && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "sms"
                }), e;
            }
        },
        resendEmailCode: async ()=>{
            await k.authFlow?.sendCodeEmail({
                withPrivyUi: !0
            });
        },
        resendSmsCode: async ()=>{
            await k.authFlow?.sendSmsCode({
                withPrivyUi: !0
            });
        },
        loginWithCode: async (e)=>{
            let t, r;
            function a(e) {
                k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailFlow"] ? Yt(e) : k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmsFlow"] && Qt(e);
            }
            if (a({
                status: "submitting-code"
            }), !G) {
                let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyNotReadyError"];
                throw a({
                    status: "error",
                    error: e
                }), e;
            }
            if (k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailFlow"]) k.authFlow.meta.emailCode = e.trim();
            else {
                if (!(k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmsFlow"])) {
                    let e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyClientError"]("Must initialize a passwordless code flow first");
                    throw a({
                        status: "error",
                        error: e
                    }), e;
                }
                k.authFlow.meta.smsCode = e.trim();
            }
            let n = await Hr();
            if ("link" === Wr.current) try {
                ({ user: t } = await k.link());
            } catch (e) {
                throw a({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: Ir.current
                }), e;
            }
            else if ("update" === Wr.current) try {
                ({ user: t } = await k.link());
            } catch (e) {
                throw a({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "update", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_UPDATE_ACCOUNT, {
                    linkMethod: Ir.current
                }), e;
            }
            else try {
                ({ user: t, isNewUser: r } = await k.authenticate());
            } catch (e) {
                throw a({
                    status: "error",
                    error: e
                }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "login", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_AUTH_ERROR), e;
            }
            let i = t || le;
            de(i || null), xt(r || !1), X(!0), a({
                status: "done"
            });
            let o = null;
            return k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$email$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailFlow"] ? o = i?.linkedAccounts.find(({ type: e })=>"email" === e) || null : k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$sms$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmsFlow"] && (o = i?.linkedAccounts.find(({ type: e })=>"phone" === e) || null), {
                user: i,
                isNewUser: r || !1,
                wasAlreadyAuthenticated: !!n,
                linkedAccount: o
            };
        },
        generateSiweMessage: async ({ address: e, chainId: t, captchaToken: r })=>{
            Wr.current = "link", Ir.current = "siwe", Zt({
                status: "generating-message"
            });
            let a = await k.generateSiweNonce({
                address: e,
                captchaToken: r
            });
            return Zt({
                status: "awaiting-signature"
            }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareSiweMessageWithNonce"])({
                address: e,
                chainId: t.replace("eip155:", ""),
                nonce: a
            });
        },
        generateSiweMessageForSmartWallet: async ({ address: e, chainId: t })=>{
            let r = await k.generateSiweNonce({
                address: e
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$siwe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareSiweMessageWithNonce"])({
                address: e,
                chainId: t.replace("eip155:", ""),
                nonce: r
            });
        },
        linkSmartWallet: async ({ message: e, signature: t, smartWalletType: r })=>{
            let a;
            a = await k.linkSmartWallet({
                message: e,
                signature: t,
                smartWalletType: r
            }), de((a = await ha.refreshUser() ?? a) || le || null);
        },
        linkWithSiwe: async ({ message: e, signature: t, chainId: r, walletClientType: a, connectorType: n })=>{
            let i;
            $r("siwe");
            let o = null;
            try {
                Zt({
                    status: "submitting-signature"
                }), i = await k.linkWithSiwe({
                    message: e,
                    signature: t,
                    chainId: r,
                    walletClientType: a,
                    connectorType: n
                }), i = await ha.refreshUser() ?? i, Zt({
                    status: "done"
                }), (o = sa(i) || null) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onSuccess", i, "siwe", o);
            } catch (e) {
                throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "linkAccount", "onError", e.privyErrorCode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].FAILED_TO_LINK_ACCOUNT, {
                    linkMethod: "siwe"
                }), Wr.current = null, Ir.current = null, Zt({
                    status: "error",
                    error: e
                }), e;
            }
            let s = i || le;
            return de(s || null), Wr.current = null, Ir.current = null, {
                user: s,
                linkedAccount: o
            };
        },
        refreshUser: async ()=>{
            let e = await k.getAuthenticatedUser();
            return X(!!e), de(e), e;
        },
        walletProxy: rr,
        createAnalyticsEvent: ({ eventName: e, payload: t, timestamp: r })=>k.createAnalyticsEvent({
                eventName: e,
                payload: t,
                timestamp: r
            }),
        acceptTerms: async ()=>{
            let e = await k.acceptTerms();
            return de(e), e;
        },
        getUsdTokenPrice: (e)=>k.getUsdTokenPrice(e),
        getUsdPriceForSol: ()=>k.getUsdPriceForSol(),
        getSplTokenMetadata: (e)=>k.getSplTokenMetadata(e),
        recoverPrimaryWallet: async (e)=>new Promise(async (t, r)=>{
                let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyPrimaryWallet"])(e?.user ?? le) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getImportedPrivyEthereumWallet"])(e?.user ?? le) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getImportedPrivySolanaWallet"])(e?.user ?? le), n = await Hr();
                if (!n || !rr || !a) return void r(Error("Must have valid access token and Privy wallet to recover wallet"));
                sr(!0);
                let { entropyId: i, entropyIdVerifier: o } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(a);
                try {
                    await rr.connect({
                        accessToken: n,
                        entropyId: i,
                        entropyIdVerifier: o
                    }), t(!0);
                } catch (e) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorIndicatesRecoveryIsNeeded"])(e) && "privy" === a.recoveryMethod ? (k.createAnalyticsEvent({
                        eventName: "embedded_wallet_pinless_recovery_started",
                        payload: {
                            walletAddress: a.address
                        }
                    }), (await rr.recover({
                        entropyId: i,
                        entropyIdVerifier: o,
                        accessToken: n
                    })).entropyId || r(Error("Unable to recover wallet")), k.createAnalyticsEvent({
                        eventName: "embedded_wallet_recovery_completed",
                        payload: {
                            walletAddress: a.address
                        }
                    }), t(!0)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorIndicatesRecoveryIsNeeded"])(e) && "privy" !== a.recoveryMethod ? (cr({
                        recoverWallet: {
                            entropyId: i,
                            entropyIdVerifier: o,
                            onFailure: r,
                            onSuccess: ()=>t(!0)
                        },
                        recoveryOAuthStatus: {
                            provider: a.recoveryMethod,
                            action: "recover"
                        }
                    }), br((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$embeddedWalletRecovery$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["embeddedWalletRecoveryScreen"])(a.recoveryMethod))) : r(e);
                }
            }),
        createEmbeddedSolanaWallet: async (e)=>{
            if (e && "target" in e && (e = void 0), !Y || !le) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].MUST_BE_AUTHENTICATED), Error("User must be authenticated before creating a Privy wallet");
            return (async (e, t, r)=>{
                let a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivyEthereumWallet"])(e), n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(e), i = r && "createAdditional" in r && r.createAdditional, o = r && "walletIndex" in r ? r.walletIndex : void 0, s = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLatestPrivySolanaWallet"])(e)?.walletIndex ?? -1) + 1;
                if (n && !i && "number" != typeof o) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_ALREADY_EXISTS), Error("User already has an embedded wallet.");
                if ("number" == typeof o && o < 0) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${o}) is invalid.`);
                let [l, c] = await Promise.all([
                    ha.initializeWalletProxy(t),
                    Hr()
                ]);
                if (!l || !c) throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emitPrivyEvent"])(Tr, "createWallet", "onError", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyErrorCode"].UNKNOWN_EMBEDDED_WALLET_ERROR), Error("Failed to connect to wallet proxy");
                return await ra({
                    user: e,
                    wp: l,
                    accessToken: c,
                    walletIndex: o ?? s,
                    ethereumWallet: a
                });
            })(le, 15e3, e);
        },
        exportSolanaWallet: (e)=>new Promise(async (t, r)=>{
                if (!Y || !le) return void r(Error("User must be authenticated before exporting their Privy wallet"));
                let a = e?.address ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPrivySolanaWallet"])(le)?.address;
                if (!a) return void r(Error("User does not have an HD Solana wallet."));
                let { signingWallet: n, rootWallet: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSolanaSigningAndRootWallet"])(le, a);
                if (!n || !i) return void r(Error("Must have a Privy wallet before exporting"));
                if (sr(!0), !await Hr() || !rr) return void r(Error("Must have valid access token to enroll in MFA"));
                if (!rr) return void r(Error("Must have a Privy wallet before exporting"));
                let { entropyId: o, entropyIdVerifier: s } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$client$2f$user$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEntropyDetailsFromAccount"])(i);
                cr({
                    connectWallet: {
                        entropyId: o,
                        entropyIdVerifier: s,
                        onCompleteNavigateTo: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_KEY_EXPORT_SCREEN,
                        onFailure: r,
                        shouldForceMFA: !0
                    },
                    keyExport: {
                        appId: W.appId,
                        appClientId: W.clientId,
                        origin: k.apiUrl,
                        walletToExport: n,
                        primaryWallet: i,
                        onSuccess: t,
                        onFailure: r
                    }
                }), br(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].EMBEDDED_WALLET_CONNECTING_SCREEN);
            }),
        setReadyToTrue: (e)=>{
            q(!0), dr?.(e);
        },
        updateWallets: ()=>Jr(),
        fundWallet: async (e, t)=>{
            let r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalScreen"].FUNDING_METHOD_SELECTION_SCREEN;
            cr({
                funding: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$lib$2f$funding$2f$prepareFundingModalData$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareFundingModalData"])({
                    address: e,
                    appConfig: nr,
                    fundWalletConfig: t,
                    methodScreen: r
                })
            }), br(r);
        },
        openModal: br,
        requestFarcasterSignerStatus: async (e)=>{
            let t = await Hr(), r = le?.linkedAccounts.find((e)=>"wallet" === e.type && "privy" === e.walletClientType);
            if (!t) throw Error("Must have valid access token to connect with Farcaster");
            if (!rr || !r) throw Error("Must have an embedded wallet to use Farcaster signers");
            if (!le?.farcaster?.fid) throw Error("Must have Farcaster account to use Farcaster signers");
            let a = await k.requestFarcasterSignerStatus(e);
            return "approved" === a.status && de(await k.getAuthenticatedUser() || le || null), a;
        },
        connectCoinbaseSmartWallet: async ()=>{
            nr.externalWallets.coinbaseWallet.connectionOptions = "smartWalletOnly";
            let e = k.connectors?.findWalletConnector("coinbase_wallet", "coinbase_smart_wallet") || k.connectors?.findWalletConnector("coinbase_wallet", "coinbase_wallet");
            if (e) return e.updateConnectionPreference("smartWalletOnly"), Kr(e);
            await Vr("coinbase_wallet", "coinbase_smart_wallet");
        },
        initiateAccountTransfer: async ({ nonce: e, account: t, accountType: r, externalWalletMetadata: a, telegramAuthResult: n, telegramWebAppData: i, farcasterEmbeddedAddress: o, oAuthUserInfo: s })=>{
            let l = await k.sendAccountTransferRequest({
                nonce: e,
                account: t,
                accountType: r,
                externalWalletMetadata: a,
                telegramAuthResult: n,
                telegramWebAppData: i,
                farcasterEmbeddedAddress: o,
                oAuthUserInfo: s
            });
            return de(l), l;
        }
    };
    xr = ha.recoverPrimaryWallet, jr = ha.recoverPrimaryWallet, Br = ha.solanaSignMessage;
    let pa = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])(()=>({
            wallets: ue,
            ready: wr && vr
        }), [
        ue,
        wr,
        vr
    ]), wa = k.authFlow instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$auth$2d$flows$2f$telegram$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramAuthFlow"], ma = !nr.headless && nr.captchaEnabled && !Y && (G || wa); /*#__PURE__*/ 
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$privy$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyContext"].Provider, {
        value: ua,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$events$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrivyEventsContext"].Provider, {
            value: Tr,
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$useWallets$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UseWalletsContext"].Provider, {
                value: pa,
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$captcha$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CaptchaProvider"], {
                    ...nr,
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$internal$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InternalPrivyContext"].Provider, {
                        value: ha,
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$recent$2d$login$2f$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RecentlyUsedAccountProvider"], {
                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$hooks$2f$modal$2d$context$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalProvider"], {
                                    data: lr,
                                    setModalData: cr,
                                    setInitialScreen: Bt,
                                    initialScreen: jt,
                                    authenticated: Y,
                                    open: H,
                                    children: [
                                        W.children,
                                        ma && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$Captcha$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Captcha"], {
                                            delayedExecution: !1
                                        }),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$styles$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GlobalStyle"], {
                                            theme: {
                                                ...nr.appearance.palette || {}
                                            }
                                        }),
                                        !nr.render.standalone && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$LoginModal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LoginModal"], {
                                            open: H
                                        })
                                    ]
                                })
                            }),
                            or && ir ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$embedded$2d$wallets$2f$EmbeddedWalletIframe$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmbeddedWalletIframe"], {
                                appId: W.appId,
                                appClientId: W.clientId,
                                clientAnalyticsId: k.clientAnalyticsId,
                                origin: k.apiUrl,
                                mfaMethods: le?.mfaMethods,
                                mfaPromise: _r,
                                mfaSubmitPromise: Ar,
                                onLoad: ar,
                                onLoadFailed: ()=>null
                            }) : null,
                            nr.loginConfig.telegramAuthConfiguration && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$screens$2f$LandingScreen$2f$styles$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Hide"], {
                                $if: !0,
                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$components$2f$TelegramLoginButton$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TelegramLoginButton"], {
                                    scriptHost: W.apiUrl || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$privy$2d$io$2f$react$2d$auth$2f$dist$2f$esm$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_PRIVY_API_URL"],
                                    botUsername: nr.loginConfig.telegramAuthConfiguration.botName
                                })
                            })
                        ]
                    })
                })
            })
        })
    });
};
;
}}),
}]);

//# sourceMappingURL=node_modules_%40privy-io_react-auth_dist_esm_privy-provider-CoCxAge0_mjs_bb4684._.js.map