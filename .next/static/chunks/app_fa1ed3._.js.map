{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_hooks/use-enter-submit.ts"],"sourcesContent":["\"use client\";\n\ninterface Props {\n    onSubmit: () => void,\n}\n\nexport const useEnterSubmit = ({ onSubmit }: Props) => {\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter' && !event.shiftKey && !event.nativeEvent.isComposing) {\n            onSubmit()\n            event.preventDefault()\n        }\n    }\n\n    return { onKeyDown }\n}"],"names":[],"mappings":";;;AAAA;AAMO,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAS;IAE9C,MAAM,YAAY,CAAC;QACf,IAAI,MAAM,GAAG,KAAK,WAAW,CAAC,MAAM,QAAQ,IAAI,CAAC,MAAM,WAAW,CAAC,WAAW,EAAE;YAC5E;YACA,MAAM,cAAc;QACxB;IACJ;IAEA,OAAO;QAAE;IAAU;AACvB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_hooks/use-scroll-anchor.ts"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport const useScrollAnchor = (scrollToBottomOnMount = true) => {\n  const messagesRef = useRef<HTMLDivElement>(null);\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  const [isAtBottom, setIsAtBottom] = useState(false);\n\n  const scrollToBottom = useCallback(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      setIsAtBottom(true);\n    }\n  }, []);\n\n  const checkAndScrollToBottom = useCallback(() => {\n    if (isAtBottom) {\n      scrollToBottom();\n    }\n  }, [isAtBottom, scrollToBottom]);\n\n  useEffect(() => {\n    const { current } = scrollRef;\n    if (current) {\n      const handleScroll = () => {\n        const { scrollTop, scrollHeight, clientHeight } = current;\n        setIsAtBottom(scrollHeight - scrollTop <= clientHeight + 1);\n      };\n\n      current.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n      // Add initial scroll to bottom if scrollToBottomOnMount is true\n      if (scrollToBottomOnMount) {\n        scrollToBottom();\n      }\n\n      return () => {\n        current.removeEventListener(\"scroll\", handleScroll);\n      };\n    }\n  }, [scrollToBottomOnMount, scrollToBottom]);\n\n  useEffect(() => {\n    const mutationObserver = new MutationObserver(checkAndScrollToBottom);\n    const resizeObserver = new ResizeObserver(checkAndScrollToBottom);\n\n    if (messagesRef.current) {\n      mutationObserver.observe(messagesRef.current, {\n        childList: true,\n        subtree: true,\n        characterData: true,\n      });\n      resizeObserver.observe(messagesRef.current);\n    }\n\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, [checkAndScrollToBottom]);\n\n  return {\n    messagesRef,\n    scrollRef,\n    scrollToBottom,\n    isAtBottom,\n  };\n};"],"names":[],"mappings":";;;AAEA;;AAFA;;AAIO,MAAM,kBAAkB,CAAC,wBAAwB,IAAI;;IAC1D,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAEzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YACjC,IAAI,UAAU,OAAO,EAAE;gBACrB,UAAU,OAAO,CAAC,SAAS,GAAG,UAAU,OAAO,CAAC,YAAY;gBAC5D,cAAc;YAChB;QACF;sDAAG,EAAE;IAEL,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+DAAE;YACzC,IAAI,YAAY;gBACd;YACF;QACF;8DAAG;QAAC;QAAY;KAAe;IAE/B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,EAAE,OAAO,EAAE,GAAG;YACpB,IAAI,SAAS;gBACX,MAAM;8DAAe;wBACnB,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG;wBAClD,cAAc,eAAe,aAAa,eAAe;oBAC3D;;gBAEA,QAAQ,gBAAgB,CAAC,UAAU,cAAc;oBAAE,SAAS;gBAAK;gBAEjE,gEAAgE;gBAChE,IAAI,uBAAuB;oBACzB;gBACF;gBAEA;iDAAO;wBACL,QAAQ,mBAAmB,CAAC,UAAU;oBACxC;;YACF;QACF;oCAAG;QAAC;QAAuB;KAAe;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,mBAAmB,IAAI,iBAAiB;YAC9C,MAAM,iBAAiB,IAAI,eAAe;YAE1C,IAAI,YAAY,OAAO,EAAE;gBACvB,iBAAiB,OAAO,CAAC,YAAY,OAAO,EAAE;oBAC5C,WAAW;oBACX,SAAS;oBACT,eAAe;gBACjB;gBACA,eAAe,OAAO,CAAC,YAAY,OAAO;YAC5C;YAEA;6CAAO;oBACL,iBAAiB,UAAU;oBAC3B,eAAe,UAAU;gBAC3B;;QACF;oCAAG;QAAC;KAAuB;IAE3B,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;GAjEa"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/chat/model-selector.tsx"],"sourcesContent":["import { Models } from \"@/types/models\";\n\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui\";\n\nimport Image from \"next/image\";\n\ninterface ModelSelectorProps {\n    model: Models;\n    onModelChange: (model: Models) => void;\n    disabled?: boolean;\n}\n\nconst modelLogos = {\n    [Models.OpenAI]: \"/logos/openai.png\",\n    [Models.Anthropic]: \"/logos/anthropic.png\",\n    [Models.XAI]: \"/logos/xai.png\",\n    [Models.Gemini]: \"/logos/google.png\",\n    [Models.Deepseek]: \"/logos/deepseek.png\",\n};\n\nconst ModelSelector: React.FC<ModelSelectorProps> = ({\n    model,\n    onModelChange,\n    disabled\n}) => {\n    return (\n        <Select\n            value={model}\n            onValueChange={(value) => onModelChange(value as Models)}\n            disabled={disabled}\n        >\n            <SelectTrigger className=\"w-fit h-8 text-xs border-0 bg-transparent hover:bg-neutral-200/50 dark:hover:bg-neutral-700/50 shadow-none gap-2\">\n                <SelectValue placeholder=\"Select a model\" />\n            </SelectTrigger>\n            <SelectContent>\n                {Object.values(Models).map((modelValue) => (\n                    <SelectItem \n                        key={modelValue} \n                        value={modelValue}\n                        className=\"flex items-center gap-2\"\n                    >\n                        <div className=\"flex items-center gap-2\">\n                            <Image\n                                src={modelLogos[modelValue]}\n                                alt={modelValue}\n                                width={16}\n                                height={16}\n                                className=\"rounded-sm\"\n                            />\n                            {modelValue.charAt(0).toUpperCase() + modelValue.slice(1)}\n                        </div>\n                    </SelectItem>\n                ))}\n            </SelectContent>\n        </Select>\n    );\n};\n\nexport default ModelSelector; "],"names":[],"mappings":";;;;AAAA;AAEA;AAQA;AARA;;;;;AAgBA,MAAM,aAAa;IACf,CAAC,kHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,EAAE;IACjB,CAAC,kHAAA,CAAA,SAAM,CAAC,SAAS,CAAC,EAAE;IACpB,CAAC,kHAAA,CAAA,SAAM,CAAC,GAAG,CAAC,EAAE;IACd,CAAC,kHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,EAAE;IACjB,CAAC,kHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,EAAE;AACvB;AAEA,MAAM,gBAA8C,CAAC,EACjD,KAAK,EACL,aAAa,EACb,QAAQ,EACX;IACG,qBACI,6LAAC,8HAAA,CAAA,SAAM;QACH,OAAO;QACP,eAAe,CAAC,QAAU,cAAc;QACxC,UAAU;;0BAEV,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACrB,cAAA,6LAAC,8HAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE7B,6LAAC,8HAAA,CAAA,gBAAa;0BACT,OAAO,MAAM,CAAC,kHAAA,CAAA,SAAM,EAAE,GAAG,CAAC,CAAC,2BACxB,6LAAC,8HAAA,CAAA,aAAU;wBAEP,OAAO;wBACP,WAAU;kCAEV,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC,gIAAA,CAAA,UAAK;oCACF,KAAK,UAAU,CAAC,WAAW;oCAC3B,KAAK;oCACL,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;gCAEb,WAAW,MAAM,CAAC,GAAG,WAAW,KAAK,WAAW,KAAK,CAAC;;;;;;;uBAZtD;;;;;;;;;;;;;;;;AAmB7B;KApCM;uCAsCS"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/follow-up-suggestions/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\nimport { Models } from '@/types/models';\nimport { Button, Skeleton, Icon } from '@/components/ui';\nimport { Message } from 'ai';\n\ninterface Suggestion {\n    title: string;\n    description: string;\n    prompt: string;\n    icon: \"Plus\";\n}\n\nconst generateFollowUpSuggestions = async (messages: Message[], model: Models) => {\n    try {\n        const response = await fetch('/api/follow-up-suggestions', {\n            method: 'POST',\n            body: JSON.stringify({\n                messages,\n                modelName: model,\n                timestamp: Date.now()\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Cache-Control': 'no-cache, no-store, must-revalidate',\n                'Pragma': 'no-cache',\n                'Expires': '0'\n            },\n        });\n        \n        return await response.json() as Suggestion[];\n    } catch (error) {\n        console.error(\"Error generating suggestions:\", error);\n        return [];\n    }\n}\n\nconst FollowUpSuggestions: React.FC = () => {\n    const { model, sendMessage, isResponseLoading, messages, chatId, isLoading } = useChat();\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n    const requestTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    useEffect(() => {\n        const generateSuggestions = async () => {\n            if (isResponseLoading || isLoading || !messages.length) return;\n            \n            if (requestTimeoutRef.current) {\n                clearTimeout(requestTimeoutRef.current);\n            }\n\n            setIsGenerating(true);\n            try {\n                const newSuggestions = await generateFollowUpSuggestions(messages, model);\n                if (newSuggestions?.length > 0) {\n                    setSuggestions(newSuggestions);\n                }\n            } catch (error) {\n                console.error('Error generating suggestions:', error);\n            } finally {\n                setIsGenerating(false);\n            }\n        };\n\n        generateSuggestions();\n\n        return () => {\n            if (requestTimeoutRef.current) {\n                clearTimeout(requestTimeoutRef.current);\n            }\n        };\n    }, [messages, chatId, model, isResponseLoading, isLoading]);\n\n    if (isLoading) return null;\n\n    return (\n        <div className=\"grid grid-cols-3 gap-2 mt-4\">\n            {\n                isGenerating ? (\n                    Array.from({ length: 3 }).map((_, index) => (\n                        <Skeleton\n                            key={index}\n                            className=\"w-full h-[22px]\"\n                        />\n                    ))\n                ) : (\n                    suggestions.map((suggestion) => (\n                        <Button\n                            key={`${chatId}-${suggestion.title}`}\n                            variant=\"outline\"\n                            className=\"w-full text-xs h-fit py-0.5\"\n                            onClick={() => {\n                                sendMessage(suggestion.prompt);\n                                setSuggestions([]);\n                            }}\n                        >\n                            <Icon name=\"Plus\" className=\"w-3 h-3\" />\n                            {suggestion.title}\n                        </Button>\n                    ))\n                )\n            }\n        </div>\n    );\n};\n\nexport default FollowUpSuggestions;"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;AAUA,MAAM,8BAA8B,OAAO,UAAqB;IAC5D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,8BAA8B;YACvD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBACjB;gBACA,WAAW;gBACX,WAAW,KAAK,GAAG;YACvB;YACA,SAAS;gBACL,gBAAgB;gBAChB,iBAAiB;gBACjB,UAAU;gBACV,WAAW;YACf;QACJ;QAEA,OAAO,MAAM,SAAS,IAAI;IAC9B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,EAAE;IACb;AACJ;AAEA,MAAM,sBAAgC;;IAClC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IACrF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAwC;IAEvE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACN,MAAM;qEAAsB;oBACxB,IAAI,qBAAqB,aAAa,CAAC,SAAS,MAAM,EAAE;oBAExD,IAAI,kBAAkB,OAAO,EAAE;wBAC3B,aAAa,kBAAkB,OAAO;oBAC1C;oBAEA,gBAAgB;oBAChB,IAAI;wBACA,MAAM,iBAAiB,MAAM,4BAA4B,UAAU;wBACnE,IAAI,gBAAgB,SAAS,GAAG;4BAC5B,eAAe;wBACnB;oBACJ,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,iCAAiC;oBACnD,SAAU;wBACN,gBAAgB;oBACpB;gBACJ;;YAEA;YAEA;iDAAO;oBACH,IAAI,kBAAkB,OAAO,EAAE;wBAC3B,aAAa,kBAAkB,OAAO;oBAC1C;gBACJ;;QACJ;wCAAG;QAAC;QAAU;QAAQ;QAAO;QAAmB;KAAU;IAE1D,IAAI,WAAW,OAAO;IAEtB,qBACI,6LAAC;QAAI,WAAU;kBAEP,eACI,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBAC9B,6LAAC,gIAAA,CAAA,WAAQ;gBAEL,WAAU;eADL;;;;wBAKb,YAAY,GAAG,CAAC,CAAC,2BACb,6LAAC,8HAAA,CAAA,SAAM;gBAEH,SAAQ;gBACR,WAAU;gBACV,SAAS;oBACL,YAAY,WAAW,MAAM;oBAC7B,eAAe,EAAE;gBACrB;;kCAEA,6LAAC,4HAAA,CAAA,OAAI;wBAAC,MAAK;wBAAO,WAAU;;;;;;oBAC3B,WAAW,KAAK;;eATZ,GAAG,OAAO,CAAC,EAAE,WAAW,KAAK,EAAE;;;;;;;;;;AAgBhE;GAnEM;;QAC6E,+IAAA,CAAA,UAAO;;;KADpF;uCAqES"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/input.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useEffect } from 'react';\n\nimport { CornerDownRight } from 'lucide-react';\n\nimport Textarea from 'react-textarea-autosize'\n\nimport { Button, Tooltip, TooltipContent, TooltipTrigger, TooltipProvider } from '@/components/ui';\n\nimport { useEnterSubmit } from '../_hooks';\n\nimport { useChat } from '../_contexts/chat';\n\nimport { cn } from '@/lib/utils';\n\nimport ModelSelector from '../../_components/chat/model-selector';\nimport { usePrivy } from '@privy-io/react-auth';\nimport FollowUpSuggestions from './follow-up-suggestions';\n\nconst ChatInput: React.FC = () => {\n\n    const { user } = usePrivy();\n\n    const { input, setInput, onSubmit, isLoading, model, setModel, inputDisabledMessage } = useChat();\n\n    const { onKeyDown } = useEnterSubmit({ onSubmit: onSubmit })\n\n    const inputRef = useRef<HTMLTextAreaElement>(null)\n\n    useEffect(() => {\n        if (!isLoading && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [isLoading]);\n\n    return (\n        <div className=\"flex flex-col gap-1 w-full\">\n            <FollowUpSuggestions />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    onSubmit();\n                }}\n                className={cn(\n                    // Base styles\n                    \"w-full rounded-md flex flex-col overflow-hidden transition-colors duration-200 ease-in-out border border-transparent shadow-none\",\n                    // Light mode styles\n                    \"bg-neutral-100 focus-within:border-brand-600\",\n                    // Dark mode styles\n                    \"dark:bg-neutral-800/50 dark:focus-within:border-brand-600\",\n                    isLoading && \"opacity-50 cursor-not-allowed\"\n                )}\n            >\n                <OptionalTooltip text={inputDisabledMessage}>\n                    <Textarea\n                        ref={inputRef}\n                        tabIndex={0}\n                        onKeyDown={onKeyDown}\n                        placeholder=\"Ask the hive anything...\"\n                        className={cn(\n                            \"w-full max-h-60 resize-none bg-transparent px-3 py-3 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-neutral-600 dark:placeholder:text-neutral-400 disabled:cursor-not-allowed disabled:opacity-50\",\n                            \"focus-visible:outline-none\",\n                            \"dark:placeholder:text-neutral-400\",\n                        )}\n                        value={input}\n                        onChange={e => {\n                            setInput(e.target.value);\n                        }}\n                        disabled={isLoading || !user || inputDisabledMessage !== ''}\n                        autoFocus\n                    />\n                </OptionalTooltip>\n                <div className=\"flex items-center justify-between px-2 pb-2\">\n                    <ModelSelector\n                        model={model}\n                        onModelChange={setModel}\n                        disabled={isLoading}\n                    />\n                    <TooltipProvider>\n                        <Tooltip delayDuration={0}>\n                            <TooltipTrigger asChild>\n                                <Button \n                                    type=\"submit\" \n                                    size=\"icon\" \n                                    disabled={input.trim() === '' || isLoading || !user}\n                                    variant=\"ghost\"\n                                    className=\"h-8 w-8\"\n                                >\n                                    <CornerDownRight className=\"w-4 h-4 text-neutral-600 dark:text-neutral-400\" />\n                                    <span className=\"sr-only\">Send message</span>\n                                </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>Send message</TooltipContent>\n                        </Tooltip>\n                    </TooltipProvider>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst OptionalTooltip = ({ children, text }: { children: React.ReactNode, text: string }) => {\n\n    if(text === '') return children;\n\n    return (\n        <TooltipProvider>\n            <Tooltip delayDuration={0}>\n                <TooltipTrigger>{children}</TooltipTrigger>\n                <TooltipContent side=\"top\">{text}</TooltipContent>\n            </Tooltip>\n        </TooltipProvider>\n    );\n};\n\nexport default ChatInput;"],"names":[],"mappings":";;;;AAEA;AAMA;AAEA;AAEA;AAEA;AAEA;AAEA;AADA;AAPA;AAJA;AAEA;AAAA;AAJA;;;AAJA;;;;;;;;;;;AAoBA,MAAM,YAAsB;;IAExB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,WAAQ,AAAD;IAExB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,oBAAoB,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAE9F,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,UAAU;IAAS;IAE1D,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAuB;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACN,IAAI,CAAC,aAAa,SAAS,OAAO,EAAE;gBAChC,SAAS,OAAO,CAAC,KAAK;YAC1B;QACJ;8BAAG;QAAC;KAAU;IAEd,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,iLAAA,CAAA,UAAmB;;;;;0BACpB,6LAAC;gBACG,UAAU,CAAC;oBACP,EAAE,cAAc;oBAChB;gBACJ;gBACA,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,cAAc;gBACd,oIACA,oBAAoB;gBACpB,gDACA,mBAAmB;gBACnB,6DACA,aAAa;;kCAGjB,6LAAC;wBAAgB,MAAM;kCACnB,cAAA,6LAAC,0NAAA,CAAA,UAAQ;4BACL,KAAK;4BACL,UAAU;4BACV,WAAW;4BACX,aAAY;4BACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,+OACA,8BACA;4BAEJ,OAAO;4BACP,UAAU,CAAA;gCACN,SAAS,EAAE,MAAM,CAAC,KAAK;4BAC3B;4BACA,UAAU,aAAa,CAAC,QAAQ,yBAAyB;4BACzD,SAAS;;;;;;;;;;;kCAGjB,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,8JAAA,CAAA,UAAa;gCACV,OAAO;gCACP,eAAe;gCACf,UAAU;;;;;;0CAEd,6LAAC,+HAAA,CAAA,kBAAe;0CACZ,cAAA,6LAAC,+HAAA,CAAA,UAAO;oCAAC,eAAe;;sDACpB,6LAAC,+HAAA,CAAA,iBAAc;4CAAC,OAAO;sDACnB,cAAA,6LAAC,8HAAA,CAAA,SAAM;gDACH,MAAK;gDACL,MAAK;gDACL,UAAU,MAAM,IAAI,OAAO,MAAM,aAAa,CAAC;gDAC/C,SAAQ;gDACR,WAAU;;kEAEV,6LAAC,mOAAA,CAAA,kBAAe;wDAAC,WAAU;;;;;;kEAC3B,6LAAC;wDAAK,WAAU;kEAAU;;;;;;;;;;;;;;;;;sDAGlC,6LAAC,+HAAA,CAAA,iBAAc;sDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5C;GAhFM;;QAEe,sLAAA,CAAA,WAAQ;QAE+D,+IAAA,CAAA,UAAO;QAEzE,qJAAA,CAAA,iBAAc;;;KANlC;AAkFN,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAA+C;IAEpF,IAAG,SAAS,IAAI,OAAO;IAEvB,qBACI,6LAAC,+HAAA,CAAA,kBAAe;kBACZ,cAAA,6LAAC,+HAAA,CAAA,UAAO;YAAC,eAAe;;8BACpB,6LAAC,+HAAA,CAAA,iBAAc;8BAAE;;;;;;8BACjB,6LAAC,+HAAA,CAAA,iBAAc;oBAAC,MAAK;8BAAO;;;;;;;;;;;;;;;;;AAI5C;MAZM;uCAcS"}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/starter-buttons/starter-button.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Button, Icon } from '@/components/ui';\n\nimport { useChat } from '../../_contexts/chat';\n\nimport { cn } from '@/lib/utils';\n\nimport { IconName } from '@/types';\n\ninterface Props {\n    icon: IconName\n    title: string\n    description: string\n    prompt: string,\n    className?: string\n}\n\nconst StarterButton: React.FC<Props> = ({ icon, title, description, prompt, className }) => {\n\n    const { sendMessage } = useChat();\n\n    return (\n        <Button \n            className={cn(\n                'flex items-center gap-2 text-sm text-neutral-600 dark:text-neutral-400 h-fit justify-start',\n                className\n            )}\n            variant=\"outline\"\n            onClick={() => sendMessage(prompt)}\n        >\n            <div className=\"flex flex-col\">\n                <div className=\"flex items-center gap-2\">\n                    <Icon name={icon} className=\"w-4 h-4\" />\n                    <p className=\"text-md font-bold\">\n                        {title}\n                    </p>\n                </div>\n                <p className=\"text-xs text-neutral-600 dark:text-neutral-400 hidden md:block\">\n                    {description}\n                </p>\n            </div>\n        </Button>\n    )\n}\n\nexport default StarterButton"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAJA;AAAA;;;AAJA;;;;AAoBA,MAAM,gBAAiC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE;;IAEnF,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAE9B,qBACI,6LAAC,8HAAA,CAAA,SAAM;QACH,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,8FACA;QAEJ,SAAQ;QACR,SAAS,IAAM,YAAY;kBAE3B,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,4HAAA,CAAA,OAAI;4BAAC,MAAM;4BAAM,WAAU;;;;;;sCAC5B,6LAAC;4BAAE,WAAU;sCACR;;;;;;;;;;;;8BAGT,6LAAC;oBAAE,WAAU;8BACR;;;;;;;;;;;;;;;;;AAKrB;GA1BM;;QAEsB,+IAAA,CAAA,UAAO;;;KAF7B;uCA4BS"}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/starter-buttons/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport StarterButton from './starter-button';\n\nconst starterButtons = [\n    {\n        title: \"Trending\",\n        description: \"Search the trending tokens\",\n        icon: \"Coins\" as const,\n        prompt: \"Show me the trending tokens\"\n    }, \n    {\n        title: \"Stake\",\n        description: \"Stake Sol\",\n        icon: \"Coins\" as const,\n        prompt: \"Find me the best staking yields\"\n    },\n    {\n        title: \"Trade\",\n        description: \"Swap on Jupiter\",\n        icon: \"ChartCandlestick\" as const,\n        prompt: \"Let's trade some tokens\"\n    },\n    {\n        title: \"Knowledge\",\n        description: \"Get developer docs for protocols\",\n        icon: \"Brain\" as const,\n        prompt: \"Get me developer docs for Orca\"\n    }\n] as const\n\nconst StarterButtons = () => {\n    return (\n        <div className=\"grid grid-cols-2 gap-2\">\n            {starterButtons.map((button) => (\n                <StarterButton \n                    key={button.title} \n                    {...button}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default StarterButtons"],"names":[],"mappings":";;;;AAEA;;;AAEA,MAAM,iBAAiB;IACnB;QACI,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACZ;IACA;QACI,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACZ;IACA;QACI,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACZ;IACA;QACI,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACZ;CACH;AAED,MAAM,iBAAiB;IACnB,qBACI,6LAAC;QAAI,WAAU;kBACV,eAAe,GAAG,CAAC,CAAC,uBACjB,6LAAC,oLAAA,CAAA,UAAa;gBAET,GAAG,MAAM;eADL,OAAO,KAAK;;;;;;;;;;AAMrC;KAXM;uCAaS"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/empty.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\n\nimport ChatInput from './input';\nimport StarterButtons from './starter-buttons';\n\nimport { cn } from '@/lib/utils';\nimport Logo from '@/components/ui/logo';\n\nconst EmptyChat: React.FC = () => {\n\n    return (\n        <div className={cn(\n            // Base\n            \"flex flex-col items-center justify-center w-full h-full px-4\",\n        )}>\n            <div className=\"flex flex-col items-center justify-center w-full max-w-2xl gap-4 md:gap-8\">\n                <div className=\"flex flex-col gap-4 items-center justify-center\">\n                    <Logo className=\"w-20 h-20\" />\n                    <div className=\"flex flex-col gap-1\">\n                        <h1 className=\"font-semibold text-center text-2xl\">\n                            How can <span className=\"text-brand-600 font-bold inline\">We</span> help you?\n                        </h1>\n                        <p className=\"text-center text-sm text-neutral-600 dark:text-neutral-400\">\n                            Orchestrate a hive mind of DeFi Agents to act on Solana\n                        </p>\n                    </div>\n                </div>\n                <ChatInput />\n                <StarterButtons />\n            </div>\n        </div>\n    )\n}\n\nexport default EmptyChat;"],"names":[],"mappings":";;;;AAIA;AACA;AAEA;AACA;AARA;;;;;;AAUA,MAAM,YAAsB;IAExB,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,OAAO;QACP;kBAEA,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,4HAAA,CAAA,UAAI;4BAAC,WAAU;;;;;;sCAChB,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAG,WAAU;;wCAAqC;sDACvC,6LAAC;4CAAK,WAAU;sDAAkC;;;;;;wCAAS;;;;;;;8CAEvE,6LAAC;oCAAE,WAAU;8CAA6D;;;;;;;;;;;;;;;;;;8BAKlF,6LAAC,kJAAA,CAAA,UAAS;;;;;8BACV,6LAAC,wKAAA,CAAA,UAAc;;;;;;;;;;;;;;;;AAI/B;KAxBM;uCA0BS"}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/chat/loading-message.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react'\n\nimport { AnimatedShinyText } from '@/components/ui';\n\nimport Logo from '@/components/ui/logo';\n\nimport { cn } from '@/lib/utils';\n\ninterface Props {\n    compressed?: boolean;\n}\n\nconst LoadingMessage: React.FC<Props> = ({ compressed }) => {\n\n    return (\n        <div className={cn(\n            // base styles\n            \"flex w-full px-2 py-4 max-w-full last:border-b-0\",\n            // mobile styles\n            \"gap-2\",\n            // desktop styles\n            \"md:gap-4 md:px-4\",\n            compressed && \"md:gap-2 md:px-2 px-0\",\n        )}>\n            <Logo \n                className={cn(\n                    \"w-6 h-6 md:w-10 md:h-10\",\n                )}\n            />\n            <div className=\"md:pt-2 w-full max-w-full md:flex-1 md:w-0 overflow-hidden flex flex-col gap-2 items-start\">\n                <AnimatedShinyText\n                    className=\"text-sm font-semibold text-left mx-0 w-fit\"\n                    shimmerWidth={70}\n                >\n                    Thinking...\n                </AnimatedShinyText>\n            </div>\n        </div>\n    )\n}\n\nexport default LoadingMessage;"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAJA;AAJA;;;;;AAcA,MAAM,iBAAkC,CAAC,EAAE,UAAU,EAAE;IAEnD,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,cAAc;QACd,oDACA,gBAAgB;QAChB,SACA,iBAAiB;QACjB,oBACA,cAAc;;0BAEd,6LAAC,4HAAA,CAAA,UAAI;gBACD,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR;;;;;;0BAGR,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC,iJAAA,CAAA,oBAAiB;oBACd,WAAU;oBACV,cAAc;8BACjB;;;;;;;;;;;;;;;;;AAMjB;KA3BM;uCA6BS"}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/chat/link.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { useKnowledgeByUrl } from '@/hooks';\n\ninterface Props {\n    url: string;\n    children: React.ReactNode;\n}\n\nconst Link: React.FC<Props> = ({ url, children }) => {\n\n    const { data, isLoading } = useKnowledgeByUrl(url);\n\n    if(isLoading) return children;\n\n    if(data) return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <span className=\"bg-brand-600/70 rounded-md px-2 py-1 w-fit inline-flex items-center gap-2 hover:bg-brand-600/90 transition-colors text-sm\">\n                {\n                    data.favicon && <img src={data.favicon} alt={data.name} className=\"w-4 h-4\" />\n                }\n                {data.name}\n            </span>\n        </a>\n    )\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brand-600 hover:underline\">\n          {children}\n        </a>\n    )\n}\n\nexport default Link;"],"names":[],"mappings":";;;;AAIA;AAAA;;;AAJA;;AAWA,MAAM,OAAwB,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;;IAE5C,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,oBAAiB,AAAD,EAAE;IAE9C,IAAG,WAAW,OAAO;IAErB,IAAG,MAAM,qBACL,6LAAC;QAAE,MAAM;QAAK,QAAO;QAAS,KAAI;kBAC9B,cAAA,6LAAC;YAAK,WAAU;;gBAER,KAAK,OAAO,kBAAI,6LAAC;oBAAI,KAAK,KAAK,OAAO;oBAAE,KAAK,KAAK,IAAI;oBAAE,WAAU;;;;;;gBAErE,KAAK,IAAI;;;;;;;;;;;;IAKtB,qBACI,6LAAC;QAAE,MAAM;QAAK,QAAO;QAAS,KAAI;QAAsB,WAAU;kBAC/D;;;;;;AAGX;GAtBM;;QAE0B,iKAAA,CAAA,oBAAiB;;;KAF3C;uCAwBS"}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/tool-to-agent.ts"],"sourcesContent":["import { \n    KNOWLEDGE_AGENT_NAME, \n    MARKET_AGENT_NAME, \n    STAKING_AGENT_NAME, \n    WALLET_AGENT_NAME,\n    TOKEN_ANALYSIS_AGENT_NAME, \n    TRADING_AGENT_NAME, \n    SOCIAL_AGENT_NAME,\n    LIQUIDITY_AGENT_NAME\n} from \"@/ai/agents/names\";\n\nimport type { IconName } from \"@/types\";\nimport type { ToolInvocation } from \"ai\";\n\nexport const toolToAgent = {\n    \"staking\": STAKING_AGENT_NAME,\n    \"wallet\": WALLET_AGENT_NAME,\n    \"market\": MARKET_AGENT_NAME,\n    \"knowledge\": KNOWLEDGE_AGENT_NAME,\n    \"trading\": TRADING_AGENT_NAME,\n    \"social\": SOCIAL_AGENT_NAME,\n    \"tokenanalysis\": TOKEN_ANALYSIS_AGENT_NAME,\n    \"liquidity\": LIQUIDITY_AGENT_NAME\n}\n\nexport const getAgentName = (tool: ToolInvocation) => {\n    const toolParts = tool.toolName.split(\"-\");\n    const agentName = toolParts[0];\n    return toolToAgent[agentName as keyof typeof toolToAgent] || \"Unknown Agent\";\n}\n\nexport const getAgentIcon = (agentName: string): IconName => {\n    switch(agentName) {\n        case STAKING_AGENT_NAME:\n            return \"Beef\";\n        case WALLET_AGENT_NAME:\n            return \"Wallet\";\n        case MARKET_AGENT_NAME:\n            return \"ChartLine\";\n        case KNOWLEDGE_AGENT_NAME:\n            return \"Brain\";\n        case TRADING_AGENT_NAME:\n            return \"ChartCandlestick\";\n        case SOCIAL_AGENT_NAME:\n            return \"Twitter\";\n        case TOKEN_ANALYSIS_AGENT_NAME:\n            return \"Coins\";\n        case LIQUIDITY_AGENT_NAME:\n            return \"Droplet\";\n        default:\n            return \"Brain\";\n    }\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcO,MAAM,cAAc;IACvB,WAAW,kIAAA,CAAA,qBAAkB;IAC7B,UAAU,iIAAA,CAAA,oBAAiB;IAC3B,UAAU,iIAAA,CAAA,oBAAiB;IAC3B,aAAa,oIAAA,CAAA,uBAAoB;IACjC,WAAW,kIAAA,CAAA,qBAAkB;IAC7B,UAAU,iIAAA,CAAA,oBAAiB;IAC3B,iBAAiB,4IAAA,CAAA,4BAAyB;IAC1C,aAAa,oIAAA,CAAA,uBAAoB;AACrC;AAEO,MAAM,eAAe,CAAC;IACzB,MAAM,YAAY,KAAK,QAAQ,CAAC,KAAK,CAAC;IACtC,MAAM,YAAY,SAAS,CAAC,EAAE;IAC9B,OAAO,WAAW,CAAC,UAAsC,IAAI;AACjE;AAEO,MAAM,eAAe,CAAC;IACzB,OAAO;QACH,KAAK,kIAAA,CAAA,qBAAkB;YACnB,OAAO;QACX,KAAK,iIAAA,CAAA,oBAAiB;YAClB,OAAO;QACX,KAAK,iIAAA,CAAA,oBAAiB;YAClB,OAAO;QACX,KAAK,oIAAA,CAAA,uBAAoB;YACrB,OAAO;QACX,KAAK,kIAAA,CAAA,qBAAkB;YACnB,OAAO;QACX,KAAK,iIAAA,CAAA,oBAAiB;YAClB,OAAO;QACX,KAAK,4IAAA,CAAA,4BAAyB;YAC1B,OAAO;QACX,KAAK,oIAAA,CAAA,uBAAoB;YACrB,OAAO;QACX;YACI,OAAO;IACf;AACJ"}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1068, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/chat/message.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react'\n\nimport { usePrivy } from '@privy-io/react-auth';\n\nimport { Markdown, Icon, Logo, Avatar, AvatarFallback, AvatarImage } from '@/components/ui';\n\nimport Link from './link';\n\nimport { cn } from '@/lib/utils';\n\nimport { getAgentName } from '../../chat/_components/tools/tool-to-agent';\nimport { pfpURL } from '@/lib/pfp';\n\nimport type { Message as MessageType, ToolInvocation as ToolInvocationType } from 'ai';\n\ninterface Props {\n    message: MessageType,\n    ToolComponent: React.ComponentType<{ tool: ToolInvocationType, prevToolAgent?: string }>,\n    className?: string,\n    previousMessage?: MessageType,\n    nextMessage?: MessageType,\n    compressed?: boolean\n}\n\nconst Message: React.FC<Props> = ({ message, ToolComponent, className, previousMessage, nextMessage, compressed }) => {\n\n    const { user } = usePrivy();\n\n    const isUser = message.role === 'user';\n\n    const nextMessageSameRole = nextMessage?.role === message.role;\n    const previousMessageSameRole = previousMessage?.role === message.role;\n\n    return (\n        <div className={cn(\n            // base styles\n            \"flex w-full px-2 py-4 max-w-full last:border-b-0 h-fit\",\n            // mobile styles\n            \"flex-col gap-2\",\n            // desktop styles\n            \"md:flex-row md:gap-4 md:px-4\",\n            compressed && \"md:px-2 md:flex-col gap-0 md:gap-1\",\n            nextMessageSameRole && \"pb-0\",\n            previousMessageSameRole && \"pt-0\",\n            (previousMessageSameRole && compressed) && \"border-b border-gray-200 dark:border-neutral-700 pt-2\",\n            !nextMessageSameRole && \"border-b border-gray-200 dark:border-neutral-700\",\n            className,\n\n        )}>\n            <div className={cn(\n                \"flex items-center md:items-start gap-2 md:gap-4\",\n                previousMessageSameRole && \"hidden md:block\",\n                compressed && \"md:gap-2 md:flex md:items-center\",\n                (previousMessageSameRole && compressed) && \"hidden md:hidden\"\n            )}>\n                <div className={cn(\n                    \"hidden md:flex items-center justify-center w-6 h-6 md:w-10 md:h-10 rounded-full\",\n                    compressed && \"md:flex md:h-6 md:w-6\",\n                    isUser && \"bg-neutral-100 dark:bg-neutral-800 border border-neutral-200 dark:border-neutral-700\",\n                    previousMessageSameRole && \"opacity-0\"\n                )}>\n                    {\n                        isUser ? (\n                            <Avatar className={cn(\"w-10 h-10\", compressed && \"w-6 h-6\")}>\n                                <AvatarFallback>\n                                    <Icon name=\"User\" className={cn(\"w-4 h-4 md:w-6 md:h-6\", compressed && \"md:w-4 md:h-4\")} />\n                                </AvatarFallback>\n                                {\n                                    user && (\n                                        <AvatarImage src={pfpURL(user, false)} />\n                                    )\n                                }\n                            </Avatar>\n                            \n                        ) : (\n                            <Logo className={cn(\"h-10 w-10\", compressed && \"h-6 w-6\")} />\n                        )\n                    }\n                </div>\n                <p className={cn(\n                    \"text-sm font-semibold md:hidden\",\n                    compressed && \"hidden md:block\",\n                    previousMessageSameRole && \"hidden md:hidden\",\n                    isUser ? \"text-neutral-900 dark:text-neutral-100\" : \"text-brand-600 dark:text-brand-600\"\n                )}>\n                    {message.role === 'user' ? 'You' : 'The Hive'}\n                </p>\n            </div>\n            <div className={cn(\"pt-2 w-full max-w-full md:flex-1 md:w-0 overflow-hidden flex flex-col gap-2\", compressed && \"gap-0 md:w-full pt-0\")}>\n                {\n                    message.content && (\n                        <MessageMarkdown content={message.content} compressed={compressed} />\n                    )\n                }\n                {\n                    message.toolInvocations && message.toolInvocations.length > 0 && (\n                        <div className=\"flex flex-col gap-2\">\n                            {message.toolInvocations.map((tool, index) => (\n                                <ToolComponent \n                                    key={tool.toolCallId} \n                                    tool={tool} \n                                    prevToolAgent={\n                                        index === 0 ? (\n                                            previousMessage?.toolInvocations?.[0]\n                                                ? getAgentName(previousMessage?.toolInvocations?.[0])\n                                                : undefined\n                                        ) : (\n                                            message.toolInvocations![index - 1]\n                                                ? getAgentName(message.toolInvocations![index - 1])\n                                                : undefined\n                                        )\n                                    }\n                                />\n                            ))}\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nconst MessageMarkdown = React.memo(({ content, compressed }: { content: string, compressed?: boolean }) => {\n    return (\n        <Markdown\n            components={{\n                a: ({ href, children }: React.AnchorHTMLAttributes<HTMLAnchorElement>) => {\n                    if(!href) return children\n                    return <Link url={href}>{children}</Link>\n                },\n                ...(compressed ? {\n                    h1({ children }) {\n                        return <h1 className={cn(\"text-lg md:text-xl font-bold\")}>{children}</h1>\n                    },\n                    h2({ children }) {\n                        return <h2 className={cn(\"text-md md:text-lg font-bold\")}>{children}</h2>\n                    },\n                    h3({ children }) {\n                        return <h3 className={cn(\"text-sm md:text-md font-bold\")}>{children}</h3>\n                    },\n                    h4({ children }) {\n                        return <h4 className={cn(\"text-sm md:text-sm font-bold\")}>{children}</h4>\n                    },\n                    h5({ children }) {\n                        return <h5 className={cn(\"text-xs md:text-xs font-bold\")}>{children}</h5>\n                    },\n                    h6({ children }) {\n                        return <h6 className={cn(\"text-xs font-bold\")}>{children}</h6>\n                    },\n                    li({ children }) {\n                        return <li className=\"text-xs md:text-sm\">{children}</li>\n                    },\n                    p({ children, node }) {\n                        const hasBlockElements = node?.children?.some((child: { type: string, tagName: string }) => \n                            child.type === 'element' && \n                            ['div', 'p', 'blockquote', 'form'].includes(child.tagName)\n                        );\n    \n                        if (hasBlockElements) {\n                            return (\n                                <div className=\"text-xs md:text-sm\">\n                                    {children}\n                                </div>\n                            );\n                        }\n    \n                        return <p className=\"text-xs md:text-sm\">{children}</p>\n                    },\n                } : {})\n            }}\n        >\n            {content}\n        </Markdown>\n    )\n})\n\nMessageMarkdown.displayName = 'MessageMarkdown';\n\nexport default Message;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1369, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/tool-card.tsx"],"sourcesContent":["import React from 'react'\n\nimport { \n    AnimatedShinyText, \n    Collapsible, \n    CollapsibleTrigger, \n    CollapsibleContent, \n    Icon \n} from '@/components/ui'\n\nimport { cn } from '@/lib/utils'\n\nimport type { ToolInvocation } from 'ai'\nimport type { BaseActionResult } from '@/ai'\nimport { getAgentIcon, getAgentName } from './tool-to-agent'\nimport { ChevronDown } from 'lucide-react'\n\ninterface Props<ActionResultBodyType, ActionArgsType> {\n    tool: ToolInvocation,\n    loadingText: string,\n    result: {\n        heading: (result: BaseActionResult<ActionResultBodyType>) => string,\n        body: (result: BaseActionResult<ActionResultBodyType>) => React.ReactNode,\n    },\n    call?: {\n        heading: string,\n        body: (toolCallId: string, args: ActionArgsType) => React.ReactNode,\n    },\n    defaultOpen?: boolean,\n    className?: string,\n    prevToolAgent?: string,\n}\n\nconst ToolCard = <ActionResultBodyType, ActionArgsType>({ tool, loadingText, result, call, defaultOpen = true, className, prevToolAgent }: Props<ActionResultBodyType, ActionArgsType>) => {\n\n    const agentName = getAgentName(tool);\n\n    const agentIcon = getAgentIcon(agentName);\n    \n    return (\n        <div className={cn(\n            \"flex flex-col gap-2 w-fit\",\n            className\n        )}>\n            <div className={cn(\n                \"flex items-center gap-2\",\n                prevToolAgent === agentName && \"hidden\"\n            )}>\n                {\n                    tool.state === \"result\"\n                        ? (tool.result.body \n                            ? <Icon name={agentIcon} className=\"w-4 h-4 text-brand-600 dark:text-brand-600\" />\n                            : <Icon name=\"X\" className=\"w-4 h-4 text-red-500 dark:text-red-400\" />)\n                        : <Icon name={agentIcon} className=\"w-4 h-4 text-neutral-500 dark:text-neutral-400\" />\n                }\n                <p className=\"text-sm md:text-lg font-bold\">{agentName}</p>\n            </div>\n            <div>\n                {\n                    tool.state === \"partial-call\" ? (\n                        <AnimatedShinyText\n                            className=\"text-sm\"\n                        >\n                            {loadingText}\n                        </AnimatedShinyText>\n                    ) : (\n                        tool.state === \"call\" ? (\n                            call?.body \n                                ? (\n                                    <div className=\"flex flex-col gap-2\">\n                                        <p className=\"text-sm text-neutral-600 dark:text-neutral-400 font-medium\">{call.heading}</p>\n                                        {call.body(tool.toolCallId, tool.args)}\n                                    </div>\n                                ) \n                                : (\n                                    <AnimatedShinyText\n                                        className=\"text-sm\"\n                                    >\n                                        {loadingText}\n                                    </AnimatedShinyText>\n                                )\n                        ) : (\n                            <Collapsible defaultOpen={defaultOpen}>\n                                <CollapsibleTrigger \n                                    className=\"flex items-center gap-2 text-neutral-600 dark:text-neutral-400 hover:underline\"\n                                >\n                                    <p className=\"text-sm\">{result.heading(tool.result)}</p>\n                                    <ChevronDown className=\"w-4 h-4 transition-transform duration-300 group-data-[state=open]:rotate-180\" />\n                                </CollapsibleTrigger>\n                                <CollapsibleContent className=\"text-sm pt-2\">\n                                    {result.body(tool.result)}\n                                </CollapsibleContent>\n                            </Collapsible>\n                        )\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ToolCard"],"names":[],"mappings":";;;;AAEA;AAQA;AAIA;AAZA;AAAA;AAaA;AAbA;;;;;;AA+BA,MAAM,WAAW,CAAuC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,IAAI,EAAE,SAAS,EAAE,aAAa,EAA+C;IAElL,MAAM,YAAY,CAAA,GAAA,wKAAA,CAAA,eAAY,AAAD,EAAE;IAE/B,MAAM,YAAY,CAAA,GAAA,wKAAA,CAAA,eAAY,AAAD,EAAE;IAE/B,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,6BACA;;0BAEA,6LAAC;gBAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,2BACA,kBAAkB,aAAa;;oBAG3B,KAAK,KAAK,KAAK,WACR,KAAK,MAAM,CAAC,IAAI,iBACb,6LAAC,4HAAA,CAAA,OAAI;wBAAC,MAAM;wBAAW,WAAU;;;;;6CACjC,6LAAC,4HAAA,CAAA,OAAI;wBAAC,MAAK;wBAAI,WAAU;;;;;6CAC7B,6LAAC,4HAAA,CAAA,OAAI;wBAAC,MAAM;wBAAW,WAAU;;;;;;kCAE3C,6LAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAEjD,6LAAC;0BAEO,KAAK,KAAK,KAAK,+BACX,6LAAC,iJAAA,CAAA,oBAAiB;oBACd,WAAU;8BAET;;;;;2BAGL,KAAK,KAAK,KAAK,SACX,MAAM,qBAEE,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAE,WAAU;sCAA8D,KAAK,OAAO;;;;;;wBACtF,KAAK,IAAI,CAAC,KAAK,UAAU,EAAE,KAAK,IAAI;;;;;;yCAIzC,6LAAC,iJAAA,CAAA,oBAAiB;oBACd,WAAU;8BAET;;;;;yCAIb,6LAAC,mIAAA,CAAA,cAAW;oBAAC,aAAa;;sCACtB,6LAAC,mIAAA,CAAA,qBAAkB;4BACf,WAAU;;8CAEV,6LAAC;oCAAE,WAAU;8CAAW,OAAO,OAAO,CAAC,KAAK,MAAM;;;;;;8CAClD,6LAAC,uNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;;;;;;;sCAE3B,6LAAC,mIAAA,CAAA,qBAAkB;4BAAC,WAAU;sCACzB,OAAO,IAAI,CAAC,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAS5D;KAlEM;uCAoES"}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1528, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/token-balance.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Card } from '@/components/ui';\n\ninterface Props {\n    token: string,\n    balance: number,\n    logoURI: string,\n    name: string,\n}\n\nconst TokenBalance: React.FC<Props> = ({ token, balance, logoURI, name }) => {\n    return (\n        <Card className=\"flex flex-row items-center gap-2 p-2\">\n            <img src={logoURI} alt={name} className=\"w-8 h-8 rounded-full\" />\n            <div className=\"flex flex-col\">\n                <p className=\"text-xs text-neutral-600 dark:text-neutral-400\">{name} ({token})</p>\n                <p className=\"text-md font-bold\">{balance.toFixed(4)}</p>\n            </div>\n        </Card>\n    )\n}\n\nexport default TokenBalance"],"names":[],"mappings":";;;;AAIA;AAAA;AAJA;;;AAaA,MAAM,eAAgC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;IACpE,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAI,KAAK;gBAAS,KAAK;gBAAM,WAAU;;;;;;0BACxC,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;;4BAAkD;4BAAK;4BAAG;4BAAM;;;;;;;kCAC7E,6LAAC;wBAAE,WAAU;kCAAqB,QAAQ,OAAO,CAAC;;;;;;;;;;;;;;;;;;AAIlE;KAVM;uCAYS"}},
    {"offset": {"line": 1594, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1600, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/liquidity/pool-stats.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Image from \"next/image\";\n\nimport { Button, Card, Progress, Separator } from \"@/components/ui\";\n\nimport type { DexScreenerPair } from \"@/services/dexscreener/types\";\nimport { cn } from \"@/lib/utils\";\nimport Link from \"next/link\";\nimport { ArrowUpRightIcon } from \"lucide-react\";\n\ninterface Props {\n    pair: DexScreenerPair;\n    children: React.ReactNode;\n}\n\nconst timeframeButtons = [\"m5\", \"h1\", \"h6\", \"h24\"] as const;\n\nexport const PoolStats: React.FC<Props> = ({ pair, children }) => {\n\n    const [timeframe, setTimeframe] = useState<typeof timeframeButtons[number]>(\"h24\");\n\n    return (\n        <Card className=\"flex flex-col gap-4 p-2\">\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex justify-between items-center gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <Image \n                            src={\"/dexes/raydium.png\"} \n                            alt=\"Raydium\" \n                            width={32} \n                            height={32} \n                            className=\"rounded-full\"\n                        />\n                        <h3>{pair.baseToken.symbol} / {pair.quoteToken.symbol}</h3>\n                    </div>\n                    <Link href={pair.url} target=\"_blank\">\n                        <Button variant=\"ghost\" size=\"sm\">\n                            Dexscreener\n                            <ArrowUpRightIcon className=\"w-4 h-4\" />\n                        </Button>\n                    </Link>\n                </div>\n                <h2 className=\"text-lg font-semibold\">Stats</h2>\n                <div className=\"flex flex-col gap-2\">\n                    <div className=\"flex items-center gap-2 w-full\">\n                        {\n                            timeframeButtons.map((button) => (\n                                <Button \n                                    key={button}\n                                    variant={timeframe === button ? \"brand\" : \"outline\"}\n                                    size=\"sm\" \n                                    onClick={() => setTimeframe(button)}\n                                    className=\"flex-1\"\n                                >\n                                    {button}\n                                </Button>\n                            ))\n                        }\n                    </div>\n                    {\n                        (pair.volume || pair.txns || pair.liquidity) && (\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 w-full justify-between\">\n                                {\n                                    pair.volume && (\n                                        <div className=\"flex flex-col justify-between gap-2\">\n                                            <div className=\"flex flex-col gap-1\">\n                                                <h3 className=\"text-md font-semibold text-neutral-600 dark:text-neutral-400\">\n                                                    Volume\n                                                </h3>\n                                                <p \n                                                    className={cn(\n                                                        \"text-sm font-medium\",\n                                                    )}\n                                                >${pair.volume[timeframe].toLocaleString()}</p>\n                                            </div>\n                                            <Separator />\n                                        </div>\n                                    )\n                                }\n                                {\n                                    pair.txns && (\n                                        <div className=\"flex flex-col justify-between gap-2\">\n                                            <div className=\"flex flex-col gap-1\">\n                                                <h3 className=\"text-md font-semibold text-neutral-600 dark:text-neutral-400\">Transactions</h3>\n                                                <Progress \n                                                    value={pair.txns[timeframe].buys / (pair.txns[timeframe].buys + pair.txns[timeframe].sells) * 100}\n                                                    className=\"w-full h-2\"\n                                                />\n                                                <div className=\"flex justify-between gap-2\">\n                                                    <p className=\"text-xs font-medium\">{pair.txns[timeframe as keyof typeof pair.txns].buys.toLocaleString()} Buys</p>\n                                                    <p className=\"text-xs font-medium\">{pair.txns[timeframe as keyof typeof pair.txns].sells.toLocaleString()} Sells</p>\n                                                </div>\n                                            </div>\n                                            <Separator />\n                                        </div>\n                                    )\n                                }\n                                {\n                                    pair.liquidity && (\n                                        <div className=\"flex flex-col justify-between gap-2\">\n                                            <div className=\"flex flex-col gap-1\">\n                                                <h3 className=\"text-md font-semibold text-neutral-600 dark:text-neutral-400\">Liquidity</h3>\n                                                <p className=\"text-sm font-medium\">${pair.liquidity?.usd.toLocaleString()}</p>\n                                            </div>\n                                            <Separator />\n                                        </div>\n                                    )\n                                }\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n            {children}\n        </Card>\n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1928, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/liquidity/raydium-pool.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { PoolStats } from \"./pool-stats\";\n\nimport type { DexScreenerPair } from \"@/services/dexscreener/types\";\nimport type { ApiV3PoolInfoItem } from \"@raydium-io/raydium-sdk-v2\";\n\ninterface Props {\n    pair: DexScreenerPair;\n    pool: ApiV3PoolInfoItem;\n}\n\nconst timeframes = [\"day\", \"week\", \"month\"] as const;\n\nconst RaydiumPool: React.FC<Props> = ({ pair, pool }) => {\n\n    return (\n        <PoolStats pair={pair}>\n            <div className=\"flex flex-col gap-2\">\n                <h2 className=\"text-lg font-semibold\">Raydium Pool ({pool.type})</h2>\n                <h3 className=\"text-md font-semibold\">APR</h3>\n                <div className=\"flex gap-2 w-full justify-between\">\n                    {timeframes.map((timeframe) => (\n                        <div key={timeframe} className=\"flex flex-col gap-2 w-full\">\n                            <p className=\"text-sm font-medium\">{timeframe.charAt(0).toUpperCase() + timeframe.slice(1)}</p>\n                            <p className=\"text-sm font-medium\">{(pool[timeframe].apr).toLocaleString()}%</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </PoolStats>\n    )\n}\n\nexport default RaydiumPool;"],"names":[],"mappings":";;;;AAEA;;;AAUA,MAAM,aAAa;IAAC;IAAO;IAAQ;CAAQ;AAE3C,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IAEhD,qBACI,6LAAC,yLAAA,CAAA,YAAS;QAAC,MAAM;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;;wBAAwB;wBAAe,KAAK,IAAI;wBAAC;;;;;;;8BAC/D,6LAAC;oBAAG,WAAU;8BAAwB;;;;;;8BACtC,6LAAC;oBAAI,WAAU;8BACV,WAAW,GAAG,CAAC,CAAC,0BACb,6LAAC;4BAAoB,WAAU;;8CAC3B,6LAAC;oCAAE,WAAU;8CAAuB,UAAU,MAAM,CAAC,GAAG,WAAW,KAAK,UAAU,KAAK,CAAC;;;;;;8CACxF,6LAAC;oCAAE,WAAU;;wCAAwB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,cAAc;wCAAG;;;;;;;;2BAFrE;;;;;;;;;;;;;;;;;;;;;AASlC;KAlBM;uCAoBS"}},
    {"offset": {"line": 2020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2026, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2078, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/balance.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\nimport { TokenBalance } from '../utils';\n\nimport type { ToolInvocation } from 'ai';\nimport type { BalanceResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetBalance: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting ${tool.args.tokenAddress || \"SOL\"} Balance...`}\n            result={{\n                heading: (result: BalanceResultType) => result.body?.token \n                    ? `Fetched ${result.body.token} Balance` \n                    : `Failed to fetch balance`,\n                body: (result: BalanceResultType) => result.body \n                    ? (\n                        <TokenBalance \n                            token={result.body.token}\n                            balance={result.body.balance}\n                            logoURI={result.body.logoURI}\n                            name={result.body.name}\n                        />\n                    ) : \"No balance found\"\n            }}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nexport default GetBalance;"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;;;;AAUA,MAAM,aAA8B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAGxD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,WAAW,CAAC;QACpE,QAAQ;YACJ,SAAS,CAAC,SAA8B,OAAO,IAAI,EAAE,QAC/C,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GACtC,CAAC,uBAAuB,CAAC;YAC/B,MAAM,CAAC,SAA8B,OAAO,IAAI,iBAExC,6LAAC,0NAAA,CAAA,eAAY;oBACT,OAAO,OAAO,IAAI,CAAC,KAAK;oBACxB,SAAS,OAAO,IAAI,CAAC,OAAO;oBAC5B,SAAS,OAAO,IAAI,CAAC,OAAO;oBAC5B,MAAM,OAAO,IAAI,CAAC,IAAI;;;;;6BAE1B;QACZ;QACA,eAAe;;;;;;AAG3B;KAxBM;uCA0BS"}},
    {"offset": {"line": 2119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/log-in-button.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport '@/components/utils/suppress-console'\nimport { Button } from '@/components/ui'\nimport { useLogin } from '@/hooks'\nimport { Wallet } from '@privy-io/react-auth'\n\ninterface Props {\n    onComplete?: (wallet: Wallet) => void,\n}\n\nconst LogInButton: React.FC<Props> = ({ onComplete }) => {\n\n    const { login, user, linkWallet } = useLogin({\n        onComplete\n    })\n\n    const address = user?.wallet?.address;\n\n    return (\n        <Button \n        \n            onClick={() => { if(user) { linkWallet() } else { login() } }}\n            className=\"w-full !bg-[#770EFF] rounded-[40px]\"\n        >\n            Connect {address ? `${address.slice(0, 4)}...${address.slice(-4)}` : ''}\n        </Button>\n    )\n}\n\nexport default LogInButton"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AADA;;;AAJA;;;;AAYA,MAAM,cAA+B,CAAC,EAAE,UAAU,EAAE;;IAEhD,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD,EAAE;QACzC;IACJ;IAEA,MAAM,UAAU,MAAM,QAAQ;IAE9B,qBACI,6LAAC,8HAAA,CAAA,SAAM;QAEH,SAAS;YAAQ,IAAG,MAAM;gBAAE;YAAa,OAAO;gBAAE;YAAQ;QAAE;QAC5D,WAAU;;YACb;YACY,UAAU,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI,GAAG;;;;;;;AAGjF;GAjBM;;QAEkC,kIAAA,CAAA,WAAQ;;;KAF1C;uCAmBS"}},
    {"offset": {"line": 2177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-wallet-address.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\n\nimport LoginButton from '@/app/(app)/_components/log-in-button';\n\nimport ToolCard from '../tool-card';\n\nimport { usePrivy, Wallet } from '@privy-io/react-auth';\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetWalletAddressResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetWalletAddress: React.FC<Props> = ({ tool, prevToolAgent }) => {\n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Wallet Address...`}   \n            result={{\n                heading: (result: GetWalletAddressResultType) => result.body \n                    ? `Fetched Wallet Address`\n                    : \"No wallet address found\",\n                body: (result: GetWalletAddressResultType) => result.body \n                    ? `${result.body.address}` \n                    :  \"No wallet address found\"\n            }}\n            call={{\n                heading: \"Connect Wallet\",\n                body: (toolCallId: string) => <GetWalletAddressAction toolCallId={toolCallId} />\n            }}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nconst GetWalletAddressAction = ({ toolCallId }: { toolCallId: string }) => {\n\n    const { user } = usePrivy();\n\n    const { addToolResult, isLoading } = useChat();\n\n    useEffect(() => {\n        if(user?.wallet?.address && !isLoading) {\n            addToolResult(toolCallId, {\n                message: \"Wallet connected\",\n                body: {\n                    address: user.wallet.address\n                }\n            });\n        }\n    }, [user, isLoading]);\n\n    const onComplete = (wallet: Wallet) => {\n        addToolResult(toolCallId, {\n            message: \"Wallet connected\",\n            body: {\n                address: wallet.address\n            }\n        });\n    }\n\n    return (\n        <div className=\"flex flex-col items-center gap-2\">\n            <LoginButton onComplete={onComplete} />\n        </div>\n    )\n}\n\nexport default GetWalletAddress;"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AAIA;AAFA;;;;;;;;AAYA,MAAM,mBAAoC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAE9D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,yBAAyB,CAAC;QACxC,QAAQ;YACJ,SAAS,CAAC,SAAuC,OAAO,IAAI,GACtD,CAAC,sBAAsB,CAAC,GACxB;YACN,MAAM,CAAC,SAAuC,OAAO,IAAI,GACnD,GAAG,OAAO,IAAI,CAAC,OAAO,EAAE,GACvB;QACX;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,2BAAuB,6LAAC;oBAAuB,YAAY;;;;;;QACtE;QACA,eAAe;;;;;;AAG3B;KArBM;AAuBN,MAAM,yBAAyB,CAAC,EAAE,UAAU,EAA0B;;IAElE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,WAAQ,AAAD;IAExB,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4CAAE;YACN,IAAG,MAAM,QAAQ,WAAW,CAAC,WAAW;gBACpC,cAAc,YAAY;oBACtB,SAAS;oBACT,MAAM;wBACF,SAAS,KAAK,MAAM,CAAC,OAAO;oBAChC;gBACJ;YACJ;QACJ;2CAAG;QAAC;QAAM;KAAU;IAEpB,MAAM,aAAa,CAAC;QAChB,cAAc,YAAY;YACtB,SAAS;YACT,MAAM;gBACF,SAAS,OAAO,OAAO;YAC3B;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,wJAAA,CAAA,UAAW;YAAC,YAAY;;;;;;;;;;;AAGrC;GA/BM;;QAEe,sLAAA,CAAA,WAAQ;QAEY,+IAAA,CAAA,UAAO;;;MAJ1C;uCAiCS"}},
    {"offset": {"line": 2281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/save-token.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Loader2, Star } from 'lucide-react'\n\nimport { Skeleton } from '@/components/ui'\n\nimport { useSaveToken } from '@/hooks'\n\nimport { cn } from '@/lib/utils'\n\ninterface Props {\n    address: string\n    className?: string\n}\n\nconst SaveToken: React.FC<Props> = ({ address, className }) => {\n\n    const { saveToken, deleteToken, isLoading, isUpdating, isTokenSaved } = useSaveToken(address);\n\n    if(isLoading) {\n        return (\n            <Skeleton className=\"size-6\" />\n        )\n    }\n\n    const handleClick = async (e: React.MouseEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (isUpdating) {\n            return;\n        }\n\n        if (isTokenSaved) {\n            await deleteToken();\n            const searchInput = document.querySelector('input[placeholder=\"Search tokens...\"]') as HTMLInputElement;\n            if (searchInput) {\n                searchInput.focus();\n            }\n        } else {\n            await saveToken();\n        }\n    }\n\n    return (\n        <div \n            onClick={handleClick}\n            className={cn(\n                \"size-6 shrink-0 dark:hover:bg-neutral-700 hover:bg-neutral-200 rounded-md transition-all duration-300 flex items-center justify-center\", \n                isUpdating && \"pointer-events-none cursor-not-allowed opacity-50\",\n                className\n            )}\n        >\n            {\n                isUpdating ? (\n                    <Loader2 className=\"size-4 animate-spin\" />\n                ) : (\n                    <Star className={cn(\"size-4\", isTokenSaved && \"text-brand-600\")} />\n                )\n            }\n        </div>\n    )\n}\n\nexport default SaveToken;"],"names":[],"mappings":";;;;AAMA;AAEA;AAEA;AAFA;AAJA;AAAA;AAEA;;;AANA;;;;;AAiBA,MAAM,YAA6B,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;;IAEtD,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;IAErF,IAAG,WAAW;QACV,qBACI,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;;IAE5B;IAEA,MAAM,cAAc,OAAO;QACvB,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,IAAI,YAAY;YACZ;QACJ;QAEA,IAAI,cAAc;YACd,MAAM;YACN,MAAM,cAAc,SAAS,aAAa,CAAC;YAC3C,IAAI,aAAa;gBACb,YAAY,KAAK;YACrB;QACJ,OAAO;YACH,MAAM;QACV;IACJ;IAEA,qBACI,6LAAC;QACG,SAAS;QACT,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,0IACA,cAAc,qDACd;kBAIA,2BACI,6LAAC,oNAAA,CAAA,UAAO;YAAC,WAAU;;;;;iCAEnB,6LAAC,qMAAA,CAAA,OAAI;YAAC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,UAAU,gBAAgB;;;;;;;;;;;AAKlE;GA/CM;;QAEsE,8JAAA,CAAA,eAAY;;;KAFlF;uCAiDS"}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-trending-tokens.tsx"],"sourcesContent":["import React from 'react'\n\nimport { Card } from '@/components/ui';\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetTrendingTokensResultBodyType, GetTrendingTokensResultType } from '@/ai';\nimport type { TrendingToken } from '@/services/birdeye/types';\nimport SaveToken from '@/app/(app)/_components/save-token';\nimport Link from 'next/link';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTrendingTokens: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Trending Tokens...`}\n            result={{\n                heading: (result: GetTrendingTokensResultType) => result.body \n                    ? `Fetched Trending Tokens`\n                    : `Failed to fetch trending tokens`,\n                body: (result: GetTrendingTokensResultType) => result.body \n                    ? <TrendingTokens body={result.body} />\n                    :  \"No trending tokens found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst TrendingTokens = ({ body }: { body: GetTrendingTokensResultBodyType }) => {\n\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n            {body.tokens.map((token: TrendingToken) => (\n                <TokenCard\n                    key={token.address} \n                    token={token} \n                />\n            ))}\n        </div>\n    )\n}\n\nconst TokenCard = ({ token }: { token: TrendingToken }) => {\n    return (\n        <Link href={`/token/${token.address}`}>\n            <Card className=\"flex flex-col gap-2 p-2 justify-center hover:border-brand-600 dark:hover:border-brand-600 transition-all duration-300\">\n                <div className=\"flex flex-row items-center gap-2 justify-between\">\n                    <div className=\"flex flex-row items-center gap-2\">\n                        <img \n                            src={token.logoURI} \n                            alt={token.name} \n                            className=\"w-10 h-10 rounded-full\" \n                        />\n                        <div className=\"flex flex-col\">\n                            <p className=\"text-sm font-bold\">{token.name} ({token.symbol})</p>\n                            <p className=\"text-xs text-muted-foreground\">${token.price.toLocaleString(undefined, { maximumFractionDigits: 5})} <span className={token.price24hChangePercent > 0 ? 'text-green-500' : 'text-red-500'}>({token.price24hChangePercent > 0 ? '+' : ''}{token.price24hChangePercent.toLocaleString(undefined, { maximumFractionDigits: 2 })}%)</span></p>\n                        </div>\n                    </div>\n                    <SaveToken address={token.address} />\n                </div>\n                <div className=\"flex flex-col\">\n                    <p className=\"text-xs text-muted-foreground\">24h Volume: ${token.volume24hUSD.toLocaleString()}</p>\n                </div>\n            </Card>\n        </Link>\n    )\n}\n\nexport default GetTrendingTokens;"],"names":[],"mappings":";;;;AAEA;AAEA;AAKA;AACA;AARA;;;;;;AAeA,MAAM,oBAAqC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAG/D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,0BAA0B,CAAC;QACzC,QAAQ;YACJ,SAAS,CAAC,SAAwC,OAAO,IAAI,GACvD,CAAC,uBAAuB,CAAC,GACzB,CAAC,+BAA+B,CAAC;YACvC,MAAM,CAAC,SAAwC,OAAO,IAAI,iBACpD,6LAAC;oBAAe,MAAM,OAAO,IAAI;;;;;6BAChC;QACX;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KApBM;AAsBN,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAA6C;IAEvE,qBACI,6LAAC;QAAI,WAAU;kBACV,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,sBACd,6LAAC;gBAEG,OAAO;eADF,MAAM,OAAO;;;;;;;;;;AAMtC;MAZM;AAcN,MAAM,YAAY,CAAC,EAAE,KAAK,EAA4B;IAClD,qBACI,6LAAC,+JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;kBACjC,cAAA,6LAAC,4HAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCACG,KAAK,MAAM,OAAO;oCAClB,KAAK,MAAM,IAAI;oCACf,WAAU;;;;;;8CAEd,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAE,WAAU;;gDAAqB,MAAM,IAAI;gDAAC;gDAAG,MAAM,MAAM;gDAAC;;;;;;;sDAC7D,6LAAC;4CAAE,WAAU;;gDAAgC;gDAAE,MAAM,KAAK,CAAC,cAAc,CAAC,WAAW;oDAAE,uBAAuB;gDAAC;gDAAG;8DAAC,6LAAC;oDAAK,WAAW,MAAM,qBAAqB,GAAG,IAAI,mBAAmB;;wDAAgB;wDAAE,MAAM,qBAAqB,GAAG,IAAI,MAAM;wDAAI,MAAM,qBAAqB,CAAC,cAAc,CAAC,WAAW;4DAAE,uBAAuB;wDAAE;wDAAG;;;;;;;;;;;;;;;;;;;;;;;;;sCAGnV,6LAAC,kJAAA,CAAA,UAAS;4BAAC,SAAS,MAAM,OAAO;;;;;;;;;;;;8BAErC,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBAAE,WAAU;;4BAAgC;4BAAc,MAAM,YAAY,CAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;;AAKhH;MAxBM;uCA0BS"}},
    {"offset": {"line": 2558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2564, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/address.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react'\n\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui';\n\nimport { cn } from '@/lib/utils';\nimport { truncateAddress } from '@/lib/wallet';\n\ninterface Props {\n    address: string;\n    className?: string;\n}\n\nconst Address: React.FC<Props> = ({ address, className }) => {\n    const [copied, setCopied] = useState(false);\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(address);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n    };\n\n    return (\n        <TooltipProvider>\n            <Tooltip delayDuration={0}>\n                <TooltipTrigger asChild>\n                    <p \n                        className={cn(\"text-sm text-muted-foreground cursor-pointer hover:bg-neutral-200 dark:hover:bg-neutral-700 rounded-md w-fit px-1\", className)}\n                        onClick={handleCopy}\n                    >\n                        {truncateAddress(address)}\n                    </p>\n                </TooltipTrigger>\n                <TooltipContent side=\"bottom\">\n                    {\n                        copied ? \"Copied to clipboard\" : \"Copy to clipboard\"\n                    }\n                </TooltipContent>\n            </Tooltip>\n        </TooltipProvider>\n    )\n}\n\nexport default Address;"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AACA;AAHA;;;AAJA;;;;;AAcA,MAAM,UAA2B,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;;IACpD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACf,UAAU,SAAS,CAAC,SAAS,CAAC;QAC9B,UAAU;QACV,WAAW,IAAM,UAAU,QAAQ;IACvC;IAEA,qBACI,6LAAC,+HAAA,CAAA,kBAAe;kBACZ,cAAA,6LAAC,+HAAA,CAAA,UAAO;YAAC,eAAe;;8BACpB,6LAAC,+HAAA,CAAA,iBAAc;oBAAC,OAAO;8BACnB,cAAA,6LAAC;wBACG,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,qHAAqH;wBACnI,SAAS;kCAER,CAAA,GAAA,gHAAA,CAAA,kBAAe,AAAD,EAAE;;;;;;;;;;;8BAGzB,6LAAC,+HAAA,CAAA,iBAAc;oBAAC,MAAK;8BAEb,SAAS,wBAAwB;;;;;;;;;;;;;;;;;AAMzD;GA5BM;KAAA;uCA8BS"}},
    {"offset": {"line": 2636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/result/links.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport Image from 'next/image';\n\nimport { FaDiscord, FaTelegram, FaXTwitter } from 'react-icons/fa6';\n\nimport { Globe } from 'lucide-react'\n\nimport { OptionalLink } from '@/components/ui';\n\nimport { cn } from '@/lib/utils';\n\nimport type { TokenOverview } from '@/services/birdeye/types';\n\nconst SOCIAL_LINKS = [\n    {\n        id: 'website',\n        icon: <Globe className=\"h-4 w-4\" />\n    },\n    {\n        id: 'twitter',\n        icon: <FaXTwitter className=\"h-4 w-4\" />\n    },\n    {\n        id: 'coingeckoId',\n        icon: (\n            <Image \n                src=\"/logos/coingecko.png\" \n                alt=\"Coingecko\" \n                width={16} \n                height={16} \n                className=\"h-4 w-4\"\n            />\n        )\n    },\n    {\n        id: 'discord',\n        icon: <FaDiscord className=\"h-4 w-4\" />\n    },\n    {\n        id: 'telegram',\n        icon: <FaTelegram className=\"h-4 w-4\" />\n    }\n] as const;\n\n\ninterface Props {\n    token: TokenOverview\n}\n\nconst Links: React.FC<Props> = ({ token }) => {\n    return (\n        <div className=\"flex items-center gap-2\">\n            {SOCIAL_LINKS.map((link) => (\n                <OptionalLink \n                    key={link.id}\n                    href={(link.id === \"coingeckoId\" && token?.extensions?.[link.id]) \n                        ? `https://www.coingecko.com/en/coins/${token.extensions?.[link.id]}` \n                        : token?.extensions?.[link.id]} \n                    target=\"_blank\"\n                >\n                    <div \n                        className={cn(\n                            \"p-1\",\n                            token?.extensions?.[link.id] ? \"hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-full\" : \"opacity-25\"\n                        )}\n                    >\n                        {link.icon}\n                    </div>\n                </OptionalLink>\n            ))}\n        </div>\n    )\n}\n\nexport default Links"],"names":[],"mappings":";;;;AAIA;AAMA;AAEA;AAJA;AAFA;AAIA;AAVA;;;;;;;AAgBA,MAAM,eAAe;IACjB;QACI,IAAI;QACJ,oBAAM,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;IAC3B;IACA;QACI,IAAI;QACJ,oBAAM,6LAAC,kJAAA,CAAA,aAAU;YAAC,WAAU;;;;;;IAChC;IACA;QACI,IAAI;QACJ,oBACI,6LAAC,gIAAA,CAAA,UAAK;YACF,KAAI;YACJ,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAU;;;;;;IAGtB;IACA;QACI,IAAI;QACJ,oBAAM,6LAAC,kJAAA,CAAA,YAAS;YAAC,WAAU;;;;;;IAC/B;IACA;QACI,IAAI;QACJ,oBAAM,6LAAC,kJAAA,CAAA,aAAU;YAAC,WAAU;;;;;;IAChC;CACH;AAOD,MAAM,QAAyB,CAAC,EAAE,KAAK,EAAE;IACrC,qBACI,6LAAC;QAAI,WAAU;kBACV,aAAa,GAAG,CAAC,CAAC,qBACf,6LAAC,wIAAA,CAAA,eAAY;gBAET,MAAM,AAAC,KAAK,EAAE,KAAK,iBAAiB,OAAO,YAAY,CAAC,KAAK,EAAE,CAAC,GAC1D,CAAC,mCAAmC,EAAE,MAAM,UAAU,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,GACnE,OAAO,YAAY,CAAC,KAAK,EAAE,CAAC;gBAClC,QAAO;0BAEP,cAAA,6LAAC;oBACG,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,OACA,OAAO,YAAY,CAAC,KAAK,EAAE,CAAC,GAAG,gEAAgE;8BAGlG,KAAK,IAAI;;;;;;eAZT,KAAK,EAAE;;;;;;;;;;AAkBhC;KAvBM;uCAyBS"}},
    {"offset": {"line": 2747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2753, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/result/heading.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport Link from 'next/link'\n\nimport { Button, Card } from '@/components/ui'\n\nimport Address from '@/app/_components/address'\n\nimport SaveToken from '@/app/(app)/_components/save-token'\n\nimport Links from './links'\n\nimport { cn } from '@/lib/utils'\n\nimport type { TokenOverview } from '@/services/birdeye/types'\n\n\ninterface Props {\n    token: TokenOverview,\n}\n\nconst GetTokenDataResultHeading: React.FC<Props> = ({ token }) => {\n    return (\n        <Card className=\"p-2 flex flex-col md:flex-row justify-between gap-4\">\n            <div className=\"flex items-center gap-2\">\n                <img \n                    src={token.logoURI} \n                    alt={token.name} \n                    className=\"w-10 h-10 rounded-full\" \n                />\n                <div className=\"flex flex-col\">\n                    <div className=\"flex flex-col md:flex-row md:items-center md:gap-2\">\n                        <h1 className=\"text-xl font-bold\">{token.name} ({token.symbol})</h1>\n                        <Address address={token.address} />\n                        <Link href={`/token/${token.address}`}>\n                            <Button variant=\"brandOutline\" className=\"p-1 h-6 text-xs w-fit\">\n                                See More\n                            </Button>\n                        </Link>\n                        <SaveToken address={token.address} />\n                    </div>\n                    <p className=\"text-sm font-semibold flex items-center gap-1\">\n                        ${token.price.toLocaleString(undefined, { maximumFractionDigits: 5 })} \n                        {\n                            token.priceChange24hPercent && (\n                                <span \n                                    className={cn(\n                                        \"text-xs\",\n                                        token.priceChange24hPercent > 0 ? \"text-green-500\" : \"text-red-500\"\n                                    )}\n                                >\n                                    {token.priceChange24hPercent ? `(${token.priceChange24hPercent > 0 ? \"+\" : \"\"}${token.priceChange24hPercent.toFixed(2)}%)` : \"\"}\n                                </span>\n                            )\n                        }\n                    </p>\n                </div>\n            </div>\n            <Links token={token} />\n        </Card>\n    )\n}\n\nexport default GetTokenDataResultHeading;"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAEA;AAEA;AAEA;AARA;AAAA;AANA;;;;;;;;AAuBA,MAAM,4BAA6C,CAAC,EAAE,KAAK,EAAE;IACzD,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,KAAK,MAAM,OAAO;wBAClB,KAAK,MAAM,IAAI;wBACf,WAAU;;;;;;kCAEd,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAG,WAAU;;4CAAqB,MAAM,IAAI;4CAAC;4CAAG,MAAM,MAAM;4CAAC;;;;;;;kDAC9D,6LAAC,iIAAA,CAAA,UAAO;wCAAC,SAAS,MAAM,OAAO;;;;;;kDAC/B,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAM,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;kDACjC,cAAA,6LAAC,8HAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAe,WAAU;sDAAwB;;;;;;;;;;;kDAIrE,6LAAC,kJAAA,CAAA,UAAS;wCAAC,SAAS,MAAM,OAAO;;;;;;;;;;;;0CAErC,6LAAC;gCAAE,WAAU;;oCAAgD;oCACvD,MAAM,KAAK,CAAC,cAAc,CAAC,WAAW;wCAAE,uBAAuB;oCAAE;oCAE/D,MAAM,qBAAqB,kBACvB,6LAAC;wCACG,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,WACA,MAAM,qBAAqB,GAAG,IAAI,mBAAmB;kDAGxD,MAAM,qBAAqB,GAAG,CAAC,CAAC,EAAE,MAAM,qBAAqB,GAAG,IAAI,MAAM,KAAK,MAAM,qBAAqB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;0BAOrJ,6LAAC,uMAAA,CAAA,UAAK;gBAAC,OAAO;;;;;;;;;;;;AAG1B;KAxCM;uCA0CS"}},
    {"offset": {"line": 2898, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2904, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/result/stats.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\n\nimport { Card } from '@/components/ui'\n\nimport type { TokenOverview } from '@/services/birdeye/types'\n\ninterface Props {\n    token: TokenOverview\n}\n\nconst Stats: React.FC<Props> = ({ token }) => {\n    return (\n        <Card className='p-2 flex flex-col gap-2'>\n            <h2 className=\"text-lg font-semibold\">\n                Market Stats\n            </h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-2 gap-2\">\n                <div className=\"flex flex-col\">\n                    <h3 className=\"text-sm font-semibold\">\n                        Market Cap\n                    </h3>\n                    <p>${token.mc.toLocaleString(undefined, { maximumFractionDigits: 2 })}</p>\n                </div>\n                <div className=\"flex flex-col\">\n                    <h3 className=\"text-sm font-semibold\">\n                        Liquidity\n                    </h3>\n                    <p>${token.liquidity.toLocaleString(undefined, { maximumFractionDigits: 2 })}</p>\n                </div>\n                <div className=\"flex flex-col\">\n                    <h3 className=\"text-sm font-semibold\">\n                        # of Holders\n                    </h3>\n                    <p>{token.holder.toLocaleString(undefined, { maximumFractionDigits: 0 })}</p>\n                </div>\n                <div className=\"flex flex-col\">\n                    <h3 className=\"text-sm font-semibold\">\n                        # of Markets\n                    </h3>\n                    <p>{token.numberMarkets.toLocaleString(undefined, { maximumFractionDigits: 0 })}</p>\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default Stats"],"names":[],"mappings":";;;;AAIA;AAAA;AAJA;;;AAYA,MAAM,QAAyB,CAAC,EAAE,KAAK,EAAE;IACrC,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BAGtC,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CAGtC,6LAAC;;oCAAE;oCAAE,MAAM,EAAE,CAAC,cAAc,CAAC,WAAW;wCAAE,uBAAuB;oCAAE;;;;;;;;;;;;;kCAEvE,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CAGtC,6LAAC;;oCAAE;oCAAE,MAAM,SAAS,CAAC,cAAc,CAAC,WAAW;wCAAE,uBAAuB;oCAAE;;;;;;;;;;;;;kCAE9E,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CAGtC,6LAAC;0CAAG,MAAM,MAAM,CAAC,cAAc,CAAC,WAAW;oCAAE,uBAAuB;gCAAE;;;;;;;;;;;;kCAE1E,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CAGtC,6LAAC;0CAAG,MAAM,aAAa,CAAC,cAAc,CAAC,WAAW;oCAAE,uBAAuB;gCAAE;;;;;;;;;;;;;;;;;;;;;;;;AAKjG;KAlCM;uCAoCS"}},
    {"offset": {"line": 3058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3064, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/buy-sell.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\ninterface Props {\n    buy: number;\n    sell: number;\n    prefix?: string;\n    suffix?: string;\n}\n\nconst BuySell: React.FC<Props> = ({ buy, sell, prefix, suffix }) => {\n    return (\n        <div className=\"flex flex-col w-full gap-1\">\n            <div className=\"flex justify-between text-xs\">\n                <span className=\"text-red-500\">\n                    {((sell / (buy + sell)) * 100).toFixed(2)}%\n                </span>\n                <span className=\"text-green-500\">\n                    {((buy / (buy + sell)) * 100).toFixed(2)}%\n                </span>\n            </div>\n            <div className=\"flex w-full h-1 bg-neutral-800 rounded-full overflow-hidden\">\n                <div \n                    className=\"bg-red-500 h-full\"\n                    style={{ \n                        width: `${(sell / (buy + sell)) * 100}%`\n                    }}\n                />\n                <div \n                    className=\"bg-green-500 h-full\"\n                    style={{ \n                        width: `${(buy / (buy + sell)) * 100}%`\n                    }}\n                />\n            </div>\n            <div className=\"flex justify-between text-xs\">\n                <span className=\"text-red-500\">\n                    {prefix}{sell.toLocaleString(undefined, { maximumFractionDigits: 0 })}{suffix}\n                </span>\n                <span className=\"text-green-500\">\n                    {prefix}{buy.toLocaleString(undefined, { maximumFractionDigits: 0 })}{suffix}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default BuySell"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,UAA2B,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;IAC3D,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAK,WAAU;;4BACX,CAAC,AAAC,OAAO,CAAC,MAAM,IAAI,IAAK,GAAG,EAAE,OAAO,CAAC;4BAAG;;;;;;;kCAE9C,6LAAC;wBAAK,WAAU;;4BACX,CAAC,AAAC,MAAM,CAAC,MAAM,IAAI,IAAK,GAAG,EAAE,OAAO,CAAC;4BAAG;;;;;;;;;;;;;0BAGjD,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,WAAU;wBACV,OAAO;4BACH,OAAO,GAAG,AAAC,OAAO,CAAC,MAAM,IAAI,IAAK,IAAI,CAAC,CAAC;wBAC5C;;;;;;kCAEJ,6LAAC;wBACG,WAAU;wBACV,OAAO;4BACH,OAAO,GAAG,AAAC,MAAM,CAAC,MAAM,IAAI,IAAK,IAAI,CAAC,CAAC;wBAC3C;;;;;;;;;;;;0BAGR,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAK,WAAU;;4BACX;4BAAQ,KAAK,cAAc,CAAC,WAAW;gCAAE,uBAAuB;4BAAE;4BAAI;;;;;;;kCAE3E,6LAAC;wBAAK,WAAU;;4BACX;4BAAQ,IAAI,cAAc,CAAC,WAAW;gCAAE,uBAAuB;4BAAE;4BAAI;;;;;;;;;;;;;;;;;;;AAK1F;KAnCM;uCAqCS"}},
    {"offset": {"line": 3185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3191, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/result/24hr-stats.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\n\nimport { Card } from '@/components/ui'\n\nimport BuySell from '../../../utils/buy-sell'\n\nimport type { TokenOverview } from '@/services/birdeye/types'\n\ninterface Props {\n    token: TokenOverview\n}\n\nconst TwentyFourHrStats: React.FC<Props> = ({ token }) => {\n    return (\n        <Card className='p-2 flex flex-col gap-2'>\n            <h2 className=\"text-lg font-semibold\">\n                Volume (24hr)\n            </h2>\n            <BuySell\n                buy={token.vBuy24hUSD}\n                sell={token.vSell24hUSD}\n                prefix=\"$\"\n            />\n            <div className=\"flex flex-col\">\n                <h3 className=\"text-sm font-semibold\">\n                    Unique Traders\n                </h3>\n                <p>{token.uniqueWallet24h.toLocaleString()} Traders</p>\n            </div>\n        </Card>\n    )\n}\n\nexport default TwentyFourHrStats"],"names":[],"mappings":";;;;AAIA;AAEA;AAFA;AAJA;;;;AAcA,MAAM,oBAAqC,CAAC,EAAE,KAAK,EAAE;IACjD,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BAGtC,6LAAC,0KAAA,CAAA,UAAO;gBACJ,KAAK,MAAM,UAAU;gBACrB,MAAM,MAAM,WAAW;gBACvB,QAAO;;;;;;0BAEX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCAGtC,6LAAC;;4BAAG,MAAM,eAAe,CAAC,cAAc;4BAAG;;;;;;;;;;;;;;;;;;;AAI3D;KAnBM;uCAqBS"}},
    {"offset": {"line": 3264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/result/index.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport GetTokenDataResultHeading from './heading';\nimport Stats from './stats';\nimport TwentyFourHrStats from './24hr-stats';\n\nimport type { GetTokenDataResultBodyType } from '@/ai';\n\ninterface Props {\n    body: GetTokenDataResultBodyType\n}\n\nconst GetTokenDataResult: React.FC<Props> = ({ body }) => {\n    const { token } = body;\n\n    return (\n        <div className=\"flex flex-col gap-2 w-full\">\n            <GetTokenDataResultHeading token={token} />\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                <Stats\n                    token={token}\n                />\n                <TwentyFourHrStats\n                    token={token}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default GetTokenDataResult;\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AANA;;;;;AAcA,MAAM,qBAAsC,CAAC,EAAE,IAAI,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,yMAAA,CAAA,UAAyB;gBAAC,OAAO;;;;;;0BAClC,6LAAC;gBAAI,WAAU;;kCACX,6LAAC,uMAAA,CAAA,UAAK;wBACF,OAAO;;;;;;kCAEX,6LAAC,+MAAA,CAAA,UAAiB;wBACd,OAAO;;;;;;;;;;;;;;;;;;AAK3B;KAhBM;uCAkBS"}},
    {"offset": {"line": 3331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3337, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-data/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../tool-card';\n\nimport GetTokenDataResult from './result';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetTokenDataResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTokenData: React.FC<Props> = ({ tool, prevToolAgent }) => {\n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Token Data...`}\n            result={{\n                heading: (result: GetTokenDataResultType) => result.body \n                    ? `Fetched ${result.body.token.name || \"Token\"} Data`\n                    : `Failed to fetch token data`,\n                body: (result: GetTokenDataResultType) => result.body \n                    ? <GetTokenDataResult \n                        body={result.body}\n                    />\n                    :  \"No token data found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className='w-full'\n        />\n    )\n}\n\nexport default GetTokenData;"],"names":[],"mappings":";;;;AAEA;AAEA;;;;AAUA,MAAM,eAAgC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAE1D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,qBAAqB,CAAC;QACpC,QAAQ;YACJ,SAAS,CAAC,SAAmC,OAAO,IAAI,GAClD,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,KAAK,CAAC,GACnD,CAAC,0BAA0B,CAAC;YAClC,MAAM,CAAC,SAAmC,OAAO,IAAI,iBAC/C,6LAAC,uMAAA,CAAA,UAAkB;oBACjB,MAAM,OAAO,IAAI;;;;;6BAElB;QACX;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KArBM;uCAuBS"}},
    {"offset": {"line": 3376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3382, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/swap/swap-result.tsx"],"sourcesContent":["import React from 'react';\n\nconst SwapResult: React.FC = () => {\n\n    return (\n        <p className=\"text-xs text-muted-foreground\">\n            Swapped Successfully\n        </p>\n    );\n};\n\nexport default SwapResult; "],"names":[],"mappings":";;;;;AAEA,MAAM,aAAuB;IAEzB,qBACI,6LAAC;QAAE,WAAU;kBAAgC;;;;;;AAIrD;KAPM;uCASS"}},
    {"offset": {"line": 3404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3410, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/token-select.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport { ChevronsUpDown } from 'lucide-react';\n\nimport { \n    Button,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    Input,\n    Skeleton,\n} from '@/components/ui'\n\nimport SaveToken from '../(app)/_components/save-token';\n\nimport { useTokenSearch } from '@/hooks/search';\n\nimport { cn } from '@/lib/utils';\n\nimport { Token } from '@/db/types';\n\ninterface Props {\n    value: Token | null,\n    onChange: (token: Token | null) => void,\n    priorityTokens?: string[]\n}\n\nconst TokenSelect: React.FC<Props> = ({ value, onChange, priorityTokens = [] }) => {\n\n    const [open, setOpen] = useState(false);\n\n    const [input, setInput] = useState(\"\");\n\n    const { results, loading } = useTokenSearch(input);\n\n    const sortedResults = React.useMemo(() => {\n        if (!results) return [];\n        \n        return results.sort((a, b) => {\n            // First check for priority tokens\n            const aIndex = priorityTokens.indexOf(a.id);\n            const bIndex = priorityTokens.indexOf(b.id);\n            \n            if (aIndex !== -1 && bIndex !== -1) return aIndex - bIndex;\n            if (aIndex !== -1) return -1;\n            if (bIndex !== -1) return 1;\n\n            // keep order\n            return 0;\n        });\n    }, [results, priorityTokens, input]);\n\n    return (\n        <Popover open={open} onOpenChange={setOpen}>\n            <PopoverTrigger asChild>\n                <div\n                    className=\"w-fit shrink-0 flex items-center bg-neutral-200 dark:bg-neutral-700 hover:bg-neutral-300 dark:hover:bg-neutral-600 rounded-md px-2 py-1 gap-2 cursor-pointer transition-colors duration-200\"\n                >\n                    {\n                        value ? (\n                            <img \n                                src={value.logoURI || '/placeholder.png'} \n                                alt={value.name} \n                                className=\"w-6 h-6 rounded-full\" \n                            />\n                        ) : (\n                            <div className=\"w-6 h-6 rounded-full bg-neutral-200 dark:bg-neutral-600\" />\n                        )\n                    }\n                    <p className={cn(\n                        \"text-xs font-bold\",\n                        value ? \"opacity-100\" : \"opacity-50\"\n                    )}>\n                        {value ? value.symbol : \"Select\"}\n                    </p>\n                    <ChevronsUpDown className=\"h-4 w-4 shrink-0 opacity-50\" />\n                </div>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-[200px] p-2 flex flex-col gap-2\">\n                <Input\n                    placeholder=\"Search tokens...\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                />\n                {\n                    loading ? (\n                        <Skeleton className=\"h-48 w-full\" />\n                    ) : (\n                        <div className=\"flex flex-col gap-2 max-h-[300px] overflow-y-scroll\">\n                            {\n                                input ? (\n                                    sortedResults.length === 0 ? (\n                                        <p className=\"text-xs text-neutral-500\">\n                                            No results for &quot;{input}&quot;\n                                        </p>\n                                    ) : (\n                                        sortedResults.map((token) => (\n                                            <Button \n                                                key={token.id}\n                                                variant=\"ghost\"\n                                                className=\"w-full justify-start px-1\"\n                                                onClick={() => {\n                                                    setOpen(false);\n                                                    onChange(token);\n                                                }}\n                                            >\n                                                <img \n                                                    src={token.logoURI} \n                                                    alt={token.name} \n                                                    className=\"w-6 h-6 rounded-full\" \n                                                />\n                                                <p className=\"text-sm font-bold\">\n                                                    {token.symbol}\n                                                </p>\n                                                <SaveToken address={token.id} />\n                                            </Button>\n                                        ))\n                                    )\n                                ) : (\n                                    <p className=\"text-xs text-neutral-500\">\n                                        Start typing to search for a token\n                                    </p>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </PopoverContent>\n        </Popover>\n    )\n}\n\nexport default TokenSelect"],"names":[],"mappings":";;;;AAEA;AAIA;AASA;AAEA;AAEA;AAFA;AAXA;AAFA;AAEA;AAAA;AAAA;;;AANA;;;;;;;AA6BA,MAAM,cAA+B,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,iBAAiB,EAAE,EAAE;;IAE1E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD,EAAE;IAE5C,MAAM,gBAAgB,6JAAA,CAAA,UAAK,CAAC,OAAO;8CAAC;YAChC,IAAI,CAAC,SAAS,OAAO,EAAE;YAEvB,OAAO,QAAQ,IAAI;sDAAC,CAAC,GAAG;oBACpB,kCAAkC;oBAClC,MAAM,SAAS,eAAe,OAAO,CAAC,EAAE,EAAE;oBAC1C,MAAM,SAAS,eAAe,OAAO,CAAC,EAAE,EAAE;oBAE1C,IAAI,WAAW,CAAC,KAAK,WAAW,CAAC,GAAG,OAAO,SAAS;oBACpD,IAAI,WAAW,CAAC,GAAG,OAAO,CAAC;oBAC3B,IAAI,WAAW,CAAC,GAAG,OAAO;oBAE1B,aAAa;oBACb,OAAO;gBACX;;QACJ;6CAAG;QAAC;QAAS;QAAgB;KAAM;IAEnC,qBACI,6LAAC,+HAAA,CAAA,UAAO;QAAC,MAAM;QAAM,cAAc;;0BAC/B,6LAAC,+HAAA,CAAA,iBAAc;gBAAC,OAAO;0BACnB,cAAA,6LAAC;oBACG,WAAU;;wBAGN,sBACI,6LAAC;4BACG,KAAK,MAAM,OAAO,IAAI;4BACtB,KAAK,MAAM,IAAI;4BACf,WAAU;;;;;iDAGd,6LAAC;4BAAI,WAAU;;;;;;sCAGvB,6LAAC;4BAAE,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACX,qBACA,QAAQ,gBAAgB;sCAEvB,QAAQ,MAAM,MAAM,GAAG;;;;;;sCAE5B,6LAAC,iOAAA,CAAA,iBAAc;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGlC,6LAAC,+HAAA,CAAA,iBAAc;gBAAC,WAAU;;kCACtB,6LAAC,6HAAA,CAAA,QAAK;wBACF,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;oBAGxC,wBACI,6LAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;6CAEpB,6LAAC;wBAAI,WAAU;kCAEP,QACI,cAAc,MAAM,KAAK,kBACrB,6LAAC;4BAAE,WAAU;;gCAA2B;gCACd;gCAAM;;;;;;mCAGhC,cAAc,GAAG,CAAC,CAAC,sBACf,6LAAC,8HAAA,CAAA,SAAM;gCAEH,SAAQ;gCACR,WAAU;gCACV,SAAS;oCACL,QAAQ;oCACR,SAAS;gCACb;;kDAEA,6LAAC;wCACG,KAAK,MAAM,OAAO;wCAClB,KAAK,MAAM,IAAI;wCACf,WAAU;;;;;;kDAEd,6LAAC;wCAAE,WAAU;kDACR,MAAM,MAAM;;;;;;kDAEjB,6LAAC,kJAAA,CAAA,UAAS;wCAAC,SAAS,MAAM,EAAE;;;;;;;+BAhBvB,MAAM,EAAE;;;;sDAqBzB,6LAAC;4BAAE,WAAU;sCAA2B;;;;;;;;;;;;;;;;;;;;;;;AAW5E;GAvGM;;QAM2B,4IAAA,CAAA,iBAAc;;;KANzC;uCAyGS"}},
    {"offset": {"line": 3616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3622, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/swap/token-balance.tsx"],"sourcesContent":["'use client'\n\nimport { Button, Skeleton } from '@/components/ui'\nimport { useTokenBalance } from '@/hooks'\nimport { Wallet } from 'lucide-react'\nimport React from 'react'\n\ninterface Props {\n    address: string\n    tokenAddress: string\n    tokenSymbol: string,\n    setAmount?: (amount: string) => void,\n    digits?: number\n}\n\nconst TokenBalance: React.FC<Props> = ({ address, tokenAddress, tokenSymbol, setAmount, digits = 2 }) => {\n\n    const { balance, isLoading } = useTokenBalance(tokenAddress, address);\n\n    if (isLoading) return <Skeleton className=\"w-16 h-4\" />;\n\n    return (\n        <div className=\"flex items-center gap-2 text-neutral-500 dark:text-neutral-400\">\n            <Wallet className=\"w-3 h-3\" />\n            <p className=\"text-xs\">\n                {balance.toLocaleString(undefined, { maximumFractionDigits: digits })} {tokenSymbol}\n            </p>\n            {\n                setAmount && (\n                    <div className=\"flex items-center gap-2\">\n                        <Button\n                            variant=\"outline\"\n                            className=\"text-[10px] px-1 py-0.5 h-fit w-fit\"\n                            onClick={() => setAmount((balance / 2).toString())}\n                        >\n                            Half\n                        </Button>\n                        <Button\n                            variant=\"outline\"\n                            className=\"text-[10px] px-1 py-0.5 h-fit w-fit\"\n                            onClick={() => setAmount(balance.toString())}\n                        >\n                            Max\n                        </Button>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default TokenBalance"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAFA;AAAA;;;AAFA;;;;AAeA,MAAM,eAAgC,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE;;IAEhG,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE,cAAc;IAE7D,IAAI,WAAW,qBAAO,6LAAC,gIAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IAE1C,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;0BAClB,6LAAC;gBAAE,WAAU;;oBACR,QAAQ,cAAc,CAAC,WAAW;wBAAE,uBAAuB;oBAAO;oBAAG;oBAAE;;;;;;;YAGxE,2BACI,6LAAC;gBAAI,WAAU;;kCACX,6LAAC,8HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,WAAU;wBACV,SAAS,IAAM,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ;kCAClD;;;;;;kCAGD,6LAAC,8HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,WAAU;wBACV,SAAS,IAAM,UAAU,QAAQ,QAAQ;kCAC5C;;;;;;;;;;;;;;;;;;AAQzB;GAlCM;;QAE6B,yJAAA,CAAA,kBAAe;;;KAF5C;uCAoCS"}},
    {"offset": {"line": 3720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3726, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/token-display.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nimport { Token } from '@/db/types'\n\ninterface Props {\n    token: Token\n}\n\nconst TokenDisplay: React.FC<Props> = ({ token }) => {\n    return (\n        <div\n            className=\"w-fit shrink-0 flex items-center bg-neutral-200 dark:bg-neutral-700 rounded-md px-2 py-1 gap-2 cursor-pointer transition-colors duration-200\"\n        >\n            <img \n                src={token.logoURI}\n                alt={token.name} \n                className=\"w-6 h-6 rounded-full\" \n            />\n            <p className={cn(\n                \"text-xs font-bold\",\n                \"opacity-100\"\n            )}>\n                {token.symbol}\n            </p>\n        </div>\n    )\n}\n\nexport default TokenDisplay"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAYA,MAAM,eAAgC,CAAC,EAAE,KAAK,EAAE;IAC5C,qBACI,6LAAC;QACG,WAAU;;0BAEV,6LAAC;gBACG,KAAK,MAAM,OAAO;gBAClB,KAAK,MAAM,IAAI;gBACf,WAAU;;;;;;0BAEd,6LAAC;gBAAE,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACX,qBACA;0BAEC,MAAM,MAAM;;;;;;;;;;;;AAI7B;KAlBM;uCAoBS"}},
    {"offset": {"line": 3769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3775, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/swap/token-input.tsx"],"sourcesContent":["'use client'\n\nimport TokenSelect from '@/app/_components/token-select'\nimport { Token } from '@/db/types/token'\nimport React from 'react'\nimport { cn } from '@/lib/utils'\nimport TokenBalance from './token-balance'\nimport { usePrice } from '@/hooks/queries/price'\nimport { Skeleton } from '@/components/ui'\nimport TokenDisplay from '@/app/_components/token-display'\n\ninterface Props {\n    label: string,\n    amount: string,\n    onChange?: (amount: string) => void,\n    token: Token | null,\n    onChangeToken?: (token: Token | null) => void,\n    address?: string,\n}\n\nconst TokenInput: React.FC<Props> = ({ label, amount, onChange, token, onChangeToken, address }) => {\n\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    return (\n        <div className={cn(\n            \"flex flex-col border border-transparent rounded-md p-2 w-full transition-colors bg-neutral-100 dark:bg-neutral-700 gap-2\",\n            isFocused && \"border-brand-600\"\n        )}>\n            <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm font-bold\">\n                    {label}\n                </p>\n                {\n                    token && address && (\n                        <TokenBalance\n                            address={address}\n                            tokenAddress={token.id}\n                            tokenSymbol={token.symbol}\n                            setAmount={onChange}\n                        />\n                    )\n                }\n            </div>\n            <div className={cn(\n                \"flex items-center w-full\",\n            )}>\n                <div className=\"w-full\">\n                    <input \n                        type=\"number\" \n                        value={amount}\n                        onChange={(e) => onChange && onChange(e.target.value)} \n                        onFocus={() => setIsFocused(true)}\n                        onBlur={() => setIsFocused(false)}\n                        className=\"w-full bg-transparent border-none outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                        disabled={!onChange}\n                        placeholder=\"0.00\"\n                    />\n                    {\n                        token && (\n                            <TokenInputValue\n                                amount={amount}\n                                token={token}\n                            />\n                        )\n                    }\n                </div>\n                {\n                    onChangeToken ? (\n                        <TokenSelect\n                            value={token}\n                            onChange={onChangeToken}\n                        />\n                    ) : (\n                        token && (\n                            <TokenDisplay token={token} />\n                        )\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const TokenInputValue = ({ amount, token }: { amount: string, token: Token }) => {\n    const { data: price, isLoading: isPriceLoading } = usePrice(token.id);\n    \n    if(isPriceLoading) return <Skeleton className=\"w-16 h-4\" />\n\n    if(!price) return null;\n\n    return (\n        <p className=\"text-[10px] text-neutral-600 dark:text-neutral-400\">\n            ${(price.value * Number(amount)).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n        </p>\n    )\n}\n\nexport default TokenInput"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;;;AARA;;;;;;;;AAoBA,MAAM,aAA8B,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,EAAE;;IAE3F,MAAM,CAAC,WAAW,aAAa,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAEjD,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,4HACA,aAAa;;0BAEb,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCACR;;;;;;oBAGD,SAAS,yBACL,6LAAC,uLAAA,CAAA,UAAY;wBACT,SAAS;wBACT,cAAc,MAAM,EAAE;wBACtB,aAAa,MAAM,MAAM;wBACzB,WAAW;;;;;;;;;;;;0BAK3B,6LAAC;gBAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb;;kCAEA,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCACG,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK;gCACpD,SAAS,IAAM,aAAa;gCAC5B,QAAQ,IAAM,aAAa;gCAC3B,WAAU;gCACV,UAAU,CAAC;gCACX,aAAY;;;;;;4BAGZ,uBACI,6LAAC;gCACG,QAAQ;gCACR,OAAO;;;;;;;;;;;;oBAMnB,8BACI,6LAAC,yIAAA,CAAA,UAAW;wBACR,OAAO;wBACP,UAAU;;;;;+BAGd,uBACI,6LAAC,0IAAA,CAAA,UAAY;wBAAC,OAAO;;;;;;;;;;;;;;;;;;AAOjD;GA9DM;KAAA;AAgEC,MAAM,kBAAkB,CAAC,EAAE,MAAM,EAAE,KAAK,EAAoC;;IAC/E,MAAM,EAAE,MAAM,KAAK,EAAE,WAAW,cAAc,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,EAAE;IAEpE,IAAG,gBAAgB,qBAAO,6LAAC,gIAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IAE9C,IAAG,CAAC,OAAO,OAAO;IAElB,qBACI,6LAAC;QAAE,WAAU;;YAAqD;YAC5D,CAAC,MAAM,KAAK,GAAG,OAAO,OAAO,EAAE,cAAc,CAAC,WAAW;gBAAE,uBAAuB;gBAAG,uBAAuB;YAAE;;;;;;;AAG5H;IAZa;;QAC0C,4IAAA,CAAA,WAAQ;;;MADlD;uCAcE"}},
    {"offset": {"line": 3934, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3940, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/utils/swap/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react'\n\nimport { ChevronDown } from 'lucide-react';\n\nimport { VersionedTransaction } from '@solana/web3.js';\n\nimport Decimal from 'decimal.js';\n\nimport { Button, Separator } from '@/components/ui';\n\nimport LogInButton from '@/app/(app)/_components/log-in-button';\n\nimport TokenInput from './token-input';\n\nimport { useSendTransaction, useTokenBalance } from '@/hooks';\n\nimport { getSwapObj, getQuote } from '@/services/jupiter';\n\nimport type { QuoteResponse } from '@jup-ag/api';\nimport type { Token } from '@/db/types';\n\ninterface Props {\n    initialInputToken: Token | null,    \n    initialOutputToken: Token | null,\n    inputLabel: string,\n    outputLabel: string,\n    initialInputAmount?: string,\n    swapText?: string,\n    swappingText?: string,\n    onSuccess?: (txHash: string) => void,\n    onError?: (error: string) => void,\n    onCancel?: () => void,\n}\n\nconst Swap: React.FC<Props> = ({ \n    initialInputToken, \n    initialOutputToken, \n    inputLabel, \n    outputLabel, \n    initialInputAmount, \n    swapText, \n    swappingText,\n    onSuccess, \n    onError, \n    onCancel \n}) => {\n\n    const [inputAmount, setInputAmount] = useState<string>(initialInputAmount || \"\");\n    const [inputToken, setInputToken] = useState<Token | null>(initialInputToken);\n\n    const [outputAmount, setOutputAmount] = useState<string>(\"\");\n    const [outputToken, setOutputToken] = useState<Token | null>(initialOutputToken);\n\n    const [isQuoteLoading, setIsQuoteLoading] = useState<boolean>(false);\n    const [quoteResponse, setQuoteResponse] = useState<QuoteResponse | null>(null);\n\n    const [isSwapping, setIsSwapping] = useState<boolean>(false);\n\n    const { sendTransaction, wallet } = useSendTransaction();\n\n    const { balance: inputBalance, isLoading: inputBalanceLoading } = useTokenBalance(inputToken?.id || \"\", wallet?.address || \"\");\n\n    const onChangeInputOutput = () => {\n        const tempInputToken = inputToken;\n        const tempInputAmount = inputAmount;\n        setInputToken(outputToken);\n        setInputAmount(outputAmount);\n        setOutputToken(tempInputToken);\n        setOutputAmount(tempInputAmount);\n    }\n\n    const onSwap = async () => {\n        if(!wallet || !quoteResponse) return;\n        setIsSwapping(true);\n        try {\n            const { swapTransaction} = await getSwapObj(wallet.address, quoteResponse);\n            const swapTransactionBuf = Buffer.from(swapTransaction, \"base64\");\n            const transaction = VersionedTransaction.deserialize(swapTransactionBuf);\n            const txHash = await sendTransaction(transaction);\n            onSuccess?.(txHash);\n        } catch (error) {\n            onError?.(error instanceof Error ? error.message : \"Unknown error\");\n        } finally {\n            setIsSwapping(false);\n        }\n    }\n\n    useEffect(() => {\n        if (inputToken && outputToken) {\n            const fetchQuoteAndUpdate = async () => {\n                setIsQuoteLoading(true);\n                setOutputAmount(\"\");\n                const quote = await getQuote(inputToken.id, outputToken.id, parseFloat(inputAmount) * (10 ** inputToken.decimals));\n                setQuoteResponse(quote);\n                setOutputAmount(new Decimal(quote.outAmount).div(new Decimal(10).pow(outputToken.decimals)).toString());\n                setIsQuoteLoading(false);\n            }\n\n\n            if (inputAmount && Number(inputAmount) > 0) {\n                fetchQuoteAndUpdate();\n            } else {\n                setQuoteResponse(null);\n                setOutputAmount(\"\");\n            }\n        }\n    }, [inputToken, outputToken, inputAmount]);\n    \n    return (\n        <div className=\"flex flex-col gap-4 w-96 max-w-full\">\n            <div className=\"flex flex-col gap-2 items-center w-full\">\n                <TokenInput\n                    label={inputLabel}\n                    amount={inputAmount}\n                    onChange={setInputAmount}\n                    token={inputToken}\n                    onChangeToken={setInputToken}\n                    address={wallet?.address}\n                />\n                <Button \n                    variant=\"ghost\" \n                    size=\"icon\"\n                    className=\"group h-fit w-fit p-1\"\n                    onClick={onChangeInputOutput}\n                >\n                    <ChevronDown className=\"h-4 w-4 transition-transform group-hover:rotate-180\" />\n                </Button>\n                <TokenInput\n                    label={outputLabel}\n                    amount={outputAmount}\n                    token={outputToken}\n                    onChangeToken={setOutputToken}\n                    address={wallet?.address}\n                />\n            </div>\n            <Separator />\n            <div className=\"flex flex-col gap-2\">\n                {\n                    wallet ? (\n                        <Button \n                            variant=\"brand\" \n                            className=\"w-full\"\n                            onClick={onSwap}\n                            disabled={isSwapping || isQuoteLoading || !quoteResponse || !inputToken || !outputToken || !inputAmount || !outputAmount || !inputBalance || inputBalanceLoading || Number(inputAmount) > Number(inputBalance)}\n                        >\n                            {\n                                isQuoteLoading \n                                    ? \"Loading...\" \n                                    : Number(inputAmount) > Number(inputBalance)\n                                        ? \"Insufficient balance\"\n                                        : isSwapping\n                                            ? swappingText || \"Swapping...\"\n                                            : swapText || \"Swap\"\n                            }\n                        </Button>\n                    ) : (\n                        <LogInButton />\n                    )\n                }\n                {\n                    onCancel && (\n                        <Button variant=\"ghost\" className=\"w-full\" onClick={onCancel}>Cancel</Button>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Swap;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/swap/call.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Card, Skeleton } from '@/components/ui';\n\nimport Swap from '../../utils/swap';\n\nimport { useTokenDataByAddress } from '@/hooks';\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\n\nimport type { SolanaTradeArgumentsType, SolanaTradeResultBodyType } from '@/ai';\n\ninterface Props {\n    toolCallId: string,\n    args: SolanaTradeArgumentsType,\n}\n\nconst SwapCallBody: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat();\n\n    const { data: inputTokenData, isLoading: inputTokenLoading } = useTokenDataByAddress(args.inputMint || \"\");\n    const { data: outputTokenData, isLoading: outputTokenLoading } = useTokenDataByAddress(args.outputMint || \"\");\n    \n    return (\n        <Card className=\"p-2\">\n            {\n                inputTokenLoading || outputTokenLoading ? (\n                    <Skeleton className=\"h-48 w-96\" />\n                ) : (\n                    <Swap\n                        initialInputToken={inputTokenData}\n                        initialOutputToken={outputTokenData}\n                        inputLabel=\"Sell\"\n                        outputLabel=\"Buy\"\n                        initialInputAmount={args.inputAmount?.toString()}\n                        swapText=\"Swap\"\n                        swappingText=\"Swapping...\"\n                        onSuccess={(tx) => {\n                            addToolResult<SolanaTradeResultBodyType>(toolCallId, {\n                                message: `Swap successful!`,\n                                body: {\n                                    transaction: tx,\n                                    inputAmount: args.inputAmount || 0,\n                                    inputToken: inputTokenData?.symbol || \"\",\n                                    outputToken: outputTokenData?.symbol || \"\",\n                                }\n                            });\n                        }}\n                        onError={(error) => {\n                            addToolResult(toolCallId, {\n                                message: `Swap failed: ${error}`,\n                            });\n                        }}\n                        onCancel={() => {\n                            addToolResult(toolCallId, {\n                                message: `Swap cancelled`,\n                            });\n                        }}\n                    />\n                )\n            }\n        </Card>\n    )\n}\n\nexport default SwapCallBody;"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;AAmBA,MAAM,eAAgC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAEvD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,EAAE,MAAM,cAAc,EAAE,WAAW,iBAAiB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE,KAAK,SAAS,IAAI;IACvG,MAAM,EAAE,MAAM,eAAe,EAAE,WAAW,kBAAkB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE,KAAK,UAAU,IAAI;IAE1G,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBAER,qBAAqB,mCACjB,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;iCAEpB,6LAAC,4KAAA,CAAA,UAAI;YACD,mBAAmB;YACnB,oBAAoB;YACpB,YAAW;YACX,aAAY;YACZ,oBAAoB,KAAK,WAAW,EAAE;YACtC,UAAS;YACT,cAAa;YACb,WAAW,CAAC;gBACR,cAAyC,YAAY;oBACjD,SAAS,CAAC,gBAAgB,CAAC;oBAC3B,MAAM;wBACF,aAAa;wBACb,aAAa,KAAK,WAAW,IAAI;wBACjC,YAAY,gBAAgB,UAAU;wBACtC,aAAa,iBAAiB,UAAU;oBAC5C;gBACJ;YACJ;YACA,SAAS,CAAC;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,aAAa,EAAE,OAAO;gBACpC;YACJ;YACA,UAAU;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,cAAc,CAAC;gBAC7B;YACJ;;;;;;;;;;;AAMxB;GA/CM;;QAEwB,+IAAA,CAAA,UAAO;QAE8B,qKAAA,CAAA,wBAAqB;QACnB,qKAAA,CAAA,wBAAqB;;;KALpF;uCAiDS"}},
    {"offset": {"line": 4234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4240, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/swap/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport ToolCard from '../../tool-card';\n\nimport SwapCard from './swap-result';\nimport SwapCallBody from './call';\n\nimport type { ToolInvocation } from 'ai';\nimport type { SolanaTradeResultType, SolanaTradeArgumentsType } from '@/ai';\n\ninterface SwapProps {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst Swap: React.FC<SwapProps> = ({ tool, prevToolAgent }) => {\n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Completing Trade...\"\n            result={{\n                heading: (result: SolanaTradeResultType) => result.body \n                    ? \"Trade Complete\"\n                    : \"Failed to complete trade\",\n                body: (result: SolanaTradeResultType) => result.body \n                    ? <SwapCard />\n                    : result.message\n            }}\n            call={{\n                heading: \"Swap\",\n                body: (toolCallId: string, args: SolanaTradeArgumentsType) => (\n                    <SwapCallBody toolCallId={toolCallId} args={args} />\n                )\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"max-w-full\"\n        />\n    );\n};\n\nexport default Swap; "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAUA,MAAM,OAA4B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAEtD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAY;QACZ,QAAQ;YACJ,SAAS,CAAC,SAAkC,OAAO,IAAI,GACjD,mBACA;YACN,MAAM,CAAC,SAAkC,OAAO,IAAI,iBAC9C,6LAAC,sLAAA,CAAA,UAAQ;;;;6BACT,OAAO,OAAO;QACxB;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,4KAAA,CAAA,UAAY;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAEpD;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KAzBM;uCA2BS"}},
    {"offset": {"line": 4290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4296, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/all-balances.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { AllBalancesResultType } from '@/ai';\nimport { TokenBalance } from '../utils';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst AllBalances: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting All Balances...`}\n            result={{\n                heading: (result: AllBalancesResultType) => result.body \n                    ? `Fetched All Balances`\n                    : `Failed to fetch balances`,\n                body: (result: AllBalancesResultType) => result.body \n                    ? (\n                        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n                            {result.body.balances.map((balance) => (\n                                <TokenBalance\n                                    key={balance.token}\n                                    token={balance.token}\n                                    balance={balance.balance}\n                                    logoURI={balance.logoURI}\n                                    name={balance.name}\n                                />\n                            ))}\n                        </div>\n                    )\n                    :  \"No balance found\"\n            }}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nexport default AllBalances;"],"names":[],"mappings":";;;;AAEA;AAIA;AAAA;;;;AAOA,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAGzD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,uBAAuB,CAAC;QACtC,QAAQ;YACJ,SAAS,CAAC,SAAkC,OAAO,IAAI,GACjD,CAAC,oBAAoB,CAAC,GACtB,CAAC,wBAAwB,CAAC;YAChC,MAAM,CAAC,SAAkC,OAAO,IAAI,iBAE5C,6LAAC;oBAAI,WAAU;8BACV,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,wBACvB,6LAAC,0NAAA,CAAA,eAAY;4BAET,OAAO,QAAQ,KAAK;4BACpB,SAAS,QAAQ,OAAO;4BACxB,SAAS,QAAQ,OAAO;4BACxB,MAAM,QAAQ,IAAI;2BAJb,QAAQ,KAAK;;;;;;;;;6BAS/B;QACX;QACA,eAAe;;;;;;AAG3B;KA9BM;uCAgCS"}},
    {"offset": {"line": 4344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4350, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/transfer/call/build-tx.ts"],"sourcesContent":["import { \n    PublicKey, \n    SystemProgram, \n    Connection,\n    VersionedTransaction,\n    TransactionMessage,\n    LAMPORTS_PER_SOL\n} from \"@solana/web3.js\";\n\nimport { \n    getAssociatedTokenAddress, \n    createAssociatedTokenAccountInstruction, \n    createTransferInstruction, \n    getMint \n} from \"@solana/spl-token\";\n\nexport const buildTransferTx = async (from: string, to: string, amount: number, mint: string) => {\n    // Create connection\n    const connection = new Connection(process.env.NEXT_PUBLIC_SOLANA_RPC_URL!);\n\n    // Convert parameters to appropriate types\n    const fromPubkey = new PublicKey(from);\n    const toPubkey = new PublicKey(to);\n\n    const instructions = [];\n\n    if (mint === \"So11111111111111111111111111111111111111112\") {\n        // Transfer native SOL\n        instructions.push(\n            SystemProgram.transfer({\n                fromPubkey,\n                toPubkey,\n                lamports: amount * LAMPORTS_PER_SOL\n            })\n        );\n    } else {\n        // Transfer SPL token\n        const mintPubkey = new PublicKey(mint);\n        const fromAta = await getAssociatedTokenAddress(mintPubkey, fromPubkey);\n        const toAta = await getAssociatedTokenAddress(mintPubkey, toPubkey);\n\n        // Check if recipient's token account exists\n        const toAtaInfo = await connection.getAccountInfo(toAta);\n        if (!toAtaInfo) {\n            instructions.push(\n                createAssociatedTokenAccountInstruction(\n                    fromPubkey, // payer\n                    toAta, // ata\n                    toPubkey, // owner\n                    mintPubkey // mint\n                )\n            );\n        }\n        \n        // Get mint info to determine decimals\n        const mintInfo = await getMint(connection, mintPubkey);\n        const adjustedAmount = amount * Math.pow(10, mintInfo.decimals);\n\n        instructions.push(\n            createTransferInstruction(\n                fromAta,\n                toAta,\n                fromPubkey,\n                adjustedAmount\n            )\n        );\n    }\n\n    // Get the latest blockhash\n    const { blockhash } = await connection.getLatestBlockhash();\n    \n    // Create a message with the latest blockhash\n    const message = new TransactionMessage({\n        payerKey: fromPubkey,\n        recentBlockhash: blockhash,\n        instructions\n    }).compileToV0Message();\n\n    // Simulate transaction\n    const simulation = await connection.simulateTransaction(new VersionedTransaction(message));\n    \n    // Check if simulation was successful\n    if (simulation.value.err) {\n        throw new Error(`Transaction simulation failed: ${JSON.stringify(simulation.value)}`);\n    }\n\n    // Return a VersionedTransaction\n    return new VersionedTransaction(message);\n}"],"names":[],"mappings":";;;AAAA;AAkBsC;AATtC;AAAA;AAAA;;;AAOO,MAAM,kBAAkB,OAAO,MAAc,IAAY,QAAgB;IAC5E,oBAAoB;IACpB,MAAM,aAAa,IAAI,2KAAA,CAAA,aAAU;IAEjC,0CAA0C;IAC1C,MAAM,aAAa,IAAI,2KAAA,CAAA,YAAS,CAAC;IACjC,MAAM,WAAW,IAAI,2KAAA,CAAA,YAAS,CAAC;IAE/B,MAAM,eAAe,EAAE;IAEvB,IAAI,SAAS,+CAA+C;QACxD,sBAAsB;QACtB,aAAa,IAAI,CACb,2KAAA,CAAA,gBAAa,CAAC,QAAQ,CAAC;YACnB;YACA;YACA,UAAU,SAAS,2KAAA,CAAA,mBAAgB;QACvC;IAER,OAAO;QACH,qBAAqB;QACrB,MAAM,aAAa,IAAI,2KAAA,CAAA,YAAS,CAAC;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,0KAAA,CAAA,4BAAyB,AAAD,EAAE,YAAY;QAC5D,MAAM,QAAQ,MAAM,CAAA,GAAA,0KAAA,CAAA,4BAAyB,AAAD,EAAE,YAAY;QAE1D,4CAA4C;QAC5C,MAAM,YAAY,MAAM,WAAW,cAAc,CAAC;QAClD,IAAI,CAAC,WAAW;YACZ,aAAa,IAAI,CACb,CAAA,GAAA,mMAAA,CAAA,0CAAuC,AAAD,EAClC,YACA,OACA,UACA,WAAW,OAAO;;QAG9B;QAEA,sCAAsC;QACtC,MAAM,WAAW,MAAM,CAAA,GAAA,0KAAA,CAAA,UAAO,AAAD,EAAE,YAAY;QAC3C,MAAM,iBAAiB,SAAS,KAAK,GAAG,CAAC,IAAI,SAAS,QAAQ;QAE9D,aAAa,IAAI,CACb,CAAA,GAAA,qLAAA,CAAA,4BAAyB,AAAD,EACpB,SACA,OACA,YACA;IAGZ;IAEA,2BAA2B;IAC3B,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,WAAW,kBAAkB;IAEzD,6CAA6C;IAC7C,MAAM,UAAU,IAAI,2KAAA,CAAA,qBAAkB,CAAC;QACnC,UAAU;QACV,iBAAiB;QACjB;IACJ,GAAG,kBAAkB;IAErB,uBAAuB;IACvB,MAAM,aAAa,MAAM,WAAW,mBAAmB,CAAC,IAAI,2KAAA,CAAA,uBAAoB,CAAC;IAEjF,qCAAqC;IACrC,IAAI,WAAW,KAAK,CAAC,GAAG,EAAE;QACtB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,KAAK,SAAS,CAAC,WAAW,KAAK,GAAG;IACxF;IAEA,gCAAgC;IAChC,OAAO,IAAI,2KAAA,CAAA,uBAAoB,CAAC;AACpC"}},
    {"offset": {"line": 4410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4416, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/transfer/call/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react'\n\nimport { ChevronDown } from 'lucide-react';\n\nimport { Button, Card, Input, Separator, Skeleton } from '@/components/ui';\n\nimport LogInButton from '@/app/(app)/_components/log-in-button';\n\nimport TokenInput from '../../../utils/swap/token-input';\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\n\nimport { useSendTransaction, useTokenBalance, useTokenDataByAddress } from '@/hooks';\n\nimport { buildTransferTx } from './build-tx';\n\nimport type { SolanaTransferArgumentsType } from '@/ai';\nimport type { Token } from '@/db/types';\n\n\ninterface Props {\n    args: SolanaTransferArgumentsType,\n    toolCallId: string,\n}\n\nconst TransferCall: React.FC<Props> = ({ args, toolCallId }) => {\n\n    const { addToolResult } = useChat();\n\n    const { wallet, sendTransaction } = useSendTransaction();\n\n    const [amount, setAmount] = useState<string>(args.amount.toString());\n    const [token, setToken] = useState<Token | null>(null);\n    const [toAddress, setToAddress] = useState<string>(args.to);\n    const [isTransferring, setIsTransferring] = useState<boolean>(false);\n\n    const { data: inputTokenData, isLoading: inputTokenLoading } = useTokenDataByAddress(args.mint || \"So11111111111111111111111111111111111111112\");\n\n    const { balance, isLoading: balanceLoading } = useTokenBalance(args.mint || \"So11111111111111111111111111111111111111112\", wallet?.address || \"\");\n    \n    useEffect(() => {\n        if(inputTokenData && !token) {\n            setToken(inputTokenData);\n        }\n    }, [inputTokenData]);\n\n    const onTransfer = async () => {\n        if(!wallet || !amount || !toAddress || !token) return;\n        setIsTransferring(true);\n        const transaction = await buildTransferTx(wallet.address, toAddress, Number(amount), token.id);\n        try {\n            \n            const tx = await sendTransaction(transaction);\n            addToolResult(toolCallId, {\n                message: `Successfully transferred ${amount} ${token.symbol} to ${toAddress}.`,\n                body: {\n                    amount: Number(amount),\n                    recipient: toAddress,\n                    token: token.symbol,\n                    transaction: tx,\n                }\n            });\n        } catch(e) {\n            addToolResult(toolCallId, {\n                message: `Failed to transfer: ${e instanceof Error ? e.message : \"Unknown error\"}`,\n            });\n        } finally {\n            setIsTransferring(false);\n        }\n    }\n\n    if(inputTokenLoading) return <Skeleton className=\"h-48 w-96\" />\n\n    return (\n        <Card className=\"flex flex-col gap-2 p-2\">\n            <div className=\"flex flex-col items-center gap-2\">\n                <TokenInput\n                    token={token}\n                    label=\"Transfer\"\n                    amount={amount}\n                    onChange={(amount) => {\n                        setAmount(amount);\n                    }}\n                    onChangeToken={(token) => {\n                        setToken(token);\n                    }}\n                    address={wallet?.address}\n                />\n                <ChevronDown className=\"w-4 h-4\" />\n                <Input\n                    value={toAddress}\n                    onChange={(e) => {\n                        setToAddress(e.target.value);\n                    }}\n                    placeholder=\"To address\"\n                />\n            </div>\n            <Separator />\n            <div className=\"flex flex-col gap-2\">\n                {\n                    wallet ? (\n                        <Button\n                            variant=\"brand\"\n                            onClick={onTransfer}\n                            disabled={isTransferring || balanceLoading || !balance || !token || !amount || Number(amount) <= 0 || !toAddress || Number(amount) > balance}\n                        >\n                            {\n                                balanceLoading \n                                    ? \"Loading...\" \n                                    : Number(amount) > balance\n                                        ? \"Insufficient funds\"\n                                        : isTransferring \n                                            ? \"Transferring...\" \n                                            : \"Transfer\"\n                            }\n                        </Button>\n                    ) : (\n                        <LogInButton />\n                    )\n                }\n                <Button\n                    variant=\"outline\"\n                >\n                    Cancel\n                </Button>\n            </div>\n        </Card>\n    )\n}\n\nexport default TransferCall;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4600, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4606, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/transfer/result.tsx"],"sourcesContent":["import React from 'react';\n    \nimport type { SolanaTransferResultBodyType } from '@/ai';\n\ninterface Props {\n    transferResult: SolanaTransferResultBodyType;\n    amount: number;\n    to: string;\n}\n\nconst TransferResult: React.FC<Props> = ({ transferResult, amount, to }) => {\n\n    return (\n        <p className=\"text-xs text-muted-foreground\">\n            Transferred {amount} {transferResult.token} to {to}\n        </p>\n    );\n};\n\nexport default TransferResult; "],"names":[],"mappings":";;;;;AAUA,MAAM,iBAAkC,CAAC,EAAE,cAAc,EAAE,MAAM,EAAE,EAAE,EAAE;IAEnE,qBACI,6LAAC;QAAE,WAAU;;YAAgC;YAC5B;YAAO;YAAE,eAAe,KAAK;YAAC;YAAK;;;;;;;AAG5D;KAPM;uCASS"}},
    {"offset": {"line": 4635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4641, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/transfer/index.tsx"],"sourcesContent":["import React from 'react';\n\n\nimport ToolCard from '../../tool-card';\n\nimport TransferCallBody from './call';\nimport TransferResult from './result';\n\nimport type { SolanaTransferArgumentsType, SolanaTransferResultType } from '@/ai';\nimport type { ToolInvocation } from 'ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst Transfer: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Transferring...\"\n            result={{\n                heading: (result: SolanaTransferResultType) => result.body \n                    ? \"Transfer Complete\"\n                    : \"Failed to Transfer\",\n                body: (result: SolanaTransferResultType) => result.body \n                    ? <TransferResult amount={tool.args.amount} to={tool.args.to} transferResult={result.body} />\n                    : result.message\n            }}\n            call={{\n                heading: \"Transfer\",\n                body: (toolCallId: string, args: SolanaTransferArgumentsType) => (\n                    <TransferCallBody toolCallId={toolCallId} args={args} />\n                )\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n        />\n    );\n};\n\nexport default Transfer; "],"names":[],"mappings":";;;;AAGA;AAEA;AACA;;;;;AAUA,MAAM,WAA4B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IACtD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAY;QACZ,QAAQ;YACJ,SAAS,CAAC,SAAqC,OAAO,IAAI,GACpD,sBACA;YACN,MAAM,CAAC,SAAqC,OAAO,IAAI,iBACjD,6LAAC,kLAAA,CAAA,UAAc;oBAAC,QAAQ,KAAK,IAAI,CAAC,MAAM;oBAAE,IAAI,KAAK,IAAI,CAAC,EAAE;oBAAE,gBAAgB,OAAO,IAAI;;;;;6BACvF,OAAO,OAAO;QACxB;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,yLAAA,CAAA,UAAgB;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAExD;QACA,aAAa;QACb,eAAe;;;;;;AAG3B;KAvBM;uCAyBS"}},
    {"offset": {"line": 4694, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4700, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/get-token-address.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetTokenAddressResultType } from '@/ai';\nimport Address from '@/app/_components/address';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTokenAddress: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting ${tool.args.keyword} Address...`}\n            result={{\n                heading: (result: GetTokenAddressResultType) => result.body \n                    ? `Fetched ${tool.args.keyword} Address` \n                    : `Failed to fetch token address`,\n                body: (result: GetTokenAddressResultType) => result.body \n                    ? (\n                        <Address address={result.body.address} />\n                    ) : \"No token address found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            defaultOpen={false}\n        />\n    )\n}\n\nexport default GetTokenAddress;"],"names":[],"mappings":";;;;AAEA;AAIA;;;;AAOA,MAAM,kBAAmC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAG7D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACtD,QAAQ;YACJ,SAAS,CAAC,SAAsC,OAAO,IAAI,GACrD,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GACtC,CAAC,6BAA6B,CAAC;YACrC,MAAM,CAAC,SAAsC,OAAO,IAAI,iBAEhD,6LAAC,iIAAA,CAAA,UAAO;oBAAC,SAAS,OAAO,IAAI,CAAC,OAAO;;;;;6BACrC;QACZ;QACA,eAAe;QACf,aAAa;;;;;;AAGzB;KApBM;uCAsBS"}},
    {"offset": {"line": 4738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4744, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/token-balance.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\ninterface Props {\n    symbol: string,\n    balance: number,\n    logoURI: string,\n    name: string,\n    price: number\n}\n\nconst TokenBalance: React.FC<Props> = ({ symbol, balance, logoURI, name, price }) => {\n\n    return (\n        <div className=\"flex flex-row items-center gap-2\">\n            {logoURI && logoURI.length > 0 && (\n                <img src={logoURI} alt={name} className=\"w-8 h-8 rounded-full\" />\n            )}\n            <div className=\"flex flex-col\">\n                <p className=\"text-xs text-neutral-600 dark:text-neutral-400\">{name} ({symbol})</p>\n                <p className=\"text-md font-bold\">{balance.toLocaleString(undefined, { maximumFractionDigits: 4 })} <span className=\"text-xs text-neutral-600 dark:text-neutral-400\">${(price * balance).toLocaleString(undefined, { maximumFractionDigits: 2 })}</span></p>\n            </div>\n        </div>\n    )\n}\n\nexport default TokenBalance"],"names":[],"mappings":";;;;AAAA;;AAYA,MAAM,eAAgC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;IAE5E,qBACI,6LAAC;QAAI,WAAU;;YACV,WAAW,QAAQ,MAAM,GAAG,mBACzB,6LAAC;gBAAI,KAAK;gBAAS,KAAK;gBAAM,WAAU;;;;;;0BAE5C,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;;4BAAkD;4BAAK;4BAAG;4BAAO;;;;;;;kCAC9E,6LAAC;wBAAE,WAAU;;4BAAqB,QAAQ,cAAc,CAAC,WAAW;gCAAE,uBAAuB;4BAAE;4BAAG;0CAAC,6LAAC;gCAAK,WAAU;;oCAAiD;oCAAE,CAAC,QAAQ,OAAO,EAAE,cAAc,CAAC,WAAW;wCAAE,uBAAuB;oCAAE;;;;;;;;;;;;;;;;;;;;;;;;;AAI7P;KAbM;uCAeS"}},
    {"offset": {"line": 4825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4831, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/wallet-address.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from 'react'\n\nimport Image from 'next/image';\n\nimport Link from 'next/link';\n\nimport { ArrowUpRight, Copy } from 'lucide-react';\n\nimport { Button, Skeleton, Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui';\n\nimport TokenBalance from './token-balance';\n\nimport { usePortfolio } from '@/hooks';\n\nimport { cn } from '@/lib/utils';\n\nimport { ArkhamAddress } from '@/services/arkham/types/base-response';\nimport { arkhamEntityLogos } from '@/lib/arkham-entity-logos';\n\ninterface Props {\n    address: string;\n    className?: string;\n}\n\nconst WalletAddress: React.FC<Props> = ({ address, className }) => {\n\n    const [arkhamAddress, setArkhamAddress] = useState<ArkhamAddress | null>(null);\n\n    useEffect(() => {\n        const fetchArkhamEntity = async () => {\n            try {\n                const entity = await fetch(`/api/arkham/address/${address}`)\n                const data = await entity.json();\n                setArkhamAddress(data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchArkhamEntity();\n    }, [address]);\n    \n    const [copied, setCopied] = useState(false);\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(address);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n    };\n\n    return (\n        <TooltipProvider>\n            <Tooltip delayDuration={0}>\n                <TooltipTrigger asChild>\n                    {\n                        (arkhamAddress?.arkhamEntity && arkhamAddress?.arkhamLabel?.name) ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                                {\n                                    arkhamAddress.arkhamEntity.id && \n                                    arkhamEntityLogos[arkhamAddress.arkhamEntity.id as keyof typeof arkhamEntityLogos] && (\n                                        <Image\n                                            src={arkhamEntityLogos[arkhamAddress.arkhamEntity.id as keyof typeof arkhamEntityLogos]}\n                                            alt={arkhamAddress.arkhamEntity.name}\n                                            width={16}\n                                            height={16}\n                                            className=\"rounded-full\"\n                                        />\n                                    )\n                                }\n                                <p\n                                    className={cn(\"text-sm text-muted-foreground cursor-pointer hover:bg-neutral-200 dark:hover:bg-neutral-700 rounded-md w-fit px-1\", className)}\n                                >\n                                    {`${arkhamAddress.arkhamEntity.name} (${arkhamAddress.arkhamLabel.name})`}\n                                </p>\n                            </div>\n                        ) : (\n                            <p \n                                className={cn(\"text-sm text-muted-foreground cursor-pointer hover:bg-neutral-200 dark:hover:bg-neutral-700 rounded-md w-fit px-1\", className)}\n                            >\n                                {address.slice(0, 4)}...${address.slice(-4)}\n                            </p>\n                        )\n                    }\n                </TooltipTrigger>\n                <TooltipContent side=\"bottom\" className=\"flex flex-col gap-4\">\n                    <WalletBalances address={address} />\n                    <div className=\"flex flex-row gap-2\">\n                        <Link href={`https://solscan.io/address/${address}`} target=\"_blank\">\n                            <Button variant=\"outline\" size=\"sm\">\n                                Solscan <ArrowUpRight className=\"size-4\" />\n                            </Button>\n                        </Link>\n                        <Button variant=\"outline\" size=\"sm\" onClick={handleCopy}>\n                            {copied ? \"Copied\" : \"Copy\"} <Copy className=\"size-4\" />\n                        </Button>\n                    </div>\n                </TooltipContent>\n            </Tooltip>\n        </TooltipProvider>\n    )\n}\n\nconst WalletBalances = ({ address }: { address: string }) => {\n\n    const { data: portfolio, isLoading: portfolioLoading } = usePortfolio(address);\n\n    return (\n        <div className=\"flex flex-col gap-4\">\n            <div className=\"flex flex-row justify-between items-center\">\n                <h3 className=\"text-sm font-bold\">\n                    Balances\n                </h3>\n                {\n                    portfolioLoading ? (\n                        <Skeleton className=\"h-4 w-24\" /> \n                    ) : (\n                        portfolio && (\n                            <p className=\"text-xs font-bold\">\n                                ${portfolio.totalUsd.toLocaleString(undefined, { maximumFractionDigits: 2 })}\n                            </p>\n                        )\n                    )\n                }\n            </div>\n            {\n                portfolioLoading ? (\n                    <Skeleton className=\"h-16 w-full\" />\n                ) : (\n                    portfolio ? (\n                        <div className=\"flex flex-col gap-2 max-h-48 overflow-y-auto\">\n                            {portfolio.items.filter((item) => item.valueUsd > 0.01).map((token) => (\n                                <TokenBalance \n                                    key={token.address}\n                                    symbol={token.symbol}\n                                    balance={token.uiAmount}\n                                    logoURI={token.logoURI}\n                                    name={token.name}\n                                    price={token.priceUsd}\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-sm text-muted-foreground\">No balances found</p>\n                    )\n                    \n                )\n            }\n        </div>\n    )\n}\n\nexport default WalletAddress;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/top-holders.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport Image from 'next/image';\n\nimport { Button, Card } from '@/components/ui';\n\nimport WalletAddress from '@/app/_components/wallet-address';\n\nimport ToolCard from '../tool-card';\n\nimport { getStreamsByMint } from '@/services/streamflow';\n\nimport type { ToolInvocation } from 'ai';\nimport type { TopHoldersResultBodyType, TopHoldersResultType } from '@/ai';\nimport type { TokenLargestAccount } from '@/services/helius';\nimport type { Stream } from '@streamflow/stream';\nimport type { ProgramAccount } from '@project-serum/anchor';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTopHolders: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Top Holders...`}\n            result={{\n                heading: (result: TopHoldersResultType) => result.body \n                    ? `Fetched Top 20 Holders`\n                    : `Failed to fetch top holders`,\n                body: (result: TopHoldersResultType) => result.body \n                    ? <TopHolders body={result.body} mint={tool.args.tokenAddress} />\n                    :  \"No top holders found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nconst TopHolders = ({ body, mint }: { body: TopHoldersResultBodyType, mint: string }) => {\n\n    const [showAll, setShowAll] = useState(false);\n\n    const [streamflowAccounts, setStreamflowAccounts] = useState<ProgramAccount<Stream>[]>([]);\n\n    useEffect(() => {\n        const fetchStreamflowAccounts = async () => {\n            const accounts = await getStreamsByMint(mint);\n            setStreamflowAccounts(accounts);\n        }\n        fetchStreamflowAccounts();\n    }, [mint]);\n\n    const knownAddressesWithStreamflow = streamflowAccounts.reduce((acc, account) => {\n        acc[account.account.escrowTokens] = {\n            name: \"Streamflow Vault\",\n            logo: \"/vesting/streamflow.png\"\n        }\n        return acc;\n    }, {} as Record<string, { name: string, logo: string }>)\n\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <p className=\"text-md\">\n                {(body.percentageOwned * 100).toFixed(2)}% of the total supply is owned by the top 20 holders\n            </p>\n            <div className=\"flex flex-col gap-2\">\n                {body.topHolders.slice(0, showAll ? body.topHolders.length : 5).map((topHolder, index) => (\n                    <TopHolder\n                        key={topHolder.owner} \n                        topHolder={topHolder}\n                        index={index}\n                        knownAddresses={knownAddressesWithStreamflow}\n                    />\n                ))}\n            </div>\n            <Button\n                variant=\"outline\"\n                onClick={() => setShowAll(!showAll)}\n            >\n                {showAll ? \"Show Less\" : \"Show All\"}\n            </Button>\n        </div>\n    )\n}\n\nconst TopHolder = ({ topHolder, index, knownAddresses }: { topHolder: (TokenLargestAccount & { percentageOwned: number, owner: string }), index: number, knownAddresses: Record<string, { name: string, logo: string }> }) => {\n    return (\n        <Card className=\"flex flex-row items-center gap-2 p-2\">\n            <p className=\"text-sm text-muted-foreground\">\n                {index + 1})\n            </p>\n            <div className=\"flex flex-col\">\n                {\n                    knownAddresses[topHolder.owner] ? (\n                        <div className=\"flex flex-row items-center gap-2\">\n                            <Image\n                                src={knownAddresses[topHolder.owner].logo}\n                                alt={knownAddresses[topHolder.owner].name}\n                                width={16}\n                                height={16}\n                            />\n                            <p className=\"text-sm font-bold\">\n                                {knownAddresses[topHolder.owner].name}\n                            </p>\n                        </div>\n                    ) : (\n                        <WalletAddress \n                            address={topHolder.owner} \n                            className=\"text-sm font-bold\"\n                        />\n                    )\n                }\n                <p className=\"text-xs\">{topHolder.uiAmount.toLocaleString()} ({topHolder.percentageOwned.toFixed(2)}%)</p>\n            </div>\n        </Card>\n    )\n}\n\nexport default GetTopHolders;"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAAA;AANA;AAAA;;;;;;;;;AAmBA,MAAM,gBAAiC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAG3D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,sBAAsB,CAAC;QACrC,QAAQ;YACJ,SAAS,CAAC,SAAiC,OAAO,IAAI,GAChD,CAAC,sBAAsB,CAAC,GACxB,CAAC,2BAA2B,CAAC;YACnC,MAAM,CAAC,SAAiC,OAAO,IAAI,iBAC7C,6LAAC;oBAAW,MAAM,OAAO,IAAI;oBAAE,MAAM,KAAK,IAAI,CAAC,YAAY;;;;;6BAC1D;QACX;QACA,aAAa;QACb,eAAe;;;;;;AAG3B;KAnBM;AAqBN,MAAM,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,EAAoD;;IAEhF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B,EAAE;IAEzF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACN,MAAM;gEAA0B;oBAC5B,MAAM,WAAW,MAAM,CAAA,GAAA,yJAAA,CAAA,mBAAgB,AAAD,EAAE;oBACxC,sBAAsB;gBAC1B;;YACA;QACJ;+BAAG;QAAC;KAAK;IAET,MAAM,+BAA+B,mBAAmB,MAAM,CAAC,CAAC,KAAK;QACjE,GAAG,CAAC,QAAQ,OAAO,CAAC,YAAY,CAAC,GAAG;YAChC,MAAM;YACN,MAAM;QACV;QACA,OAAO;IACX,GAAG,CAAC;IAEJ,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAE,WAAU;;oBACR,CAAC,KAAK,eAAe,GAAG,GAAG,EAAE,OAAO,CAAC;oBAAG;;;;;;;0BAE7C,6LAAC;gBAAI,WAAU;0BACV,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,KAAK,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,WAAW,sBAC5E,6LAAC;wBAEG,WAAW;wBACX,OAAO;wBACP,gBAAgB;uBAHX,UAAU,KAAK;;;;;;;;;;0BAOhC,6LAAC,8HAAA,CAAA,SAAM;gBACH,SAAQ;gBACR,SAAS,IAAM,WAAW,CAAC;0BAE1B,UAAU,cAAc;;;;;;;;;;;;AAIzC;GA7CM;MAAA;AA+CN,MAAM,YAAY,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,cAAc,EAAoK;IACrN,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAE,WAAU;;oBACR,QAAQ;oBAAE;;;;;;;0BAEf,6LAAC;gBAAI,WAAU;;oBAEP,cAAc,CAAC,UAAU,KAAK,CAAC,iBAC3B,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,gIAAA,CAAA,UAAK;gCACF,KAAK,cAAc,CAAC,UAAU,KAAK,CAAC,CAAC,IAAI;gCACzC,KAAK,cAAc,CAAC,UAAU,KAAK,CAAC,CAAC,IAAI;gCACzC,OAAO;gCACP,QAAQ;;;;;;0CAEZ,6LAAC;gCAAE,WAAU;0CACR,cAAc,CAAC,UAAU,KAAK,CAAC,CAAC,IAAI;;;;;;;;;;;6CAI7C,6LAAC,2IAAA,CAAA,UAAa;wBACV,SAAS,UAAU,KAAK;wBACxB,WAAU;;;;;;kCAItB,6LAAC;wBAAE,WAAU;;4BAAW,UAAU,QAAQ,CAAC,cAAc;4BAAG;4BAAG,UAAU,eAAe,CAAC,OAAO,CAAC;4BAAG;;;;;;;;;;;;;;;;;;;AAIpH;MA/BM;uCAiCS"}},
    {"offset": {"line": 5327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5333, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/top-traders.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport { Button, Card, Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui';\n\nimport WalletAddress from '@/app/_components/wallet-address';\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetTopTradersResultBodyType, GetTopTradersResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTopTraders: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Top Traders...`}\n            result={{\n                heading: (result: GetTopTradersResultType) => result.body \n                    ? `Fetched Top Traders (${tool.args.timeFrame[0].toUpperCase() + tool.args.timeFrame.slice(1)})`\n                    : `Failed to fetch top traders`,\n                body: (result: GetTopTradersResultType) => result.body \n                    ? <TopTraders body={result.body} />\n                    :  \"No top traders found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst TopTraders = ({ body }: { body: GetTopTradersResultBodyType }) => {\n    const [showAll, setShowAll] = useState(false);\n\n    return (\n        <Card className=\"flex flex-col gap-2 w-full p-2\">\n            <Table className=\"text-center\">\n                <TableHeader>\n                    <TableRow>\n                        <TableHead className=\"w-16 text-center\">Rank</TableHead>\n                        <TableHead className=\"text-center\">Trader</TableHead>\n                        <TableHead className=\"text-center\">PNL</TableHead>\n                        <TableHead className=\"text-center\">Volume</TableHead>\n                    </TableRow>\n                </TableHeader>\n                <TableBody>\n                    {body.traders.slice(0, showAll ? body.traders.length : 5).map((trader, index) => (\n                        <TableRow key={trader.address}>\n                            <TableCell>{index + 1}</TableCell>\n                            <TableCell className=\"flex flex-col items-center\">\n                                <WalletAddress \n                                    address={trader.address} \n                                    className=\"font-medium\"\n                                />\n                            </TableCell>\n                            <TableCell className=\"text-green-500\">\n                                ${trader.pnl.toLocaleString(undefined, { maximumFractionDigits: 2, minimumFractionDigits: 2 })}\n                            </TableCell>\n                            <TableCell>\n                                ${trader.volume.toLocaleString(undefined, { maximumFractionDigits: 2, minimumFractionDigits: 2 })}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <Button\n                variant=\"ghost\"\n                onClick={() => setShowAll(!showAll)}\n            >\n                {showAll ? \"Show Less\" : \"Show All\"}\n            </Button>\n        </Card>\n    )\n}\n\nexport default GetTopTraders;"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AAEA;AAJA;AAAA;AAAA;;;;;;;AAcA,MAAM,gBAAiC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAE3D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,sBAAsB,CAAC;QACrC,QAAQ;YACJ,SAAS,CAAC,SAAoC,OAAO,IAAI,GACnD,CAAC,qBAAqB,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAC9F,CAAC,2BAA2B,CAAC;YACnC,MAAM,CAAC,SAAoC,OAAO,IAAI,iBAChD,6LAAC;oBAAW,MAAM,OAAO,IAAI;;;;;6BAC5B;QACX;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KAnBM;AAqBN,MAAM,aAAa,CAAC,EAAE,IAAI,EAAyC;;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC,6HAAA,CAAA,QAAK;gBAAC,WAAU;;kCACb,6LAAC,6HAAA,CAAA,cAAW;kCACR,cAAA,6LAAC,6HAAA,CAAA,WAAQ;;8CACL,6LAAC,6HAAA,CAAA,YAAS;oCAAC,WAAU;8CAAmB;;;;;;8CACxC,6LAAC,6HAAA,CAAA,YAAS;oCAAC,WAAU;8CAAc;;;;;;8CACnC,6LAAC,6HAAA,CAAA,YAAS;oCAAC,WAAU;8CAAc;;;;;;8CACnC,6LAAC,6HAAA,CAAA,YAAS;oCAAC,WAAU;8CAAc;;;;;;;;;;;;;;;;;kCAG3C,6LAAC,6HAAA,CAAA,YAAS;kCACL,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG,UAAU,KAAK,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,sBACnE,6LAAC,6HAAA,CAAA,WAAQ;;kDACL,6LAAC,6HAAA,CAAA,YAAS;kDAAE,QAAQ;;;;;;kDACpB,6LAAC,6HAAA,CAAA,YAAS;wCAAC,WAAU;kDACjB,cAAA,6LAAC,2IAAA,CAAA,UAAa;4CACV,SAAS,OAAO,OAAO;4CACvB,WAAU;;;;;;;;;;;kDAGlB,6LAAC,6HAAA,CAAA,YAAS;wCAAC,WAAU;;4CAAiB;4CAChC,OAAO,GAAG,CAAC,cAAc,CAAC,WAAW;gDAAE,uBAAuB;gDAAG,uBAAuB;4CAAE;;;;;;;kDAEhG,6LAAC,6HAAA,CAAA,YAAS;;4CAAC;4CACL,OAAO,MAAM,CAAC,cAAc,CAAC,WAAW;gDAAE,uBAAuB;gDAAG,uBAAuB;4CAAE;;;;;;;;+BAZxF,OAAO,OAAO;;;;;;;;;;;;;;;;0BAkBzC,6LAAC,8HAAA,CAAA,SAAM;gBACH,SAAQ;gBACR,SAAS,IAAM,WAAW,CAAC;0BAE1B,UAAU,cAAc;;;;;;;;;;;;AAIzC;GA1CM;MAAA;uCA4CS"}},
    {"offset": {"line": 5523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5529, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/bubble-maps/call-body.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\n\nimport { BubbleMapsArgumentsType } from '@/ai'\nimport { useChat } from '@/app/(app)/chat/_contexts/chat'\nimport { Skeleton } from '@/components/ui'\n\ninterface Props {\n    toolCallId: string,\n    args: BubbleMapsArgumentsType\n}\n\nconst BubbleMapsCallBody: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat()\n\n    useEffect(() => {\n        const checkBubbleMaps = async () => {\n            await fetch(`https://api-legacy.bubblemaps.io/map-availability?chain=sol&token=${args.contractAddress}`)\n                .then(res => res.json())\n                .then(data => {\n                    if(data.status === \"OK\") {\n                        if(data.availability == true) {\n                            addToolResult(toolCallId, {\n                                message: \"Bubble Maps are available and shown to the user\",\n                                body: {\n                                    success: true,\n                                    message: \"Bubble Maps are available and shown to the user\",\n                                },\n                            })\n                        } else {\n                            addToolResult(toolCallId, {\n                                message: \"Bubble Maps are not available for this token\",\n                            })\n                        }\n                    } else {\n                        addToolResult(toolCallId, {\n                            message: data.message,\n                            body: {\n                                success: false,\n                            },\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    addToolResult(toolCallId, {\n                        message: \"Error fetching Bubble Maps\",\n                        body: {\n                            success: false,\n                            message: \"Error fetching Bubble Maps\",\n                        },\n                    })\n                })\n        }\n\n        checkBubbleMaps()\n    }, [args])\n\n\n    return (\n        <Skeleton className=\"h-10 w-full\" />\n    )\n}\n\nexport default BubbleMapsCallBody"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AAAA;;;AANA;;;;AAaA,MAAM,qBAAsC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAE7D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACN,MAAM;gEAAkB;oBACpB,MAAM,MAAM,CAAC,kEAAkE,EAAE,KAAK,eAAe,EAAE,EAClG,IAAI;wEAAC,CAAA,MAAO,IAAI,IAAI;uEACpB,IAAI;wEAAC,CAAA;4BACF,IAAG,KAAK,MAAM,KAAK,MAAM;gCACrB,IAAG,KAAK,YAAY,IAAI,MAAM;oCAC1B,cAAc,YAAY;wCACtB,SAAS;wCACT,MAAM;4CACF,SAAS;4CACT,SAAS;wCACb;oCACJ;gCACJ,OAAO;oCACH,cAAc,YAAY;wCACtB,SAAS;oCACb;gCACJ;4BACJ,OAAO;gCACH,cAAc,YAAY;oCACtB,SAAS,KAAK,OAAO;oCACrB,MAAM;wCACF,SAAS;oCACb;gCACJ;4BACJ;wBACJ;uEACC,KAAK;wEAAC,CAAA;4BACH,QAAQ,KAAK,CAAC;4BACd,cAAc,YAAY;gCACtB,SAAS;gCACT,MAAM;oCACF,SAAS;oCACT,SAAS;gCACb;4BACJ;wBACJ;;gBACR;;YAEA;QACJ;uCAAG;QAAC;KAAK;IAGT,qBACI,6LAAC,gIAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;AAE5B;GAnDM;;QAEwB,+IAAA,CAAA,UAAO;;;KAF/B;uCAqDS"}},
    {"offset": {"line": 5616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5622, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/bubble-maps/result.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\ninterface Props {\n    contractAddress: string\n}\n\nconst BubbleMapsResult: React.FC<Props> = ({ contractAddress }) => {\n    return (\n        <iframe \n            className=\"w-[500px] h-[500px] max-w-full rounded-md\"\n            src={`https://app.bubblemaps.io/sol/token/${contractAddress}`} \n        />\n    )\n}\n\nexport default BubbleMapsResult"],"names":[],"mappings":";;;;AAAA;;AAQA,MAAM,mBAAoC,CAAC,EAAE,eAAe,EAAE;IAC1D,qBACI,6LAAC;QACG,WAAU;QACV,KAAK,CAAC,oCAAoC,EAAE,iBAAiB;;;;;;AAGzE;KAPM;uCASS"}},
    {"offset": {"line": 5645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5651, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/bubble-maps/index.tsx"],"sourcesContent":["import React from 'react';\n\n\nimport ToolCard from '../../tool-card';\n\nimport BubbleMapsCallBody from './call-body';\nimport BubbleMapsResult from './result';\n\nimport type { BubbleMapsResultType, BubbleMapsArgumentsType } from '@/ai';\nimport type { ToolInvocation } from 'ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst BubbleMaps: React.FC<Props> = ({ tool, prevToolAgent }) => {\n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Staking...\"\n            result={{\n                heading: (result: BubbleMapsResultType) => result.body \n                    ? \"Bubble Maps Complete\"\n                    : \"Failed to Get Bubble Maps\",\n                body: (result: BubbleMapsResultType) => result.body && result.body.success\n                    ? <BubbleMapsResult contractAddress={tool.args.contractAddress} />\n                    : result.message\n            }}\n            call={{\n                heading: \"Get Bubble Maps\",\n                body: (toolCallId: string, args: BubbleMapsArgumentsType) => (\n                    <BubbleMapsCallBody toolCallId={toolCallId} args={args} />\n                )\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n        />\n    );\n};\n\nexport default BubbleMaps; "],"names":[],"mappings":";;;;AAGA;AAEA;AACA;;;;;AAUA,MAAM,aAA8B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAExD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAY;QACZ,QAAQ;YACJ,SAAS,CAAC,SAAiC,OAAO,IAAI,GAChD,yBACA;YACN,MAAM,CAAC,SAAiC,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,iBACpE,6LAAC,wLAAA,CAAA,UAAgB;oBAAC,iBAAiB,KAAK,IAAI,CAAC,eAAe;;;;;6BAC5D,OAAO,OAAO;QACxB;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,8LAAA,CAAA,UAAkB;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAE1D;QACA,aAAa;QACb,eAAe;;;;;;AAG3B;KAxBM;uCA0BS"}},
    {"offset": {"line": 5702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5708, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/num-holders.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { TokenHoldersResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst NumHolders: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Token Holders...`}\n            result={{\n                heading: (result: TokenHoldersResultType) => result.body \n                    ? `Fetched Token Holders` \n                    : `Failed to fetch token holders`,\n                body: (result: TokenHoldersResultType) => result.body \n                    ? (\n                        <p>{result.body.numHolders.toLocaleString()} Total Holders</p>\n                    ) : \"No token holders found\"\n            }}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nexport default NumHolders;"],"names":[],"mappings":";;;;AAEA;;;AAUA,MAAM,aAA8B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAGxD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,wBAAwB,CAAC;QACvC,QAAQ;YACJ,SAAS,CAAC,SAAmC,OAAO,IAAI,GAClD,CAAC,qBAAqB,CAAC,GACvB,CAAC,6BAA6B,CAAC;YACrC,MAAM,CAAC,SAAmC,OAAO,IAAI,iBAE7C,6LAAC;;wBAAG,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc;wBAAG;;;;;;6BAC5C;QACZ;QACA,eAAe;;;;;;AAG3B;KAnBM;uCAqBS"}},
    {"offset": {"line": 5746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5752, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/recent-trades.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport { Button, Card, Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui';\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetTraderTradesResultBodyType, GetTraderTradesResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTrades: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Getting Trades...\"\n            result={{\n                heading: (result: GetTraderTradesResultType) => result.body \n                    ? `Recent Trades`\n                    : `Failed to fetch trades`,\n                body: (result: GetTraderTradesResultType) => result.body \n                    ? <TradesTable body={result.body} />\n                    : \"No trades found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst TradesTable = ({ body }: { body: GetTraderTradesResultBodyType }) => {\n    const [showAll, setShowAll] = useState(false);\n    const tokens = Object.entries(body.tokensTraded).sort((a, b) => b[1].usdChange - a[1].usdChange);\n\n    return (\n        <Card className=\"flex flex-col gap-2 w-full p-2\">\n            <Table className=\"text-center\">\n                <TableHeader>\n                    <TableRow>\n                        <TableHead className=\"text-center\">Asset</TableHead>\n                        <TableHead className=\"text-center\">Volume</TableHead>\n                        <TableHead className=\"text-center\">Balance Change</TableHead>\n                        <TableHead className=\"text-center\">Value Change</TableHead>\n                    </TableRow>\n                </TableHeader>\n                <TableBody>\n                    {tokens.slice(0, showAll ? tokens.length : 5).map(([address, trade]) => (\n                        <TableRow key={address}>\n                            <TableCell className=\"\">\n                                <div className=\"flex flex-row items-center justify-center gap-2\">\n                                    <img\n                                        src={trade.token.logoURI}\n                                        alt={trade.token.symbol}\n                                        width={24}\n                                        height={24}\n                                        className=\"rounded-full\"\n                                    />\n                                    <span className=\"font-medium\">{trade.token.symbol}</span>\n                                </div>\n                                \n                            </TableCell>\n                            <TableCell>\n                                <div className=\"flex flex-col w-full gap-1\">\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-red-500\">\n                                            {((trade.volume.sell / (trade.volume.buy + trade.volume.sell)) * 100).toFixed(2)}%\n                                        </span>\n                                        <span className=\"text-green-500\">\n                                            {((trade.volume.buy / (trade.volume.buy + trade.volume.sell)) * 100).toFixed(2)}%\n                                        </span>\n                                    </div>\n                                    <div className=\"flex w-full h-1 bg-neutral-800 rounded-full overflow-hidden\">\n                                        <div \n                                            className=\"bg-red-500 h-full\"\n                                            style={{ \n                                                width: `${(trade.volume.sell / (trade.volume.buy + trade.volume.sell)) * 100}%`\n                                            }}\n                                        />\n                                        <div \n                                            className=\"bg-green-500 h-full\"\n                                            style={{ \n                                                width: `${(trade.volume.buy / (trade.volume.buy + trade.volume.sell)) * 100}%`\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-red-500\">\n                                            {new Intl.NumberFormat('en-US', { notation: 'compact', maximumFractionDigits: 1 }).format(trade.volume.sell)}\n                                        </span>\n                                        <span className=\"text-green-500\">\n                                            {new Intl.NumberFormat('en-US', { notation: 'compact', maximumFractionDigits: 1 }).format(trade.volume.buy)}\n                                        </span>\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell className={trade.balanceChange >= 0 ? \"text-green-500\" : \"text-red-500\"}>\n                                {trade.balanceChange > 0 ? \"+\" : \"\"}{trade.balanceChange.toLocaleString()}\n                            </TableCell>\n                            <TableCell className={trade.usdChange >= 0 ? \"text-green-500\" : \"text-red-500\"}>\n                                {trade.usdChange > 0 ? \"+\" : \"-\"}${Math.abs(trade.usdChange).toLocaleString(undefined, { maximumFractionDigits: 2 })}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            {tokens.length > 5 && (\n                <Button\n                    variant=\"ghost\"\n                    onClick={() => setShowAll(!showAll)}\n                >\n                    {showAll ? \"Show Less\" : \"Show All\"}\n                </Button>\n            )}\n        </Card>\n    )\n}\n\nexport default GetTrades;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6064, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/top-token-traders.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Image from 'next/image';\n\nimport { Button, Card, Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui';\n\nimport WalletAddress from '@/app/_components/wallet-address';\n\nimport ToolCard from '../tool-card';\n\nimport { knownAddresses } from '@/lib/known-addresses';\n\nimport type { ToolInvocation } from 'ai';\nimport type { TopTokenTradersResultType, TopTokenTradersResultBodyType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetTopTokenTraders: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Top Traders...`}\n            result={{\n                heading: (result: TopTokenTradersResultType) => result.body \n                    ? `Fetched Top Traders (${tool.args.timeFrame[0].toUpperCase() + tool.args.timeFrame.slice(1)})`\n                    : `Failed to fetch top traders`,\n                body: (result: TopTokenTradersResultType) => result.body \n                    ? <TopTokenTraders body={result.body} />\n                    :  \"No top traders found\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst TopTokenTraders = ({ body }: { body: TopTokenTradersResultBodyType }) => {\n    const [showAll, setShowAll] = useState(false);\n\n    return (\n        <Card className=\"flex flex-col gap-2 w-full p-2\">\n            <Table className=\"text-center\">\n                <TableHeader>\n                    <TableRow>\n                        <TableHead className=\"w-16 text-center\">Rank</TableHead>\n                        <TableHead className=\"text-center\">Trader</TableHead>\n                        <TableHead className=\"text-center\">Trades</TableHead>\n                        <TableHead className=\"text-center\">Volume</TableHead>\n                    </TableRow>\n                </TableHeader>\n                <TableBody>\n                    {body.topTraders.slice(0, showAll ? body.topTraders.length : 5).map((trader, index) => (\n                        <TableRow key={trader.owner}>\n                            <TableCell>{index + 1}</TableCell>\n                            <TableCell className=\"\">\n                                {knownAddresses[trader.owner] ? (\n                                    <div className=\"flex flex-row items-center gap-2\">\n                                        <Image\n                                            src={knownAddresses[trader.owner].logo}\n                                            alt={knownAddresses[trader.owner].name}\n                                            width={16}\n                                            height={16}\n                                        />\n                                        <span className=\"font-medium\">\n                                            {knownAddresses[trader.owner].name}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div className=\"flex flex-col items-center justify-center h-full\">\n                                        <WalletAddress \n                                            address={trader.owner} \n                                            className=\"font-medium\"\n                                        />\n                                    </div>\n                                )}\n                            </TableCell>\n                            <TableCell className=\"\">\n                                <div className=\"flex flex-col w-full gap-1\">\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-red-500\">\n                                            {((trader.tradeSell / (trader.tradeBuy + trader.tradeSell)) * 100).toFixed(2)}%\n                                        </span>\n                                        <span className=\"text-green-500\">\n                                            {((trader.tradeBuy / (trader.tradeBuy + trader.tradeSell)) * 100).toFixed(2)}%\n                                        </span>\n                                    </div>\n                                    <div className=\"flex w-full h-1 bg-neutral-800 rounded-full overflow-hidden\">\n                                        <div \n                                            className=\"bg-red-500 h-full\"\n                                            style={{ \n                                                width: `${(trader.tradeSell / (trader.tradeBuy + trader.tradeSell)) * 100}%`\n                                            }}\n                                        />\n                                        <div \n                                            className=\"bg-green-500 h-full\"\n                                            style={{ \n                                                width: `${(trader.tradeBuy / (trader.tradeBuy + trader.tradeSell)) * 100}%`\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-red-500\">\n                                            {trader.tradeSell.toLocaleString(undefined, { maximumFractionDigits: 0 })}\n                                        </span>\n                                        <span className=\"text-green-500\">\n                                            {trader.tradeBuy.toLocaleString(undefined, { maximumFractionDigits: 0 })}\n                                        </span>\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                <div className=\"flex flex-col w-full gap-1\">\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-green-500\">\n                                            {((trader.volumeBuy / (trader.volumeBuy + trader.volumeSell)) * 100).toFixed(2)}%\n                                        </span>\n                                        <span className=\"text-red-500\">\n                                            {((trader.volumeSell / (trader.volumeBuy + trader.volumeSell)) * 100).toFixed(2)}%\n                                        </span>\n                                    </div>\n                                    <div className=\"flex w-full h-1 bg-neutral-800 rounded-full overflow-hidden\">\n                                        <div \n                                            className=\"bg-green-500 h-full\"\n                                            style={{ \n                                                width: `${(trader.volumeBuy / (trader.volumeBuy + trader.volumeSell)) * 100}%`\n                                            }}\n                                        />\n                                        <div \n                                            className=\"bg-red-500 h-full\"\n                                            style={{ \n                                                width: `${(trader.volumeSell / (trader.volumeBuy + trader.volumeSell)) * 100}%`\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"flex justify-between text-xs\">\n                                        <span className=\"text-green-500\">\n                                            {new Intl.NumberFormat('en-US', { notation: 'compact', maximumFractionDigits: 1 }).format(trader.volumeBuy)}\n                                        </span>\n                                        <span className=\"text-red-500\">\n                                            {new Intl.NumberFormat('en-US', { notation: 'compact', maximumFractionDigits: 1 }).format(trader.volumeSell)}\n                                        </span>\n                                    </div>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <Button\n                variant=\"ghost\"\n                onClick={() => setShowAll(!showAll)}\n            >\n                {showAll ? \"Show Less\" : \"Show All\"}\n            </Button>\n        </Card>\n    )\n}\n\nexport default GetTopTokenTraders;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6481, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_components/token/chart.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport { Button, CandlestickChart, Skeleton } from '@/components/ui';\n\nimport { usePriceChart } from '@/hooks';\n\nimport { cn } from '@/lib/utils';\n\nimport type { UTCTimestamp } from 'lightweight-charts';\nimport { CandlestickGranularity } from '@/services/hellomoon/types';\n\nconst WINDOWS = [\n    { \n        label: '6h', \n        timeframe: CandlestickGranularity.ONE_MIN,\n        numDays: 1/4\n    },\n    { \n        label: '12h', \n        timeframe: CandlestickGranularity.ONE_MIN,\n        numDays: 1/12\n    },\n    { \n        label: '1d', \n        timeframe: CandlestickGranularity.FIVE_MIN,\n        numDays: 1\n    },\n    { \n        label: '3d', \n        timeframe: CandlestickGranularity.FIVE_MIN,\n        numDays: 3\n    },\n    { \n        label: '7d', \n        timeframe: CandlestickGranularity.ONE_HOUR,\n        numDays: 7\n    },\n    { \n        label: '30d', \n        timeframe: CandlestickGranularity.ONE_HOUR,\n        numDays: 30\n    },\n]\n\ninterface Props {\n    mint: string;\n}\n\nconst TokenChart: React.FC<Props> = ({ mint }) => {\n\n    const [timeframe, setTimeframe] = useState<CandlestickGranularity>(CandlestickGranularity.FIVE_MIN);\n    const [numDays, setNumDays] = useState<number>(1);\n\n    const { data, isLoading } = usePriceChart(mint, timeframe, numDays);\n\n    const price = data.length > 0 ? data[data.length - 1].close : 0;\n    const open = data.length > 0 ? data[0].open : 0;\n    const change = ((price - open) / open) * 100;\n\n    return (\n        <div className='flex flex-col h-full w-full'>\n            <div className='flex flex-col md:flex-row md:justify-between md:items-center gap-1 bg-neutral-100 dark:bg-neutral-700 p-2'>\n                {\n                    isLoading ? (\n                        <Skeleton className='h-4 w-24' />\n                    ) : (\n                        <p className='text-md md:text-lg font-bold'>\n                            ${data[data.length - 1].close.toLocaleString(undefined, { maximumFractionDigits: 5 })} <span className={cn(change > 0 ? 'text-green-500' : 'text-red-500')}>({change > 0 ? '+' : ''}{change.toLocaleString(undefined, { maximumFractionDigits: 2 })}%)</span>\n                        </p>\n                    )\n                }\n                <div className='flex flex-row gap-1'>\n                    {\n                        WINDOWS.map((window) => (\n                            <Button \n                                key={window.label} \n                                onClick={() => {\n                                    setNumDays(window.numDays);\n                                    setTimeframe(window.timeframe)\n                                }}\n                                variant={numDays === window.numDays && timeframe === window.timeframe ? 'brand' : 'ghost'}\n                                className='text-sm h-fit w-fit px-1 py-0.5'\n                            >\n                                {window.label}\n                            </Button>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className='p-2 flex-1 h-0'>\n                {\n                    isLoading ? (\n                        <Skeleton className='h-full w-full' />\n                    ) : (\n                        <CandlestickChart\n                            data={data.map(price => ({\n                                time: price.timestamp as UTCTimestamp,\n                                open: price.open,\n                                high: price.high,\n                                low: price.low,\n                                close: price.close,\n                            }))} \n                        />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TokenChart"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAEA;AAGA;AAAA;AALA;AAFA;AAAA;AAAA;;;AAJA;;;;;;AAaA,MAAM,UAAU;IACZ;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,OAAO;QACzC,SAAS,IAAE;IACf;IACA;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,OAAO;QACzC,SAAS,IAAE;IACf;IACA;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,QAAQ;QAC1C,SAAS;IACb;IACA;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,QAAQ;QAC1C,SAAS;IACb;IACA;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,QAAQ;QAC1C,SAAS;IACb;IACA;QACI,OAAO;QACP,WAAW,gJAAA,CAAA,yBAAsB,CAAC,QAAQ;QAC1C,SAAS;IACb;CACH;AAMD,MAAM,aAA8B,CAAC,EAAE,IAAI,EAAE;;IAEzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,gJAAA,CAAA,yBAAsB,CAAC,QAAQ;IAClG,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE/C,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,WAAW;IAE3D,MAAM,QAAQ,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,CAAC,KAAK,GAAG;IAC9D,MAAM,OAAO,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG;IAC9C,MAAM,SAAS,AAAC,CAAC,QAAQ,IAAI,IAAI,OAAQ;IAEzC,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;oBAEP,0BACI,6LAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;6CAEpB,6LAAC;wBAAE,WAAU;;4BAA+B;4BACtC,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW;gCAAE,uBAAuB;4BAAE;4BAAG;0CAAC,6LAAC;gCAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,SAAS,IAAI,mBAAmB;;oCAAiB;oCAAE,SAAS,IAAI,MAAM;oCAAI,OAAO,cAAc,CAAC,WAAW;wCAAE,uBAAuB;oCAAE;oCAAG;;;;;;;;;;;;;kCAIhQ,6LAAC;wBAAI,WAAU;kCAEP,QAAQ,GAAG,CAAC,CAAC,uBACT,6LAAC,8HAAA,CAAA,SAAM;gCAEH,SAAS;oCACL,WAAW,OAAO,OAAO;oCACzB,aAAa,OAAO,SAAS;gCACjC;gCACA,SAAS,YAAY,OAAO,OAAO,IAAI,cAAc,OAAO,SAAS,GAAG,UAAU;gCAClF,WAAU;0CAET,OAAO,KAAK;+BARR,OAAO,KAAK;;;;;;;;;;;;;;;;0BAcrC,6LAAC;gBAAI,WAAU;0BAEP,0BACI,6LAAC,gIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;yCAEpB,6LAAC,4IAAA,CAAA,mBAAgB;oBACb,MAAM,KAAK,GAAG,CAAC,CAAA,QAAS,CAAC;4BACrB,MAAM,MAAM,SAAS;4BACrB,MAAM,MAAM,IAAI;4BAChB,MAAM,MAAM,IAAI;4BAChB,KAAK,MAAM,GAAG;4BACd,OAAO,MAAM,KAAK;wBACtB,CAAC;;;;;;;;;;;;;;;;;AAO7B;GA5DM;;QAK0B,qJAAA,CAAA,gBAAa;;;KALvC;uCA8DS"}},
    {"offset": {"line": 6655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6661, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/price-chart.tsx"],"sourcesContent":["import React from 'react'\n\nimport { Card, Skeleton } from '@/components/ui';\n\nimport TokenChart from '@/app/(app)/_components/token/chart';\n\nimport ToolCard from '../tool-card';\n\nimport { useTokenMetadata } from '@/hooks';\n\nimport type { ToolInvocation } from 'ai';\nimport type { TokenPriceChartResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst PriceChart: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Token Price Chart...`}\n            result={{\n                heading: (result: TokenPriceChartResultType) => result.body \n                    ? `Fetched Token Price Chart` \n                    : `Failed to fetch token price chart`,\n                body: (result: TokenPriceChartResultType) => result.body \n                    ? <PriceChartBody tokenAddress={tool.args.tokenAddress} /> \n                    : \"No token price chart found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst PriceChartBody = ({ tokenAddress }: { tokenAddress: string }) => {\n    \n    const { data: tokenMetadata, isLoading } = useTokenMetadata(tokenAddress);\n\n    return (\n        <div className=\"w-full flex flex-col gap-2\">\n            {\n                isLoading ? (\n                    <Skeleton className=\"w-full h-8\" />\n                ) : (\n                    tokenMetadata && (\n                        <div className=\"w-full flex items-center gap-2\">\n                            <img \n                                src={tokenMetadata.logo_uri} \n                                alt={tokenMetadata.name} \n                                className=\"rounded-full h-8 w-8\"\n                            />\n                            <h3 \n                                className=\"text-xl font-bold\">{tokenMetadata.name} (${tokenMetadata.symbol})\n                            </h3>\n                        </div>\n                    )\n                )\n            }\n            <Card className=\"overflow-hidden\">\n                <TokenChart mint={tokenAddress} />\n            </Card>\n        </div>\n    )\n}\n\nexport default PriceChart;"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAEA;AAAA;AANA;AAAA;;;;;;;AAgBA,MAAM,aAA8B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IACxD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,4BAA4B,CAAC;QAC3C,QAAQ;YACJ,SAAS,CAAC,SAAsC,OAAO,IAAI,GACrD,CAAC,yBAAyB,CAAC,GAC3B,CAAC,iCAAiC,CAAC;YACzC,MAAM,CAAC,SAAsC,OAAO,IAAI,iBAClD,6LAAC;oBAAe,cAAc,KAAK,IAAI,CAAC,YAAY;;;;;6BACpD;QACV;QACA,eAAe;QACf,WAAU;;;;;;AAGtB;KAjBM;AAmBN,MAAM,iBAAiB,CAAC,EAAE,YAAY,EAA4B;;IAE9D,MAAM,EAAE,MAAM,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,mBAAgB,AAAD,EAAE;IAE5D,qBACI,6LAAC;QAAI,WAAU;;YAEP,0BACI,6LAAC,gIAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;uBAEpB,+BACI,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,KAAK,cAAc,QAAQ;wBAC3B,KAAK,cAAc,IAAI;wBACvB,WAAU;;;;;;kCAEd,6LAAC;wBACG,WAAU;;4BAAqB,cAAc,IAAI;4BAAC;4BAAI,cAAc,MAAM;4BAAC;;;;;;;;;;;;;0BAM/F,6LAAC,4HAAA,CAAA,OAAI;gBAAC,WAAU;0BACZ,cAAA,6LAAC,mJAAA,CAAA,UAAU;oBAAC,MAAM;;;;;;;;;;;;;;;;;AAIlC;GA7BM;;QAEyC,wJAAA,CAAA,mBAAgB;;;MAFzD;uCA+BS"}},
    {"offset": {"line": 6778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6784, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/smart-money/smart-money-token.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport Link from 'next/link'\n\nimport { Card } from '@/components/ui'\n\nimport type { SmartMoneyTokenInflow } from '@/services/hellomoon/types'\nimport type { Price, TokenMetadata } from '@/services/birdeye/types'\nimport SaveToken from '@/app/(app)/_components/save-token'\n\ninterface Props {\n    inflow: SmartMoneyTokenInflow;\n    token: TokenMetadata;\n    price: Price;\n}\n\nconst SmartMoneyToken: React.FC<Props> = ({ inflow, token, price }) => {\n\n    return (\n        <Link href={`/token/${token.address}`}>\n            <Card className=\"flex flex-col gap-2 p-2 justify-center hover:border-brand-600 dark:hover:border-brand-600 transition-all duration-300\">\n                <div className=\"flex flex-row items-center gap-2 justify-between\">\n                    <div className=\"flex flex-row items-center gap-2\">\n                        <img \n                            src={token.logo_uri} \n                            alt={token.name} \n                            className=\"w-10 h-10 rounded-full\" \n                        />\n                        <div className=\"flex flex-col\">\n                            <p className=\"text-sm font-bold\">{token.name} ({token.symbol})</p>\n                            <p className=\"text-xs text-muted-foreground\">${price.value.toLocaleString(undefined, { maximumFractionDigits: 5})} {price.priceChange24h !== 0 && <span className={price.priceChange24h > 0 ? 'text-green-500' : 'text-red-500'}>({price.priceChange24h > 0 ? '+' : ''}{price.priceChange24h.toLocaleString(undefined, { maximumFractionDigits: 2 })}%)</span>}</p>\n                        </div>\n                    </div>\n                    <SaveToken address={token.address} />\n                </div>\n                <div className=\"flex flex-col\">\n                    <p className=\"text-xs text-muted-foreground\">Net inflow: ${inflow.smartMoneyNetInflow?.toLocaleString()}</p>\n                </div>\n            </Card>\n        </Link>\n    )\n}\n\nexport default SmartMoneyToken"],"names":[],"mappings":";;;;AAIA;AAEA;AAIA;AAJA;AANA;;;;;AAkBA,MAAM,kBAAmC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE;IAE9D,qBACI,6LAAC,+JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;kBACjC,cAAA,6LAAC,4HAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCACG,KAAK,MAAM,QAAQ;oCACnB,KAAK,MAAM,IAAI;oCACf,WAAU;;;;;;8CAEd,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAE,WAAU;;gDAAqB,MAAM,IAAI;gDAAC;gDAAG,MAAM,MAAM;gDAAC;;;;;;;sDAC7D,6LAAC;4CAAE,WAAU;;gDAAgC;gDAAE,MAAM,KAAK,CAAC,cAAc,CAAC,WAAW;oDAAE,uBAAuB;gDAAC;gDAAG;gDAAE,MAAM,cAAc,KAAK,mBAAK,6LAAC;oDAAK,WAAW,MAAM,cAAc,GAAG,IAAI,mBAAmB;;wDAAgB;wDAAE,MAAM,cAAc,GAAG,IAAI,MAAM;wDAAI,MAAM,cAAc,CAAC,cAAc,CAAC,WAAW;4DAAE,uBAAuB;wDAAE;wDAAG;;;;;;;;;;;;;;;;;;;;;;;;;sCAG7V,6LAAC,kJAAA,CAAA,UAAS;4BAAC,SAAS,MAAM,OAAO;;;;;;;;;;;;8BAErC,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBAAE,WAAU;;4BAAgC;4BAAc,OAAO,mBAAmB,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAK3G;KAzBM;uCA2BS"}},
    {"offset": {"line": 6925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6931, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/smart-money/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../tool-card';\n\nimport SmartMoneyToken from './smart-money-token';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetSmartMoneyInflowsResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst SmartMoneyInflows: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Smart Money Inflows...`}\n            result={{\n                heading: (result: GetSmartMoneyInflowsResultType) => result.body \n                    ? `Fetched Smart Money Inflows`\n                    : `Failed to fetch smart money inflows`,\n                body: (result: GetSmartMoneyInflowsResultType) => result.body \n                    ? (\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                            {result.body.tokens.map((token) => (\n                                <SmartMoneyToken\n                                    key={token.inflow.mint}\n                                    {...token}\n                                />\n                            ))}\n                        </div>\n                    )\n                    :  \"No balance found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nexport default SmartMoneyInflows;"],"names":[],"mappings":";;;;AAEA;AAEA;;;;AAUA,MAAM,oBAAqC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAG/D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,8BAA8B,CAAC;QAC7C,QAAQ;YACJ,SAAS,CAAC,SAA2C,OAAO,IAAI,GAC1D,CAAC,2BAA2B,CAAC,GAC7B,CAAC,mCAAmC,CAAC;YAC3C,MAAM,CAAC,SAA2C,OAAO,IAAI,iBAErD,6LAAC;oBAAI,WAAU;8BACV,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,sBACrB,6LAAC,yMAAA,CAAA,UAAe;4BAEX,GAAG,KAAK;2BADJ,MAAM,MAAM,CAAC,IAAI;;;;;;;;;6BAMnC;QACX;QACA,eAAe;QACf,WAAU;;;;;;AAGtB;KA5BM;uCA8BS"}},
    {"offset": {"line": 6976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6992, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/get-pools/result.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport type { GetPoolsResultBodyType } from '@/ai'\nimport { RaydiumPool } from '../../../utils'\nimport { Button } from '@/components/ui'\n\ninterface Props {\n    body: GetPoolsResultBodyType\n}\n\nconst GetPoolsResult: React.FC<Props> = ({ body }) => {\n\n    const [showAll, setShowAll] = useState(false);\n    \n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className='flex flex-col gap-2'>\n                {\n                    body.pools.slice(0, showAll ? body.pools.length : 1).map((pool) => (\n                        <RaydiumPool \n                            key={pool.pool.id}\n                            pool={pool.pool} \n                            pair={pool.pair} \n                        />\n                    ))\n                }\n            </div>\n            {\n                body.pools.length > 1 && (\n                    <Button \n                        variant=\"outline\"\n                        onClick={() => setShowAll(!showAll)}\n                    >\n                        {showAll ? \"Show Less\" : `Show ${body.pools.length - 1} More Pools`}\n                    </Button>\n                )\n            }\n        </div>\n    )\n}\n\nexport default GetPoolsResult;"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AADA;AACA;;;AANA;;;;AAYA,MAAM,iBAAkC,CAAC,EAAE,IAAI,EAAE;;IAE7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;0BAEP,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,UAAU,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,qBACtD,6LAAC,qOAAA,CAAA,cAAW;wBAER,MAAM,KAAK,IAAI;wBACf,MAAM,KAAK,IAAI;uBAFV,KAAK,IAAI,CAAC,EAAE;;;;;;;;;;YAQ7B,KAAK,KAAK,CAAC,MAAM,GAAG,mBAChB,6LAAC,8HAAA,CAAA,SAAM;gBACH,SAAQ;gBACR,SAAS,IAAM,WAAW,CAAC;0BAE1B,UAAU,cAAc,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,MAAM,GAAG,EAAE,WAAW,CAAC;;;;;;;;;;;;AAM3F;GA7BM;KAAA;uCA+BS"}},
    {"offset": {"line": 7052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7058, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/get-pools/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../../tool-card';\n\nimport GetPoolsResult from './result';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetPoolsResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetPools: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Liquidity Pools...`}\n            result={{\n                heading: (result: GetPoolsResultType) => result.body?.pools \n                    ? `Fetched ${result.body.pools.length} Pools` \n                    : `Failed to fetch pools`,\n                body: (result: GetPoolsResultType) => result.body \n                    ? (\n                        <GetPoolsResult body={result.body} />\n                    ) : \"No pools found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nexport default GetPools;"],"names":[],"mappings":";;;;AAEA;AAEA;;;;AAUA,MAAM,WAA4B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAEtD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,0BAA0B,CAAC;QACzC,QAAQ;YACJ,SAAS,CAAC,SAA+B,OAAO,IAAI,EAAE,QAChD,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAC3C,CAAC,qBAAqB,CAAC;YAC7B,MAAM,CAAC,SAA+B,OAAO,IAAI,iBAEzC,6LAAC,mMAAA,CAAA,UAAc;oBAAC,MAAM,OAAO,IAAI;;;;;6BACjC;QACZ;QACA,eAAe;QACf,WAAU;;;;;;AAGtB;KAnBM;uCAqBS"}},
    {"offset": {"line": 7096, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7102, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/deposit-liquidity/call/standard-pool.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport { ApiV3PoolInfoStandardItem, Percent, TokenAmount, toToken, TxVersion } from '@raydium-io/raydium-sdk-v2'\nimport { VersionedTransaction } from '@solana/web3.js'\n\nimport Decimal from 'decimal.js'\n\nimport { Button, Separator } from '@/components/ui'\n\nimport LogInButton from '@/app/(app)/_components/log-in-button'\n\nimport TokenInput from '../../../../utils/swap/token-input'\n\nimport { useSendTransaction, useTokenBalance, useTokenDataByAddress } from '@/hooks'\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat'\n\nimport { raydiumApiClient, raydiumTransactionClient } from '@/services/raydium'\nimport { SolanaDepositLiquidityResultBodyType } from '@/ai/solana/actions/raydium/deposit/types'\n\n\ninterface Props {\n    pool: ApiV3PoolInfoStandardItem,\n    toolCallId: string\n}\n\nconst StandardPool: React.FC<Props> = ({ pool, toolCallId }) => {\n\n    const { addToolResult } = useChat();\n\n    const [amountA, setAmountA] = useState<string>(\"\");\n    const [amountB, setAmountB] = useState<string>(\"\");\n    const [amountsLoading, setAmountsLoading] = useState<boolean>(false);\n\n    const [baseIn, setBaseIn] = useState<boolean>(true);\n\n    const [otherAmountMin, setOtherAmountMin] = useState<string>(\"\");\n    const [isDepositing, setIsDepositing] = useState<boolean>(false);\n\n    const [slippage] = useState<Percent>(new Percent(100, 1000));\n\n    const { sendTransaction, wallet } = useSendTransaction();\n\n    const { data: mintA } = useTokenDataByAddress(pool.mintA.address);\n    const { data: mintB } = useTokenDataByAddress(pool.mintB.address);\n\n    const { balance: balanceA, isLoading: isBalanceALoading } = useTokenBalance(pool.mintA.address, wallet?.address ?? \"\");\n    const { balance: balanceB, isLoading: isBalanceBLoading } = useTokenBalance(pool.mintB.address, wallet?.address ?? \"\");\n\n    const handleAmountAChange = async (amount: string) => {\n        setAmountA(amount);\n        setAmountsLoading(true);\n        const raydium = await raydiumApiClient;\n        const { maxAnotherAmount, minAnotherAmount } = raydium.liquidity.computePairAmount({\n            poolInfo: pool,\n            amount: amount,\n            slippage,\n            baseIn: true,\n        });\n        setAmountB(maxAnotherAmount.toExact());\n        setOtherAmountMin(minAnotherAmount.toExact());\n        setBaseIn(true);\n        setAmountsLoading(false);\n    }\n\n    const handleAmountBChange = async (amount: string) => {\n        setAmountB(amount);\n        setAmountsLoading(true);\n        const raydium = await raydiumApiClient;\n        const { maxAnotherAmount, minAnotherAmount } = raydium.liquidity.computePairAmount({\n            poolInfo: pool,\n            amount: amount,\n            slippage,\n            baseIn: false,\n        });\n        setAmountA(maxAnotherAmount.toExact());\n        setOtherAmountMin(minAnotherAmount.toExact());\n        setBaseIn(false);\n        setAmountsLoading(false);\n    }\n\n    const onSubmit = async () => {\n        if(!wallet || !wallet.address) return;\n        setIsDepositing(true);\n        try {\n            const raydium = await raydiumTransactionClient(wallet.address);\n            const { transaction } = await raydium.liquidity.addLiquidity({\n                poolInfo: pool,\n                amountInA: new TokenAmount(\n                    toToken(pool.mintA),\n                    new Decimal(amountA).mul(10 ** pool.mintA.decimals).toFixed(0)\n                ),\n                amountInB: new TokenAmount(\n                    toToken(pool.mintB),\n                    new Decimal(amountB).mul(10 ** pool.mintB.decimals).toFixed(0)\n                ),\n                otherAmountMin: new TokenAmount(\n                    toToken(baseIn ? pool.mintA : pool.mintB),\n                    new Decimal(otherAmountMin).mul(10 ** (baseIn ? pool.mintA.decimals : pool.mintB.decimals)).toFixed(0)\n                ),\n                fixedSide: baseIn ? \"a\" : \"b\",\n                txVersion: TxVersion.V0\n            });\n\n            const transactionBuffer = transaction.serialize();\n            const versionedTransaction = VersionedTransaction.deserialize(transactionBuffer);\n            \n            const txHash = await sendTransaction(versionedTransaction);\n            addToolResult<SolanaDepositLiquidityResultBodyType>(toolCallId, {\n                message: \"Deposit liquidity successful. The user is shown the transaction hash, so you do not have to repeat it. Ask what they want to do next.\",\n                body: {\n                    transaction: txHash,\n                }\n            });\n        } catch (error) {\n            console.error(error);\n            addToolResult(toolCallId, {\n                message: `Failed to deposit liquidity: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n            });\n        }\n        setIsDepositing(false);\n    }\n\n    const onCancel = () => {\n        addToolResult(toolCallId, {\n            message: \"Deposit liquidity cancelled\",\n        });\n    }\n\n\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className=\"flex justify-between items-center\">\n                <p className=\"text-lg font-bold\">\n                    {pool.mintA.symbol}/{pool.mintB.symbol}\n                </p>\n                <div className=\"flex flex-col items-center\">\n                    <p className=\"text-xs opacity-50\">\n                        7d APR\n                    </p>\n                    <p className=\"text-sm\">\n                        {pool.week.apr}%\n                    </p>\n                </div>\n            </div>\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-col gap-2\">\n                    <TokenInput\n                        token={mintA}\n                        label={\"Token A\"}\n                        amount={amountA}\n                        onChange={handleAmountAChange}\n                        address={wallet?.address ?? \"\"}\n                    />\n                    <TokenInput\n                        token={mintB}\n                        label={\"Token B\"}\n                        amount={amountB}\n                        onChange={handleAmountBChange}\n                        address={wallet?.address ?? \"\"}\n                    />\n                </div>\n            </div>\n            <Separator />\n            {\n                wallet ? (\n                    <div className=\"flex flex-col gap-2\">\n                        <Button\n                            variant=\"brand\"\n                            className=\"w-full\"\n                            disabled={!amountA || !amountB || !otherAmountMin || isDepositing || !balanceA || !balanceB || isBalanceALoading || isBalanceBLoading || Number(amountA) > Number(balanceA) || Number(amountB) > Number(balanceB) || amountsLoading}\n                            onClick={onSubmit}\n                        >\n                            {\n                                isBalanceALoading || isBalanceBLoading || amountsLoading\n                                    ? \"Loading...\"\n                                    : Number(amountA) > Number(balanceA) || Number(amountB) > Number(balanceB) \n                                        ? \"Insufficient balance\" \n                                        : isDepositing \n                                            ? \"Depositing...\" \n                                            : \"Deposit\"\n                            }\n                        </Button>\n                        <Button\n                            variant=\"outline\"\n                            className=\"w-full\"\n                            onClick={onCancel}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                ) : (\n                    <LogInButton />\n                )\n            }\n        </div>\n    )\n}\n\nexport default StandardPool"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/deposit-liquidity/call/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\n\nimport { Card, Skeleton } from '@/components/ui'\n\nimport StandardPool from './standard-pool'\n\nimport { useRaydiumPool } from '@/hooks'\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat'\n\nimport type { SolanaDepositLiquidityArgumentsType } from '@/ai'\nimport type { ApiV3PoolInfoStandardItem } from '@raydium-io/raydium-sdk-v2'\n\ninterface Props {\n    toolCallId: string,\n    args: SolanaDepositLiquidityArgumentsType\n}\n\nconst DepositLiquidityCall: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat();\n\n    const { data: pool, isLoading: isPoolLoading } = useRaydiumPool(args.poolId);\n\n    useEffect(() => {\n        if(pool && pool.type !== \"Standard\") {\n            addToolResult(toolCallId, {\n                message: `The Hive does not support ${pool?.type} pools yet.`,\n            });\n        }\n    }, [pool]);\n\n    return (\n        <Card className=\"w-full p-2\">\n            {\n                (isPoolLoading && !pool) ? (\n                    <Skeleton className=\"h-48 w-96\" />\n                ) : (\n                    pool ? (\n                        pool.type === \"Standard\" ? (\n                            <StandardPool \n                                pool={pool as ApiV3PoolInfoStandardItem} \n                                toolCallId={toolCallId} \n                            />\n                        ) : (\n                            <div>\n                                <p>The Hive does not support {pool.type} pools yet.</p>\n                            </div>\n                        )\n                    ) : (\n                        <div>\n                            <p>Pool not found</p>\n                        </div>\n                    )\n                )\n            }\n        </Card>\n    )\n}\n\nexport default DepositLiquidityCall"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;;AAoBA,MAAM,uBAAwC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAE/D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,EAAE,MAAM,IAAI,EAAE,WAAW,aAAa,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,MAAM;IAE3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACN,IAAG,QAAQ,KAAK,IAAI,KAAK,YAAY;gBACjC,cAAc,YAAY;oBACtB,SAAS,CAAC,0BAA0B,EAAE,MAAM,KAAK,WAAW,CAAC;gBACjE;YACJ;QACJ;yCAAG;QAAC;KAAK;IAET,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBAER,AAAC,iBAAiB,CAAC,qBACf,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;mBAEpB,OACI,KAAK,IAAI,KAAK,2BACV,6LAAC,6NAAA,CAAA,UAAY;YACT,MAAM;YACN,YAAY;;;;;iCAGhB,6LAAC;sBACG,cAAA,6LAAC;;oBAAE;oBAA2B,KAAK,IAAI;oBAAC;;;;;;;;;;;iCAIhD,6LAAC;sBACG,cAAA,6LAAC;0BAAE;;;;;;;;;;;;;;;;AAO/B;GAxCM;;QAEwB,+IAAA,CAAA,UAAO;QAEgB,wJAAA,CAAA,iBAAc;;;KAJ7D;uCA0CS"}},
    {"offset": {"line": 7472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7478, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/transaction-hash.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react'\n\nimport Link from 'next/link';\n\nimport { ArrowUpRight } from 'lucide-react';\n\nimport { Button, Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui';\n\nimport { cn } from '@/lib/utils';\n\nimport { truncateAddress } from '@/lib/wallet';\n\ninterface Props {\n    hash: string;\n    className?: string;\n    hideTransactionText?: boolean\n}\n\nconst TransactionHash: React.FC<Props> = ({ hash, className, hideTransactionText }) => {\n    const [copied, setCopied] = useState(false);\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(hash);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n    };\n\n    return (\n        <div className=\"flex flex-row gap-1 items-center\">\n            {\n                !hideTransactionText && (\n                    <p className=\"text-sm\">\n                        Transaction:\n                    </p>\n                )\n            }\n            <TooltipProvider>\n                <Tooltip delayDuration={0}>\n                    <TooltipTrigger asChild>\n                        <p \n                            className={cn(\"text-sm cursor-pointer text-brand-600 hover:bg-neutral-200 dark:hover:bg-neutral-700 rounded-md w-fit px-1\", className)}\n                            onClick={handleCopy}\n                        >\n                            {truncateAddress(hash)}\n                        </p>\n                    </TooltipTrigger>\n                    <TooltipContent side=\"bottom\" className=\"p-2\">\n                        <div className=\"flex flex-row gap-2 items-center\">\n                            <Button variant=\"outline\" size=\"sm\" onClick={handleCopy}>\n                                {copied ? \"Copied\" : \"Copy Hash\"}\n                            </Button>\n                            <Link href={`https://solscan.io/tx/${hash}`} target=\"_blank\">\n                                <Button variant=\"outline\" size=\"sm\">\n                                    Solscan <ArrowUpRight className=\"size-4\" />\n                                </Button>\n                            </Link>\n                        </div>\n                    </TooltipContent>\n                </Tooltip>\n            </TooltipProvider>\n        </div>\n    )\n}\n\nexport default TransactionHash;"],"names":[],"mappings":";;;;AAEA;AAEA;AAIA;AAEA;AAEA;AAJA;AAAA;AAFA;;;AANA;;;;;;;AAoBA,MAAM,kBAAmC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,mBAAmB,EAAE;;IAC9E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACf,UAAU,SAAS,CAAC,SAAS,CAAC;QAC9B,UAAU;QACV,WAAW,IAAM,UAAU,QAAQ;IACvC;IAEA,qBACI,6LAAC;QAAI,WAAU;;YAEP,CAAC,qCACG,6LAAC;gBAAE,WAAU;0BAAU;;;;;;0BAK/B,6LAAC,+HAAA,CAAA,kBAAe;0BACZ,cAAA,6LAAC,+HAAA,CAAA,UAAO;oBAAC,eAAe;;sCACpB,6LAAC,+HAAA,CAAA,iBAAc;4BAAC,OAAO;sCACnB,cAAA,6LAAC;gCACG,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8GAA8G;gCAC5H,SAAS;0CAER,CAAA,GAAA,gHAAA,CAAA,kBAAe,AAAD,EAAE;;;;;;;;;;;sCAGzB,6LAAC,+HAAA,CAAA,iBAAc;4BAAC,MAAK;4BAAS,WAAU;sCACpC,cAAA,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,8HAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,MAAK;wCAAK,SAAS;kDACxC,SAAS,WAAW;;;;;;kDAEzB,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAM,CAAC,sBAAsB,EAAE,MAAM;wCAAE,QAAO;kDAChD,cAAA,6LAAC,8HAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,MAAK;;gDAAK;8DACxB,6LAAC,6NAAA,CAAA,eAAY;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASpE;GA5CM;KAAA;uCA8CS"}},
    {"offset": {"line": 7617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7623, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/deposit-liquidity/result.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport TransactionHash from '@/app/_components/transaction-hash'\n\nimport type { SolanaDepositLiquidityResultBodyType } from '@/ai'\n\ninterface Props {\n    body: SolanaDepositLiquidityResultBodyType\n}\n\nconst DepositLiquidityResult: React.FC<Props> = ({ body }) => {\n    \n    return (\n        <TransactionHash hash={body.transaction} />\n    )\n}\n\nexport default DepositLiquidityResult;"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAYA,MAAM,yBAA0C,CAAC,EAAE,IAAI,EAAE;IAErD,qBACI,6LAAC,6IAAA,CAAA,UAAe;QAAC,MAAM,KAAK,WAAW;;;;;;AAE/C;KALM;uCAOS"}},
    {"offset": {"line": 7647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7653, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/deposit-liquidity/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../../tool-card';\n\nimport DepositLiquidityCall from './call';\nimport DepositLiquidityResult from './result';\n\nimport type { ToolInvocation } from 'ai';\nimport type { SolanaDepositLiquidityArgumentsType, SolanaDepositLiquidityResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst DepositLiquidity: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Liquidity Pools...`}\n            result={{\n                heading: (result: SolanaDepositLiquidityResultType) => result.body\n                    ? `Deposited Liquidity` \n                    : `Failed to deposit liquidity`,\n                body: (result: SolanaDepositLiquidityResultType) => result.body \n                    ? (\n                        <DepositLiquidityResult body={result.body} />\n                    ) : result.message\n            }}\n            prevToolAgent={prevToolAgent}\n            call={{\n                heading: \"Deposit Liquidity\",\n                body: (toolCallId: string, args: SolanaDepositLiquidityArgumentsType) => (\n                    <DepositLiquidityCall toolCallId={toolCallId} args={args} />\n                )\n            }}\n            className=\"w-96 max-w-full\"\n        />\n    )\n}\n\nexport default DepositLiquidity;"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAUA,MAAM,mBAAoC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAE9D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,0BAA0B,CAAC;QACzC,QAAQ;YACJ,SAAS,CAAC,SAA6C,OAAO,IAAI,GAC5D,CAAC,mBAAmB,CAAC,GACrB,CAAC,2BAA2B,CAAC;YACnC,MAAM,CAAC,SAA6C,OAAO,IAAI,iBAEvD,6LAAC,2MAAA,CAAA,UAAsB;oBAAC,MAAM,OAAO,IAAI;;;;;6BACzC,OAAO,OAAO;QAC1B;QACA,eAAe;QACf,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,kNAAA,CAAA,UAAoB;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAE5D;QACA,WAAU;;;;;;AAGtB;KAzBM;uCA2BS"}},
    {"offset": {"line": 7704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7710, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/get-lp-tokens/lp-token.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport type { LpToken } from '@/services/raydium/types';\nimport { Card } from '@/components/ui';\n\ninterface Props {\n    lpToken: LpToken,\n    balance: number,\n    decimals: number\n}\n\nconst LpToken: React.FC<Props> = ({ lpToken, balance, decimals }) => {\n    return (\n        <Card className=\"flex items-center gap-2 p-2\">\n            <div className=\"flex items-center gap-2\">\n                <img \n                    className=\"w-6 h-6 rounded-full\"\n                    src={lpToken.pool.mintA.logoURI} \n                    alt={lpToken.pool.mintA.name} \n                />\n                <img \n                    className=\"w-6 h-6 rounded-full\"\n                    src={lpToken.pool.mintB.logoURI} \n                    alt={lpToken.pool.mintB.name} \n                />\n            </div>\n            <div>\n                <p className=\"text-xs text-neutral-600 dark:text-neutral-400\">{lpToken.pool.mintA.symbol}/{lpToken.pool.mintB.symbol}</p>\n                <p className=\"text-sm font-bold\">{(balance / 10 ** decimals).toLocaleString(undefined, { maximumFractionDigits: 4 })}</p>\n            </div>\n        </Card>\n    )\n}\n\nexport default LpToken"],"names":[],"mappings":";;;;AAKA;AAAA;AALA;;;AAaA,MAAM,UAA2B,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC5D,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,WAAU;wBACV,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO;wBAC/B,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI;;;;;;kCAEhC,6LAAC;wBACG,WAAU;wBACV,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO;wBAC/B,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI;;;;;;;;;;;;0BAGpC,6LAAC;;kCACG,6LAAC;wBAAE,WAAU;;4BAAkD,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;4BAAC;4BAAE,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;;;;;;;kCACpH,6LAAC;wBAAE,WAAU;kCAAqB,CAAC,UAAU,MAAM,QAAQ,EAAE,cAAc,CAAC,WAAW;4BAAE,uBAAuB;wBAAE;;;;;;;;;;;;;;;;;;AAIlI;KArBM;uCAuBS"}},
    {"offset": {"line": 7794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7800, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/get-lp-tokens/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../../tool-card';\n\nimport LpToken from './lp-token';\n\nimport type { ToolInvocation } from 'ai';\nimport type { GetLpTokensResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst GetLpTokens: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting All Balances...`}\n            result={{\n                heading: (result: GetLpTokensResultType) => result.body \n                    ? `Fetched LP Tokens`\n                    : `Failed to fetch LP tokens`,\n                body: (result: GetLpTokensResultType) => result.body && result.body.lpTokens.length > 0\n                    ? (\n                        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n                            {result.body.lpTokens.map((lpToken) => (\n                                <LpToken\n                                    key={lpToken.mint}\n                                    lpToken={lpToken}\n                                    balance={lpToken.amount}\n                                    decimals={lpToken.decimals}\n                                />\n                            ))}\n                        </div>\n                    )\n                    :  \"No LP tokens found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nexport default GetLpTokens;"],"names":[],"mappings":";;;;AAEA;AAEA;;;;AAUA,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAGzD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,uBAAuB,CAAC;QACtC,QAAQ;YACJ,SAAS,CAAC,SAAkC,OAAO,IAAI,GACjD,CAAC,iBAAiB,CAAC,GACnB,CAAC,yBAAyB,CAAC;YACjC,MAAM,CAAC,SAAkC,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,kBAE9E,6LAAC;oBAAI,WAAU;8BACV,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,wBACvB,6LAAC,+MAAA,CAAA,UAAO;4BAEJ,SAAS;4BACT,SAAS,QAAQ,MAAM;4BACvB,UAAU,QAAQ,QAAQ;2BAHrB,QAAQ,IAAI;;;;;;;;;6BAQ9B;QACX;QACA,eAAe;QACf,WAAU;;;;;;AAGtB;KA9BM;uCAgCS"}},
    {"offset": {"line": 7847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7853, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/withdraw-liquidity/call/lp-token-input.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { ApiV3PoolInfoItem } from '@raydium-io/raydium-sdk-v2'\n\nimport TokenBalance from '../../../../utils/swap/token-balance'\n\nimport { cn } from '@/lib/utils'\n\ninterface Props {\n    label: string,\n    amount: string,\n    onChange?: (amount: string) => void,\n    pool: ApiV3PoolInfoItem,\n    lpMint: string,\n    address?: string,\n}\n\nconst LpTokenInput: React.FC<Props> = ({ label, amount, onChange, pool, lpMint, address }) => {\n\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    return (\n        <div className={cn(\n            \"flex flex-col border border-transparent rounded-md p-2 w-full transition-colors bg-neutral-100 dark:bg-neutral-700 gap-2\",\n            isFocused && \"border-brand-600\"\n        )}>\n            <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm font-bold\">\n                    {label}\n                </p>\n                {\n                    pool && address && (\n                        <TokenBalance\n                            address={address}\n                            tokenAddress={lpMint}\n                            tokenSymbol={`${pool.mintA.symbol}/${pool.mintB.symbol}`}\n                            setAmount={onChange}\n                            digits={4}\n                        />\n                    )\n                }\n            </div>\n            <div className={cn(\n                \"flex items-center w-full\",\n            )}>\n                <div className=\"w-full\">\n                    <input \n                        type=\"number\" \n                        value={amount}\n                        onChange={(e) => onChange && onChange(e.target.value)} \n                        onFocus={() => setIsFocused(true)}\n                        onBlur={() => setIsFocused(false)}\n                        className=\"w-full bg-transparent border-none outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                        disabled={!onChange}\n                        placeholder=\"0.00\"\n                    />\n                </div>\n                <div\n                    className=\"w-fit shrink-0 flex items-center rounded-md px-2 py-1 gap-2\"\n                >\n                    <img \n                        src={pool.mintA.logoURI} \n                        alt={pool.mintA.name} \n                        className=\"w-6 h-6 rounded-full\" \n                    />\n                    <img \n                        src={pool.mintB.logoURI} \n                        alt={pool.mintB.name} \n                        className=\"w-6 h-6 rounded-full\" \n                    />\n                    <p className={cn(\n                        \"text-xs font-bold\",\n                        \"opacity-100\"\n                    )}>\n                        {`${pool.mintA.symbol}/${pool.mintB.symbol}`}\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LpTokenInput"],"names":[],"mappings":";;;;AAEA;AAIA;AAEA;;;AARA;;;;AAmBA,MAAM,eAAgC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;;IAErF,MAAM,CAAC,WAAW,aAAa,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAEjD,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb,4HACA,aAAa;;0BAEb,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCACR;;;;;;oBAGD,QAAQ,yBACJ,6LAAC,uLAAA,CAAA,UAAY;wBACT,SAAS;wBACT,cAAc;wBACd,aAAa,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,MAAM,EAAE;wBACxD,WAAW;wBACX,QAAQ;;;;;;;;;;;;0BAKxB,6LAAC;gBAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACb;;kCAEA,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BACG,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK;4BACpD,SAAS,IAAM,aAAa;4BAC5B,QAAQ,IAAM,aAAa;4BAC3B,WAAU;4BACV,UAAU,CAAC;4BACX,aAAY;;;;;;;;;;;kCAGpB,6LAAC;wBACG,WAAU;;0CAEV,6LAAC;gCACG,KAAK,KAAK,KAAK,CAAC,OAAO;gCACvB,KAAK,KAAK,KAAK,CAAC,IAAI;gCACpB,WAAU;;;;;;0CAEd,6LAAC;gCACG,KAAK,KAAK,KAAK,CAAC,OAAO;gCACvB,KAAK,KAAK,KAAK,CAAC,IAAI;gCACpB,WAAU;;;;;;0CAEd,6LAAC;gCAAE,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACX,qBACA;0CAEC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;AAMpE;GA/DM;KAAA;uCAiES"}},
    {"offset": {"line": 7980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7986, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/withdraw-liquidity/call/standard-pool.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport { ChevronDown } from 'lucide-react'\n\nimport { BN } from '@project-serum/anchor'\n\nimport { ApiV3PoolInfoStandardItem, TxVersion } from '@raydium-io/raydium-sdk-v2'\n\nimport Decimal from 'decimal.js'\n\nimport { Button, Separator } from '@/components/ui'\n\nimport LogInButton from '@/app/(app)/_components/log-in-button'\n\nimport LpTokenInput from './lp-token-input'\n\nimport { useSendTransaction, useTokenBalance } from '@/hooks'\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat'\n\nimport { raydiumTransactionClient } from '@/services/raydium'\n\nimport type { SolanaWithdrawLiquidityResultBodyType } from '@/ai'\n\ninterface Props {\n    pool: ApiV3PoolInfoStandardItem,\n    toolCallId: string\n}\n\nconst StandardPool: React.FC<Props> = ({ pool, toolCallId }) => {\n\n    const { addToolResult } = useChat();\n\n    const [amount, setAmount] = useState<string>(\"\");\n    const [amountsLoading, setAmountsLoading] = useState<boolean>(false);\n\n    const [withdrawAmountA, setWithdrawAmountA] = useState<string>(\"0\");\n    const [withdrawAmountB, setWithdrawAmountB] = useState<string>(\"0\");\n\n    const [isWithdrawing, setIsWithdrawing] = useState<boolean>(false);\n\n    const { sendTransaction, wallet } = useSendTransaction();\n\n    const { balance, isLoading: isBalanceLoading } = useTokenBalance(pool.lpMint.address, wallet?.address ?? \"\");\n\n    const handleAmountChange = async (amount: string) => {\n        setAmount(amount);\n        setAmountsLoading(true);\n        const [baseRatio, quoteRatio] = [\n            new Decimal(pool.mintAmountA).div(pool.lpAmount || 1),\n            new Decimal(pool.mintAmountB).div(pool.lpAmount || 1),\n        ]\n        \n        const withdrawAmountDe = new Decimal(amount)\n        const [withdrawAmountA, withdrawAmountB] = [\n            withdrawAmountDe.mul(baseRatio).mul(10 ** (pool?.mintA.decimals || 0)),\n            withdrawAmountDe.mul(quoteRatio).mul(10 ** (pool?.mintB.decimals || 0)),\n        ]\n        setWithdrawAmountA(withdrawAmountA.toFixed(0));\n        setWithdrawAmountB(withdrawAmountB.toFixed(0));\n        setAmountsLoading(false);\n    }\n\n    const onSubmit = async () => {\n        if(!wallet || !wallet.address) return;\n        setIsWithdrawing(true);\n        try {\n            const lpSlippage = 0.1;\n            const raydium = await raydiumTransactionClient(wallet.address);\n            const { transaction } = await raydium.liquidity.removeLiquidity({\n                poolInfo: pool,\n                lpAmount: new BN(Number(amount) * 10 ** pool.lpMint.decimals),\n                baseAmountMin: new BN(new Decimal(withdrawAmountA).mul(1 - lpSlippage).toFixed(0)),\n                quoteAmountMin: new BN(new Decimal(withdrawAmountB).mul(1 - lpSlippage).toFixed(0)),\n                txVersion: TxVersion.V0\n            });\n            const txHash = await sendTransaction(transaction);\n            addToolResult<SolanaWithdrawLiquidityResultBodyType>(toolCallId, {\n                message: \"Withdraw liquidity successful. The user is shown the transaction hash, so you do not have to repeat it. Ask what they want to do next.\",\n                body: {\n                    transaction: txHash,\n                }\n            });\n        } catch (error) {\n            console.error(error);\n        }\n        setIsWithdrawing(false);\n    }\n\n    const onCancel = () => {\n        addToolResult(toolCallId, {\n            message: \"Withdraw liquidity cancelled\",\n        });\n    }\n\n\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className=\"flex justify-between items-center\">\n                <p className=\"text-lg font-bold\">\n                    {pool.mintA.symbol}/{pool.mintB.symbol}\n                </p>\n                <div className=\"flex flex-col items-center\">\n                    <p className=\"text-xs opacity-50\">\n                        7d APR\n                    </p>\n                    <p className=\"text-sm\">\n                        {pool.week.apr}%\n                    </p>\n                </div>\n            </div>\n            <LpTokenInput\n                label={\"LP Token\"}\n                amount={amount}\n                onChange={handleAmountChange}\n                pool={pool}\n                lpMint={pool.lpMint.address}\n                address={wallet?.address ?? \"\"}\n            />\n            <div className=\"flex flex-col items-center gap-2\">\n                <ChevronDown className=\"w-4 h-4\" />\n                <div className=\"flex gap-2 w-full\">\n                    <OutputToken\n                        symbol={pool.mintA.symbol}\n                        amount={withdrawAmountA}\n                        logoURI={pool.mintA.logoURI}\n                        decimals={pool.mintA.decimals}\n                    />\n                    <OutputToken\n                        symbol={pool.mintB.symbol}\n                        amount={withdrawAmountB}\n                        logoURI={pool.mintB.logoURI}\n                        decimals={pool.mintB.decimals}\n                    />\n                </div>\n            </div>\n            <Separator />\n            {\n                wallet ? (\n                    <div className=\"flex flex-col gap-2\">\n                        <Button\n                            variant=\"brand\"\n                            className=\"w-full\"\n                            disabled={!amount || !withdrawAmountA || !withdrawAmountB || isWithdrawing || !balance || isBalanceLoading || Number(amount) > Number(balance) || amountsLoading}\n                            onClick={onSubmit}\n                        >\n                            {\n                                isBalanceLoading || amountsLoading\n                                    ? \"Loading...\"\n                                    : Number(amount) > Number(balance) \n                                        ? \"Insufficient balance\" \n                                        : isWithdrawing \n                                            ? \"Withdrawing...\" \n                                            : \"Withdraw\"\n                            }\n                        </Button>\n                        <Button\n                            variant=\"ghost\"\n                            className=\"w-full\"\n                            onClick={onCancel}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                ) : (\n                    <LogInButton />\n                )\n            }\n        </div>\n    )\n}\n\nexport const OutputToken = ({ symbol, amount, logoURI, decimals }: { symbol: string, amount: string, logoURI: string, decimals: number }) => {\n    return (\n        <div className=\"flex gap-2 items-center bg-neutral-100 dark:bg-neutral-700 rounded-md p-2 flex-1\">\n            <img src={logoURI} alt={symbol} className=\"w-6 h-6 rounded-full\" />\n            <div className=\"flex flex-col\">\n                <p className=\"text-xs font-semibold text-neutral-600 dark:text-neutral-400\">{symbol}</p>\n                <p className=\"text-sm\">{new Decimal(amount).div(10 ** decimals).toNumber().toLocaleString()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default StandardPool"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/withdraw-liquidity/call/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\n\nimport { Card, Skeleton } from '@/components/ui'\n\nimport StandardPool from './standard-pool'\n\nimport { useRaydiumPoolByMint } from '@/hooks'\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat'\n\nimport type { SolanaWithdrawLiquidityArgumentsType } from '@/ai'\nimport type { ApiV3PoolInfoStandardItem } from '@raydium-io/raydium-sdk-v2'\n\ninterface Props {\n    toolCallId: string,\n    args: SolanaWithdrawLiquidityArgumentsType\n}\n\nconst WithdrawLiquidityCall: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat();\n\n    const { data: pool, isLoading: isPoolLoading } = useRaydiumPoolByMint(args.mint);\n\n    useEffect(() => {\n        if(pool && pool.type !== \"Standard\") {\n            addToolResult(toolCallId, {\n                message: `The Hive does not support ${pool?.type} pools yet.`,\n            });\n        }\n    }, [pool]);\n\n    return (\n        <Card className=\"w-full p-2\">\n            {\n                (isPoolLoading && !pool) ? (\n                    <Skeleton className=\"h-48 w-96\" />\n                ) : (\n                    pool ? (\n                        pool.type === \"Standard\" ? (\n                            <StandardPool \n                                pool={pool as ApiV3PoolInfoStandardItem} \n                                toolCallId={toolCallId} \n                            />\n                        ) : (\n                            <div>\n                                <p>The Hive does not support {pool.type} pools yet.</p>\n                            </div>\n                        )\n                    ) : (\n                        <div>\n                            <p>Pool not found</p>\n                        </div>\n                    )\n                )\n            }\n        </Card>\n    )\n}\n\nexport default WithdrawLiquidityCall"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;;AAoBA,MAAM,wBAAyC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAEhE,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,EAAE,MAAM,IAAI,EAAE,WAAW,aAAa,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,IAAI;IAE/E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2CAAE;YACN,IAAG,QAAQ,KAAK,IAAI,KAAK,YAAY;gBACjC,cAAc,YAAY;oBACtB,SAAS,CAAC,0BAA0B,EAAE,MAAM,KAAK,WAAW,CAAC;gBACjE;YACJ;QACJ;0CAAG;QAAC;KAAK;IAET,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBAER,AAAC,iBAAiB,CAAC,qBACf,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;mBAEpB,OACI,KAAK,IAAI,KAAK,2BACV,6LAAC,8NAAA,CAAA,UAAY;YACT,MAAM;YACN,YAAY;;;;;iCAGhB,6LAAC;sBACG,cAAA,6LAAC;;oBAAE;oBAA2B,KAAK,IAAI;oBAAC;;;;;;;;;;;iCAIhD,6LAAC;sBACG,cAAA,6LAAC;0BAAE;;;;;;;;;;;;;;;;AAO/B;GAxCM;;QAEwB,+IAAA,CAAA,UAAO;QAEgB,sKAAA,CAAA,uBAAoB;;;KAJnE;uCA0CS"}},
    {"offset": {"line": 8398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8404, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/withdraw-liquidity/result.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport TransactionHash from '@/app/_components/transaction-hash'\n\nimport type { SolanaWithdrawLiquidityResultBodyType } from '@/ai'\n\ninterface Props {\n    body: SolanaWithdrawLiquidityResultBodyType\n}\n\nconst WithdrawLiquidityResult: React.FC<Props> = ({ body }) => {\n    \n    return (\n        <TransactionHash hash={body.transaction} />\n    )\n}\n\nexport default WithdrawLiquidityResult;"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAYA,MAAM,0BAA2C,CAAC,EAAE,IAAI,EAAE;IAEtD,qBACI,6LAAC,6IAAA,CAAA,UAAe;QAAC,MAAM,KAAK,WAAW;;;;;;AAE/C;KALM;uCAOS"}},
    {"offset": {"line": 8428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8434, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/liquidity/withdraw-liquidity/index.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../../../tool-card';\n\nimport WithdrawLiquidityCall from './call';\nimport WithdrawLiquidityResult from './result';\n\nimport type { ToolInvocation } from 'ai';\nimport type { SolanaWithdrawLiquidityResultType, SolanaWithdrawLiquidityArgumentsType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst WithdrawLiquidity: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Liquidity Pools...`}\n            result={{\n                heading: (result: SolanaWithdrawLiquidityResultType) => result.body\n                    ? `Withdrawn Liquidity` \n                    : `Failed to withdraw liquidity`,\n                body: (result: SolanaWithdrawLiquidityResultType) => result.body \n                    ? (\n                        <WithdrawLiquidityResult body={result.body} />\n                    ) : result.message\n            }}\n            prevToolAgent={prevToolAgent}\n            call={{\n                heading: \"Withdraw Liquidity\",\n                body: (toolCallId: string, args: SolanaWithdrawLiquidityArgumentsType) => (\n                    <WithdrawLiquidityCall toolCallId={toolCallId} args={args} />\n                )\n            }}\n            className=\"w-96 max-w-full\"\n        />\n    )\n}\n\nexport default WithdrawLiquidity;"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAUA,MAAM,oBAAqC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAE/D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,0BAA0B,CAAC;QACzC,QAAQ;YACJ,SAAS,CAAC,SAA8C,OAAO,IAAI,GAC7D,CAAC,mBAAmB,CAAC,GACrB,CAAC,4BAA4B,CAAC;YACpC,MAAM,CAAC,SAA8C,OAAO,IAAI,iBAExD,6LAAC,4MAAA,CAAA,UAAuB;oBAAC,MAAM,OAAO,IAAI;;;;;6BAC1C,OAAO,OAAO;QAC1B;QACA,eAAe;QACf,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,mNAAA,CAAA,UAAqB;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAE7D;QACA,WAAU;;;;;;AAGtB;KAzBM;uCA2BS"}},
    {"offset": {"line": 8485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8517, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/liquid-staking-yields.tsx"],"sourcesContent":["import React from 'react'\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\nimport ToolCard from '../../tool-card';\nimport { Card } from '@/components/ui';\n\nimport type { ToolInvocation } from 'ai';\nimport type { LiquidStakingYieldsResultBodyType, LiquidStakingYieldsResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst LiquidStakingYieldsTool: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Best Liquid Staking Yields...`}   \n            result={{\n                heading: (result: LiquidStakingYieldsResultType) => result.body \n                    ? `Fetched Best Liquid Staking Yields`\n                    : \"No staking yields found\",\n                body: (result: LiquidStakingYieldsResultType) => result.body \n                    ? <LiquidStakingYields body={result.body} /> \n                    : \"No staking yields found\"\n            }}\n            prevToolAgent={prevToolAgent}\n            className=\"w-full\"\n        />\n    )\n}\n\nconst LiquidStakingYields: React.FC<{ body: LiquidStakingYieldsResultBodyType }> = ({ body }) => {\n    const { sendMessage } = useChat();\n\n    const handleStakeClick = (symbol: string) => {\n        sendMessage(`I want to stake SOL using ${symbol}`);\n    };\n\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2\">\n            {\n                body.map((item) => (\n                    <Card \n                        key={item.name}\n                        className=\"flex flex-row gap-2 items-center p-2 cursor-pointer hover:border-brand-600 dark:hover:border-brand-600 transition-all duration-300\"\n                        onClick={() => handleStakeClick(item.tokenData.symbol)}\n                    >\n                        <img \n                            src={item.tokenData.logoURI} \n                            alt={item.name} \n                            className=\"w-6 h-6 rounded-full\" \n                        />\n                        <div className=\"flex flex-col\">\n                            <p className=\"text-sm font-bold\">{item.name} ({item.tokenData.symbol})</p>\n                            <p>{item.yield.toFixed(2)}%</p>\n                        </div>\n                    </Card>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default LiquidStakingYieldsTool;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;;;;;;AAUA,MAAM,0BAA2C,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IACrE,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,qCAAqC,CAAC;QACpD,QAAQ;YACJ,SAAS,CAAC,SAA0C,OAAO,IAAI,GACzD,CAAC,kCAAkC,CAAC,GACpC;YACN,MAAM,CAAC,SAA0C,OAAO,IAAI,iBACtD,6LAAC;oBAAoB,MAAM,OAAO,IAAI;;;;;6BACtC;QACV;QACA,eAAe;QACf,WAAU;;;;;;AAGtB;KAjBM;AAmBN,MAAM,sBAA6E,CAAC,EAAE,IAAI,EAAE;;IACxF,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAE9B,MAAM,mBAAmB,CAAC;QACtB,YAAY,CAAC,0BAA0B,EAAE,QAAQ;IACrD;IAEA,qBACI,6LAAC;QAAI,WAAU;kBAEP,KAAK,GAAG,CAAC,CAAC,qBACN,6LAAC,4HAAA,CAAA,OAAI;gBAED,WAAU;gBACV,SAAS,IAAM,iBAAiB,KAAK,SAAS,CAAC,MAAM;;kCAErD,6LAAC;wBACG,KAAK,KAAK,SAAS,CAAC,OAAO;wBAC3B,KAAK,KAAK,IAAI;wBACd,WAAU;;;;;;kCAEd,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAE,WAAU;;oCAAqB,KAAK,IAAI;oCAAC;oCAAG,KAAK,SAAS,CAAC,MAAM;oCAAC;;;;;;;0CACrE,6LAAC;;oCAAG,KAAK,KAAK,CAAC,OAAO,CAAC;oCAAG;;;;;;;;;;;;;;eAXzB,KAAK,IAAI;;;;;;;;;;AAkBtC;GA9BM;;QACsB,+IAAA,CAAA,UAAO;;;MAD7B;uCAgCS"}},
    {"offset": {"line": 8631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8637, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/stake/call.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Card, Skeleton } from '@/components/ui';\n\nimport Swap from '../../../utils/swap';\n\nimport { useTokenDataByAddress } from '@/hooks';\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\n\nimport type { StakeArgumentsType, StakeResultBodyType } from '@/ai';\n\ninterface Props {\n    toolCallId: string,\n    args: StakeArgumentsType,\n}\n\nconst SwapCallBody: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat();\n\n    const { data: inputTokenData, isLoading: inputTokenLoading } = useTokenDataByAddress(\"So11111111111111111111111111111111111111112\");\n    const { data: outputTokenData, isLoading: outputTokenLoading } = useTokenDataByAddress(args.contractAddress);\n    \n    return (\n        <Card className=\"p-4 max-w-full\">\n            {\n                inputTokenLoading || outputTokenLoading ? (\n                    <Skeleton className=\"h-48 w-96 max-w-full\" />\n                ) : (\n                    <Swap\n                        initialInputToken={inputTokenData}\n                        initialOutputToken={outputTokenData}\n                        inputLabel=\"Stake\"\n                        outputLabel=\"Receive\"\n                        initialInputAmount={args.amount?.toString()}\n                        swapText=\"Stake\"\n                        swappingText=\"Staking...\"\n                        onSuccess={(tx) => {\n                            addToolResult<StakeResultBodyType>(toolCallId, {\n                                message: `Stake successful!`,\n                                body: {\n                                    tx,\n                                    symbol: outputTokenData?.symbol || \"\",\n                                }\n                            });\n                        }}\n                        onError={(error) => {\n                            addToolResult(toolCallId, {\n                                message: `Stake failed: ${error}`,\n                            });\n                        }}\n                        onCancel={() => {\n                            addToolResult(toolCallId, {\n                                message: `Stake cancelled`,\n                            });\n                        }}\n                    />\n                )\n            }\n        </Card>\n    )\n}\n\nexport default SwapCallBody;"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;AAmBA,MAAM,eAAgC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAEvD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,EAAE,MAAM,cAAc,EAAE,WAAW,iBAAiB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE;IACrF,MAAM,EAAE,MAAM,eAAe,EAAE,WAAW,kBAAkB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE,KAAK,eAAe;IAE3G,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBAER,qBAAqB,mCACjB,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;iCAEpB,6LAAC,4KAAA,CAAA,UAAI;YACD,mBAAmB;YACnB,oBAAoB;YACpB,YAAW;YACX,aAAY;YACZ,oBAAoB,KAAK,MAAM,EAAE;YACjC,UAAS;YACT,cAAa;YACb,WAAW,CAAC;gBACR,cAAmC,YAAY;oBAC3C,SAAS,CAAC,iBAAiB,CAAC;oBAC5B,MAAM;wBACF;wBACA,QAAQ,iBAAiB,UAAU;oBACvC;gBACJ;YACJ;YACA,SAAS,CAAC;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,cAAc,EAAE,OAAO;gBACrC;YACJ;YACA,UAAU;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,eAAe,CAAC;gBAC9B;YACJ;;;;;;;;;;;AAMxB;GA7CM;;QAEwB,+IAAA,CAAA,UAAO;QAE8B,qKAAA,CAAA,wBAAqB;QACnB,qKAAA,CAAA,wBAAqB;;;KALpF;uCA+CS"}},
    {"offset": {"line": 8720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8726, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/stake/stake-result.tsx"],"sourcesContent":["import React from 'react';\n\nconst StakeResult: React.FC = () => {\n\n    return (\n        <p className=\"text-xs text-muted-foreground\">\n            Staked Successfully\n        </p>\n    );\n};\n\nexport default StakeResult; "],"names":[],"mappings":";;;;;AAEA,MAAM,cAAwB;IAE1B,qBACI,6LAAC;QAAE,WAAU;kBAAgC;;;;;;AAIrD;KAPM;uCASS"}},
    {"offset": {"line": 8748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8754, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/stake/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport ToolCard from '../../../tool-card';\n\nimport StakeCallBody from './call';\nimport StakeResult from './stake-result';\n\nimport type { StakeResultType, StakeArgumentsType } from '@/ai';\nimport type { ToolInvocation } from 'ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst Stake: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Staking...\"\n            result={{\n                heading: (result: StakeResultType) => result.body \n                    ? \"Stake Complete\"\n                    : \"Failed to Stake\",\n                body: (result: StakeResultType) => result.body \n                    ? <StakeResult />\n                    : result.message\n            }}\n            call={{\n                heading: \"Stake\",\n                body: (toolCallId: string, args: StakeArgumentsType) => (\n                    <StakeCallBody toolCallId={toolCallId} args={args} />\n                )\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"max-w-full\"\n        />\n    );\n};\n\nexport default Stake; "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAUA,MAAM,QAAyB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IACnD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAY;QACZ,QAAQ;YACJ,SAAS,CAAC,SAA4B,OAAO,IAAI,GAC3C,mBACA;YACN,MAAM,CAAC,SAA4B,OAAO,IAAI,iBACxC,6LAAC,mMAAA,CAAA,UAAW;;;;6BACZ,OAAO,OAAO;QACxB;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,wLAAA,CAAA,UAAa;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAErD;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KAxBM;uCA0BS"}},
    {"offset": {"line": 8804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8810, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/unstake/call.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport { Card, Skeleton } from '@/components/ui';\n\nimport Swap from '../../../utils/swap';\n\nimport { useTokenDataByAddress } from '@/hooks';\n\nimport { useChat } from '@/app/(app)/chat/_contexts/chat';\n\nimport { UnstakeResultBodyType, type UnstakeArgumentsType } from '@/ai';\n\ninterface Props {\n    toolCallId: string,\n    args: UnstakeArgumentsType,\n}\n\nconst UnstakeCallBody: React.FC<Props> = ({ toolCallId, args }) => {\n\n    const { addToolResult } = useChat();\n\n    const { data: inputTokenData, isLoading: inputTokenLoading } = useTokenDataByAddress(args.contractAddress);\n    const { data: outputTokenData, isLoading: outputTokenLoading } = useTokenDataByAddress(\"So11111111111111111111111111111111111111112\");\n    \n    return (\n        <Card className=\"p-4 max-w-full\">\n            {\n                inputTokenLoading || outputTokenLoading ? (\n                    <Skeleton className=\"h-48 w-96 max-w-full\" />\n                ) : (\n                    <Swap\n                        initialInputToken={inputTokenData}\n                        initialOutputToken={outputTokenData}\n                        inputLabel=\"Unstake\"\n                        outputLabel=\"Receive\"\n                        initialInputAmount={args.amount?.toString()}\n                        swapText=\"Unstake\"\n                        swappingText=\"Unstaking...\"\n                        onSuccess={(tx) => {\n                            addToolResult<UnstakeResultBodyType>(toolCallId, {\n                                message: `Unstake successful!`,\n                                body: {\n                                    tx,\n                                    inputAmount: args.amount || 0,\n                                    symbol: outputTokenData?.symbol || \"\",\n                                }\n                            });\n                        }}\n                        onError={(error) => {\n                            addToolResult(toolCallId, {\n                                message: `Unstake failed: ${error}`,\n                            });\n                        }}\n                        onCancel={() => {\n                            addToolResult(toolCallId, {\n                                message: `Unstake cancelled`,\n                            });\n                        }}\n                    />\n                )\n            }\n        </Card>\n    )\n}\n\nexport default UnstakeCallBody;"],"names":[],"mappings":";;;;AAIA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;AAmBA,MAAM,kBAAmC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;;IAE1D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,EAAE,MAAM,cAAc,EAAE,WAAW,iBAAiB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE,KAAK,eAAe;IACzG,MAAM,EAAE,MAAM,eAAe,EAAE,WAAW,kBAAkB,EAAE,GAAG,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE;IAEvF,qBACI,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBAER,qBAAqB,mCACjB,6LAAC,gIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;iCAEpB,6LAAC,4KAAA,CAAA,UAAI;YACD,mBAAmB;YACnB,oBAAoB;YACpB,YAAW;YACX,aAAY;YACZ,oBAAoB,KAAK,MAAM,EAAE;YACjC,UAAS;YACT,cAAa;YACb,WAAW,CAAC;gBACR,cAAqC,YAAY;oBAC7C,SAAS,CAAC,mBAAmB,CAAC;oBAC9B,MAAM;wBACF;wBACA,aAAa,KAAK,MAAM,IAAI;wBAC5B,QAAQ,iBAAiB,UAAU;oBACvC;gBACJ;YACJ;YACA,SAAS,CAAC;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,gBAAgB,EAAE,OAAO;gBACvC;YACJ;YACA,UAAU;gBACN,cAAc,YAAY;oBACtB,SAAS,CAAC,iBAAiB,CAAC;gBAChC;YACJ;;;;;;;;;;;AAMxB;GA9CM;;QAEwB,+IAAA,CAAA,UAAO;QAE8B,qKAAA,CAAA,wBAAqB;QACnB,qKAAA,CAAA,wBAAqB;;;KALpF;uCAgDS"}},
    {"offset": {"line": 8894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8900, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/unstake/unstake-result.tsx"],"sourcesContent":["import React from 'react';\n\nconst UnstakeResult: React.FC = () => {\n\n    return (\n        <p className=\"text-xs text-muted-foreground\">\n            Unstaked Successfully\n        </p>\n    );\n};\n\nexport default UnstakeResult; "],"names":[],"mappings":";;;;;AAEA,MAAM,gBAA0B;IAE5B,qBACI,6LAAC;QAAE,WAAU;kBAAgC;;;;;;AAIrD;KAPM;uCASS"}},
    {"offset": {"line": 8922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8928, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/solana/staking/unstake/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport ToolCard from '../../../tool-card';\n\nimport UnstakeCallBody from './call';\nimport UnstakeResult from './unstake-result';\n\nimport type { ToolInvocation } from 'ai';\nimport type { UnstakeResultType, UnstakeArgumentsType } from '@/ai';\n\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst Unstake: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText=\"Unstaking...\"\n            result={{\n                heading: (result: UnstakeResultType) => result.body \n                    ? \"Unstake Complete\"\n                    : \"Failed to Unstake\",\n                body: (result: UnstakeResultType) => result.body \n                    ? <UnstakeResult />\n                    : result.message\n            }}\n            call={{\n                heading: \"Unstake\",\n                body: (toolCallId: string, args: UnstakeArgumentsType) => (\n                    <UnstakeCallBody toolCallId={toolCallId} args={args} />\n                )\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n            className=\"max-w-full\"\n        />\n    );\n};\n\nexport default Unstake; "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAWA,MAAM,UAA2B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IACrD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAY;QACZ,QAAQ;YACJ,SAAS,CAAC,SAA8B,OAAO,IAAI,GAC7C,qBACA;YACN,MAAM,CAAC,SAA8B,OAAO,IAAI,iBAC1C,6LAAC,uMAAA,CAAA,UAAa;;;;6BACd,OAAO,OAAO;QACxB;QACA,MAAM;YACF,SAAS;YACT,MAAM,CAAC,YAAoB,qBACvB,6LAAC,0LAAA,CAAA,UAAe;oBAAC,YAAY;oBAAY,MAAM;;;;;;QAEvD;QACA,aAAa;QACb,eAAe;QACf,WAAU;;;;;;AAGtB;KAxBM;uCA0BS"}},
    {"offset": {"line": 8978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9062, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/twitter/search-recent.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\n\nimport { Button } from '@/components/ui';\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { TweetV2, UserV2 } from 'twitter-api-v2';\nimport type { TwitterSearchRecentResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation\n}\n\nconst SearchRecentTweets: React.FC<Props> = ({ tool }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Getting Recent Tweets...`}\n            result={{\n                heading: (result: TwitterSearchRecentResultType) => result.body \n                    ? `Fetched Recent Tweets`\n                    :  \"Failed to fetch recent tweets\",\n                body: (result: TwitterSearchRecentResultType) => result.body \n                    ? <Tweets tweets={result.body.tweets} />\n                    :  \"No tweets found\"\n            }}\n            defaultOpen={true}\n        />\n    )\n}\n\nconst Tweets = ({ tweets }: { tweets: { tweet: TweetV2; user: UserV2 }[] }) => {\n\n    const [tweetsToShow, setTweetsToShow] = useState(3);\n\n    const handleShowMore = () => {\n        setTweetsToShow(tweetsToShow + 3);\n    }\n\n    return (\n        <div className=\"grid grid-cols-1 gap-4\">\n            {tweets.slice(0, tweetsToShow).map((tweet: { tweet: TweetV2; user: UserV2 }) => (\n                <TweetCard\n                    key={tweet.tweet.id} \n                    tweet={tweet.tweet} \n                    user={tweet.user}\n                />\n            ))}\n            {tweetsToShow < tweets.length && (\n                <Button onClick={handleShowMore} className=\"text-sm text-muted-foreground\">Show More</Button>\n            )}\n        </div>\n    )\n}\n\nconst TweetCard = ({ tweet, user }: { tweet: TweetV2; user: UserV2 }) => {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center gap-2 w-full overflow-hidden\">\n                <img src={user.profile_image_url} className=\"w-6 h-6 rounded-full\" />\n                <p className=\"text-md font-bold truncate\">{user.name}</p>\n                <p className=\"text-sm text-muted-foreground\">@{user.username}</p>\n            </div>\n            <p className=\"text-md\">{tweet.text}</p>\n        </div>\n    )\n}\n\nexport default SearchRecentTweets;"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAFA;;;AAJA;;;;AAgBA,MAAM,qBAAsC,CAAC,EAAE,IAAI,EAAE;IAGjD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,wBAAwB,CAAC;QACvC,QAAQ;YACJ,SAAS,CAAC,SAA0C,OAAO,IAAI,GACzD,CAAC,qBAAqB,CAAC,GACtB;YACP,MAAM,CAAC,SAA0C,OAAO,IAAI,iBACtD,6LAAC;oBAAO,QAAQ,OAAO,IAAI,CAAC,MAAM;;;;;6BACjC;QACX;QACA,aAAa;;;;;;AAGzB;KAlBM;AAoBN,MAAM,SAAS,CAAC,EAAE,MAAM,EAAkD;;IAEtE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,iBAAiB;QACnB,gBAAgB,eAAe;IACnC;IAEA,qBACI,6LAAC;QAAI,WAAU;;YACV,OAAO,KAAK,CAAC,GAAG,cAAc,GAAG,CAAC,CAAC,sBAChC,6LAAC;oBAEG,OAAO,MAAM,KAAK;oBAClB,MAAM,MAAM,IAAI;mBAFX,MAAM,KAAK,CAAC,EAAE;;;;;YAK1B,eAAe,OAAO,MAAM,kBACzB,6LAAC,8HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAgB,WAAU;0BAAgC;;;;;;;;;;;;AAI3F;GAtBM;MAAA;AAwBN,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,IAAI,EAAoC;IAChE,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,KAAK,KAAK,iBAAiB;wBAAE,WAAU;;;;;;kCAC5C,6LAAC;wBAAE,WAAU;kCAA8B,KAAK,IAAI;;;;;;kCACpD,6LAAC;wBAAE,WAAU;;4BAAgC;4BAAE,KAAK,QAAQ;;;;;;;;;;;;;0BAEhE,6LAAC;gBAAE,WAAU;0BAAW,MAAM,IAAI;;;;;;;;;;;;AAG9C;MAXM;uCAaS"}},
    {"offset": {"line": 9197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9223, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/knowledge/search-knowledge.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { SearchKnowledgeResultType } from '@/ai';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst SearchKnowledge: React.FC<Props> = ({ tool, prevToolAgent }) => {\n    \n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Searching Knowledge...`}\n            result={{\n                heading: (result: SearchKnowledgeResultType) => result.body?.knowledge \n                    ? `Searched knowledge base` \n                    : `Failed to fetch knowledge`,\n                body: (result: SearchKnowledgeResultType) => result.body \n                    ? `Included the top ${result.body.knowledge.length} pages in context.`\n                    :  \"No knowledge found\"\n            }}\n            defaultOpen={false}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nexport default SearchKnowledge;"],"names":[],"mappings":";;;;AAEA;;;AAUA,MAAM,kBAAmC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAG7D,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,sBAAsB,CAAC;QACrC,QAAQ;YACJ,SAAS,CAAC,SAAsC,OAAO,IAAI,EAAE,YACvD,CAAC,uBAAuB,CAAC,GACzB,CAAC,yBAAyB,CAAC;YACjC,MAAM,CAAC,SAAsC,OAAO,IAAI,GAClD,CAAC,iBAAiB,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,GACnE;QACX;QACA,aAAa;QACb,eAAe;;;;;;AAG3B;KAnBM;uCAqBS"}},
    {"offset": {"line": 9253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9279, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/invoke/invoke-agent.tsx"],"sourcesContent":["import React from 'react'\n\nimport ToolCard from '../tool-card';\n\nimport type { ToolInvocation } from 'ai';\nimport type { InvokeAgentResultType } from '@/ai/invoke';\n\ninterface Props {\n    tool: ToolInvocation,\n    prevToolAgent?: string,\n}\n\nconst InvokeAgent: React.FC<Props> = ({ tool, prevToolAgent }) => {\n\n    return (\n        <ToolCard \n            tool={tool}\n            loadingText={`Invoking Agent...`}\n            result={{\n                heading: (result: InvokeAgentResultType) => result.body \n                    ? `Invoked ${tool.args.agent}` \n                    : `Failed to invoke agent`,\n                body: (result: InvokeAgentResultType) => result.body \n                    ? result.body.message\n                    : \"Failed to invoke agent\"\n            }}\n            defaultOpen={true}\n            prevToolAgent={prevToolAgent}\n        />\n    )\n}\n\nexport default InvokeAgent;"],"names":[],"mappings":";;;;AAEA;;;AAUA,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAEzD,qBACI,6LAAC,kKAAA,CAAA,UAAQ;QACL,MAAM;QACN,aAAa,CAAC,iBAAiB,CAAC;QAChC,QAAQ;YACJ,SAAS,CAAC,SAAkC,OAAO,IAAI,GACjD,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,GAC5B,CAAC,sBAAsB,CAAC;YAC9B,MAAM,CAAC,SAAkC,OAAO,IAAI,GAC9C,OAAO,IAAI,CAAC,OAAO,GACnB;QACV;QACA,aAAa;QACb,eAAe;;;;;;AAG3B;KAlBM;uCAoBS"}},
    {"offset": {"line": 9309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9595, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/tools/index.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport {\n    Balance,\n    GetWalletAddress,\n    GetTrendingTokens,\n    GetTokenData,\n    Trade,\n    Stake,\n    Unstake,\n    AllBalances,\n    LiquidStakingYields,\n    Transfer,\n    GetTokenAddress,\n    GetTopHolders,\n    BubbleMaps,\n    GetPools,\n    DepositLiquidity,\n    NumHolders,\n    GetLpTokens,\n    WithdrawLiquidity,\n    GetTopTraders,\n    GetTrades,\n    GetTopTokenTraders,\n    PriceChart,\n    GetSmartMoneyInflows,\n} from './solana'\nimport { SearchRecentTweets } from './twitter'\nimport { SearchKnowledge } from './knowledge'\nimport { InvokeAgent } from './invoke'\n\nimport { \n    SOLANA_BALANCE_NAME,\n    SOLANA_GET_WALLET_ADDRESS_NAME,\n    SOLANA_GET_TRENDING_TOKENS_NAME,\n    SOLANA_GET_TOKEN_DATA_NAME,\n    SOLANA_TRADE_NAME,\n    SOLANA_STAKE_NAME,\n    SOLANA_UNSTAKE_NAME,\n    SOLANA_ALL_BALANCES_NAME,\n    TWITTER_SEARCH_RECENT_NAME,\n    SEARCH_KNOWLEDGE_NAME,\n    SOLANA_LIQUID_STAKING_YIELDS_NAME,\n    SOLANA_TRANSFER_NAME,\n    SOLANA_GET_TOKEN_ADDRESS_NAME,\n    SOLANA_TOP_HOLDERS_NAME,\n    SOLANA_BUBBLE_MAPS_NAME,\n    SOLANA_TOKEN_HOLDERS_NAME,\n    SOLANA_GET_POOLS_NAME,\n    INVOKE_AGENT_NAME,\n    SOLANA_DEPOSIT_LIQUIDITY_NAME,\n    SOLANA_GET_LP_TOKENS_NAME,\n    SOLANA_WITHDRAW_LIQUIDITY_NAME,\n    SOLANA_GET_TOP_TRADERS_NAME,\n    SOLANA_GET_TRADER_TRADES_NAME,\n    SOLANA_TOKEN_TOP_TRADERS_NAME,\n    SOLANA_TOKEN_PRICE_CHART_NAME,\n    SOLANA_GET_SMART_MONEY_INFLOWS_NAME,\n} from '@/ai/action-names'\n\nimport type { ToolInvocation as ToolInvocationType } from 'ai'\n\ninterface Props {\n    tool: ToolInvocationType,\n    prevToolAgent?: string,\n}\n\nconst ToolInvocation: React.FC<Props> = ({ tool, prevToolAgent }) => {\n\n    const toolParts = tool.toolName.split(\"-\");\n    const toolName = toolParts.slice(1).join(\"-\");\n    \n    switch(toolName) {\n        case SOLANA_BALANCE_NAME:\n            return <Balance tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_WALLET_ADDRESS_NAME:\n            return <GetWalletAddress tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_TRENDING_TOKENS_NAME:\n            return <GetTrendingTokens tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_TOKEN_DATA_NAME:\n            return <GetTokenData tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TRADE_NAME:\n            return <Trade tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_LIQUID_STAKING_YIELDS_NAME:\n            return <LiquidStakingYields tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TRANSFER_NAME:\n            return <Transfer tool={tool} prevToolAgent={prevToolAgent} />\n        case TWITTER_SEARCH_RECENT_NAME:\n            return <SearchRecentTweets tool={tool} />\n        case SOLANA_STAKE_NAME:\n            return <Stake tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_UNSTAKE_NAME:\n            return <Unstake tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_ALL_BALANCES_NAME:\n            return <AllBalances tool={tool} prevToolAgent={prevToolAgent} />\n        case SEARCH_KNOWLEDGE_NAME:\n            return <SearchKnowledge tool={tool} prevToolAgent={prevToolAgent} />\n        case INVOKE_AGENT_NAME:\n            return <InvokeAgent tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_TOKEN_ADDRESS_NAME:\n            return <GetTokenAddress tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TOP_HOLDERS_NAME:\n            return <GetTopHolders tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_BUBBLE_MAPS_NAME:\n            return <BubbleMaps tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TOKEN_HOLDERS_NAME:\n            return <NumHolders tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_POOLS_NAME:\n            return <GetPools tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_DEPOSIT_LIQUIDITY_NAME:\n            return <DepositLiquidity tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_LP_TOKENS_NAME:\n            return <GetLpTokens tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_WITHDRAW_LIQUIDITY_NAME:\n            return <WithdrawLiquidity tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_TOP_TRADERS_NAME:\n            return <GetTopTraders tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_TRADER_TRADES_NAME:\n            return <GetTrades tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TOKEN_TOP_TRADERS_NAME:\n            return <GetTopTokenTraders tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_TOKEN_PRICE_CHART_NAME:\n            return <PriceChart tool={tool} prevToolAgent={prevToolAgent} />\n        case SOLANA_GET_SMART_MONEY_INFLOWS_NAME:\n            return <GetSmartMoneyInflows tool={tool} prevToolAgent={prevToolAgent} />\n        default:\n            return (\n                <pre className=\"whitespace-pre-wrap\">\n                    {JSON.stringify(tool, null, 2)}\n                </pre>\n            );\n    }\n}\n\nexport default ToolInvocation"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9918, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9944, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/messages.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect } from 'react'\n\nimport { Message, LoadingMessage } from '@/app/(app)/_components/chat';\n\nimport ToolInvocation from './tools';\n\nimport { useScrollAnchor } from '@/app/(app)/chat/_hooks';\n\nimport { useChat } from '../_contexts/chat';\n\nimport type { Message as MessageType } from 'ai';\n\n\ninterface Props {\n    messages: MessageType[];\n    messageClassName?: string;\n}\n\nconst Messages: React.FC<Props> = ({ messages, messageClassName }) => {\n\n    const { isResponseLoading } = useChat();\n\n    const { scrollRef, messagesRef, scrollToBottom } = useScrollAnchor();\n    \n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, scrollToBottom]);\n\n    return (\n        <div className=\"flex-1 h-0 flex flex-col w-full overflow-y-auto max-w-full no-scrollbar\" ref={scrollRef}>\n            <div className=\"messages-container\" ref={messagesRef}>\n                {messages.map((message, index) => (\n                    <Message \n                        key={message.id} \n                        message={message} \n                        className={messageClassName} \n                        ToolComponent={ToolInvocation}\n                        previousMessage={index > 0 ? messages[index - 1] : undefined} \n                        nextMessage={index < messages.length - 1 ? messages[index + 1] : undefined} \n                    />\n                ))}\n                {isResponseLoading && <LoadingMessage />}\n            </div>\n        </div>\n    )\n}\n\nexport default Messages;"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAEA;AAEA;AAFA;AAJA;AAAA;;;AAJA;;;;;;AAoBA,MAAM,WAA4B,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE;;IAE7D,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAEpC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,sJAAA,CAAA,kBAAe,AAAD;IAEjE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACN;QACJ;6BAAG;QAAC;QAAU;KAAe;IAE7B,qBACI,6LAAC;QAAI,WAAU;QAA0E,KAAK;kBAC1F,cAAA,6LAAC;YAAI,WAAU;YAAqB,KAAK;;gBACpC,SAAS,GAAG,CAAC,CAAC,SAAS,sBACpB,6LAAC,0LAAA,CAAA,UAAO;wBAEJ,SAAS;wBACT,WAAW;wBACX,eAAe,2JAAA,CAAA,UAAc;wBAC7B,iBAAiB,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE,GAAG;wBACnD,aAAa,QAAQ,SAAS,MAAM,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,GAAG;uBAL5D,QAAQ,EAAE;;;;;gBAQtB,mCAAqB,6LAAC,4MAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;AAIrD;GA3BM;;QAE4B,+IAAA,CAAA,UAAO;QAEc,sJAAA,CAAA,kBAAe;;;KAJhE;uCA6BS"}},
    {"offset": {"line": 10024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10030, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/chat/_components/chat.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\n\nimport EmptyChat from './empty';\nimport Messages from './messages';\nimport ChatInput from './input';\n\nimport { useChat } from '../_contexts/chat';\n\nconst Chat: React.FC = () => {\n\n    const { messages } = useChat();\n\n    const cleanedMessages = messages.filter(message => message.role !== 'system');\n\n    return (\n        <>\n            <div className=\"h-full w-full flex flex-col items-center relative\">\n                <div className=\"h-full w-full flex flex-col justify-between max-w-full md:max-w-4xl\">\n                    <div className=\"flex-1 overflow-hidden h-0 flex flex-col max-w-full\">\n                        {cleanedMessages.length === 0 ? (\n                            <div className=\"flex flex-col items-center justify-center h-full\">\n                                <EmptyChat />\n                            </div>\n                        ) : (\n                            <>\n                                <Messages \n                                    messages={cleanedMessages}\n                                />\n                                <ChatInput />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Chat;"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AAEA;;;AARA;;;;;AAUA,MAAM,OAAiB;;IAEnB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,UAAO,AAAD;IAE3B,MAAM,kBAAkB,SAAS,MAAM,CAAC,CAAA,UAAW,QAAQ,IAAI,KAAK;IAEpE,qBACI;kBACI,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;8BACV,gBAAgB,MAAM,KAAK,kBACxB,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC,kJAAA,CAAA,UAAS;;;;;;;;;6CAGd;;0CACI,6LAAC,qJAAA,CAAA,UAAQ;gCACL,UAAU;;;;;;0CAEd,6LAAC,kJAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;;;AAQ1C;GA5BM;;QAEmB,+IAAA,CAAA,UAAO;;;KAF1B;uCA8BS"}},
    {"offset": {"line": 10112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/_components/login-button.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect } from 'react'\n\nimport { useLogin, usePrivy } from '@privy-io/react-auth';\n\nimport { useRouter } from 'next/navigation';\n\nimport { Button, Skeleton } from '@/components/ui';\n\nconst LoginButton: React.FC = () => {\n\n    const router = useRouter();\n\n    const { authenticated, ready } = usePrivy();\n\n    const { login } = useLogin({\n        onComplete: (_, __, wasAlreadyAuthenticated) => {\n            if (!wasAlreadyAuthenticated) {\n                router.replace('/chat');\n            }\n        }\n    });\n\n    useEffect(() => {\n        if (authenticated) {\n            router.replace('/chat');\n        }\n    }, [authenticated, router]);\n\n    if (!ready || authenticated) return (\n        <Skeleton className=\"w-24 h-10\" />\n    );\n\n    return (\n        <Button\n            variant={'brand'}\n            onClick={() => login()}\n            disabled={authenticated}\n            className=\"w-24 h-10\"\n        >\n            Login\n        </Button>\n    )\n}\n\nexport default LoginButton;"],"names":[],"mappings":";;;;AAEA;AAIA;AAEA;AAJA;AAAA;AAIA;AAAA;;;AARA;;;;;AAUA,MAAM,cAAwB;;IAE1B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,WAAQ,AAAD;IAExC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,WAAQ,AAAD,EAAE;QACvB,UAAU;oCAAE,CAAC,GAAG,IAAI;gBAChB,IAAI,CAAC,yBAAyB;oBAC1B,OAAO,OAAO,CAAC;gBACnB;YACJ;;IACJ;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,IAAI,eAAe;gBACf,OAAO,OAAO,CAAC;YACnB;QACJ;gCAAG;QAAC;QAAe;KAAO;IAE1B,IAAI,CAAC,SAAS,eAAe,qBACzB,6LAAC,gIAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IAGxB,qBACI,6LAAC,8HAAA,CAAA,SAAM;QACH,SAAS;QACT,SAAS,IAAM;QACf,UAAU;QACV,WAAU;kBACb;;;;;;AAIT;GAlCM;;QAEa,qIAAA,CAAA,YAAS;QAES,sLAAA,CAAA,WAAQ;QAEvB,sLAAA,CAAA,WAAQ;;;KANxB;uCAoCS"}},
    {"offset": {"line": 10192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10198, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/obaji/Desktop/CODING/the-hive-main/app/%28app%29/_hooks/use-experimental-confirmed.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst EXPERIMENTAL_CONFIRMED_EVENT = 'experimentalConfirmedChange';\n\nexport const useExperimentalConfirmed = () => {\n    const [confirmed, setConfirmed] = useState(() => {\n        // Check local storage on initial render\n        if (typeof window !== 'undefined') {\n            return localStorage.getItem('experimentalConfirmed') === 'true';\n        }\n        return false;\n    });\n\n    useEffect(() => {\n        const handleStorageChange = (e: StorageEvent) => {\n            if (e.key === 'experimentalConfirmed') {\n                setConfirmed(e.newValue === 'true');\n            }\n        };\n\n        const handleCustomEvent = (e: CustomEvent) => {\n            setConfirmed(e.detail);\n        };\n\n        if (typeof window !== 'undefined') {\n            window.addEventListener('storage', handleStorageChange);\n            window.addEventListener(EXPERIMENTAL_CONFIRMED_EVENT, handleCustomEvent as EventListener);\n        }\n\n        return () => {\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('storage', handleStorageChange);\n                window.removeEventListener(EXPERIMENTAL_CONFIRMED_EVENT, handleCustomEvent as EventListener);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        // Update local storage when confirmed changes\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('experimentalConfirmed', confirmed.toString());\n            // Dispatch custom event to notify other components\n            window.dispatchEvent(new CustomEvent(EXPERIMENTAL_CONFIRMED_EVENT, { detail: confirmed }));\n        }\n    }, [confirmed]);\n\n    const confirm = () => {\n        setConfirmed(true);\n    };\n\n    return { confirmed, setConfirmed, confirm };\n}"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,+BAA+B;AAE9B,MAAM,2BAA2B;;IACpC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;6CAAE;YACvC,wCAAwC;YACxC,wCAAmC;gBAC/B,OAAO,aAAa,OAAO,CAAC,6BAA6B;YAC7D;;QAEJ;;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACN,MAAM;0EAAsB,CAAC;oBACzB,IAAI,EAAE,GAAG,KAAK,yBAAyB;wBACnC,aAAa,EAAE,QAAQ,KAAK;oBAChC;gBACJ;;YAEA,MAAM;wEAAoB,CAAC;oBACvB,aAAa,EAAE,MAAM;gBACzB;;YAEA,wCAAmC;gBAC/B,OAAO,gBAAgB,CAAC,WAAW;gBACnC,OAAO,gBAAgB,CAAC,8BAA8B;YAC1D;YAEA;sDAAO;oBACH,wCAAmC;wBAC/B,OAAO,mBAAmB,CAAC,WAAW;wBACtC,OAAO,mBAAmB,CAAC,8BAA8B;oBAC7D;gBACJ;;QACJ;6CAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8CAAE;YACN,8CAA8C;YAC9C,wCAAmC;gBAC/B,aAAa,OAAO,CAAC,yBAAyB,UAAU,QAAQ;gBAChE,mDAAmD;gBACnD,OAAO,aAAa,CAAC,IAAI,YAAY,8BAA8B;oBAAE,QAAQ;gBAAU;YAC3F;QACJ;6CAAG;QAAC;KAAU;IAEd,MAAM,UAAU;QACZ,aAAa;IACjB;IAEA,OAAO;QAAE;QAAW;QAAc;IAAQ;AAC9C;GA/Ca"}},
    {"offset": {"line": 10271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}